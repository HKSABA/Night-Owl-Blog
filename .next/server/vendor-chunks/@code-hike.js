"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@code-hike";
exports.ids = ["vendor-chunks/@code-hike"];
exports.modules = {

/***/ "(rsc)/./node_modules/@code-hike/lighter/dist/index.esm.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@code-hike/lighter/dist/index.esm.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LANG_NAMES: () => (/* binding */ G),\n/* harmony export */   THEME_NAMES: () => (/* binding */ h),\n/* harmony export */   UnknownLanguageError: () => (/* binding */ kB),\n/* harmony export */   UnknownThemeError: () => (/* binding */ a),\n/* harmony export */   extractAnnotations: () => (/* binding */ VB),\n/* harmony export */   getThemeColors: () => (/* binding */ zB),\n/* harmony export */   getThemeColorsSync: () => (/* binding */ _B),\n/* harmony export */   highlight: () => (/* binding */ ZB),\n/* harmony export */   highlightSync: () => (/* binding */ jB),\n/* harmony export */   preload: () => (/* binding */ vB)\n/* harmony export */ });\nfunction A(A, B) {\n    var Q = require(\"fs\"), g = require(\"path\"), E = g.parse, C = require(\"os\");\n    var I = function(A, B) {\n        var Q = \"/\";\n        /^([A-Za-z]:)/.test(A) ? Q = \"\" : /^\\\\\\\\/.test(A) && (Q = \"\\\\\\\\\");\n        for(var C = [\n            A\n        ], I = E(A); I.dir !== C[C.length - 1];)C.push(I.dir), I = E(I.dir);\n        return C.reduce(function(A, E) {\n            return A.concat(B.map(function(A) {\n                return g.resolve(Q, E, A);\n            }));\n        }, []);\n    };\n    const D = C.homedir || function() {\n        var A = process.env.HOME, B = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\n        return \"win32\" === process.platform ? process.env.USERPROFILE || process.env.HOMEDRIVE + process.env.HOMEPATH || A || null : \"darwin\" === process.platform ? A || (B ? \"/Users/\" + B : null) : \"linux\" === process.platform ? A || (0 === process.getuid() ? \"/root\" : B ? \"/home/\" + B : null) : A || null;\n    };\n    var w = \"win32\" !== process.platform && Q.realpathSync && \"function\" == typeof Q.realpathSync.native ? Q.realpathSync.native : Q.realpathSync, o = D(), s = function(A, B, Q) {\n        return Q && !1 === Q.preserveSymlinks ? A(B) : B;\n    }, e = function(A, B, Q) {\n        for(var E = function(A, B, Q) {\n            var g = B && B.moduleDirectory ? [].concat(B.moduleDirectory) : [\n                \"node_modules\"\n            ];\n            if (B && \"function\" == typeof B.paths) return B.paths(Q, A, function() {\n                return I(A, g);\n            }, B);\n            var E = I(A, g);\n            return B && B.paths ? E.concat(B.paths) : E;\n        }(B, Q, A), C = 0; C < E.length; C++)E[C] = g.join(E[C], A);\n        return E;\n    };\n    if (\"string\" != typeof A) throw new TypeError(\"Path must be a string.\");\n    var c = function(A, B) {\n        return B || {};\n    }(0, B), i = c.isFile || function(A) {\n        try {\n            var B = Q.statSync(A, {\n                throwIfNoEntry: !1\n            });\n        } catch (A) {\n            if (A && (\"ENOENT\" === A.code || \"ENOTDIR\" === A.code)) return !1;\n            throw A;\n        }\n        return !!B && (B.isFile() || B.isFIFO());\n    }, t = c.readFileSync || Q.readFileSync, M = c.isDirectory || function(A) {\n        try {\n            var B = Q.statSync(A, {\n                throwIfNoEntry: !1\n            });\n        } catch (A) {\n            if (A && (\"ENOENT\" === A.code || \"ENOTDIR\" === A.code)) return !1;\n            throw A;\n        }\n        return !!B && B.isDirectory();\n    }, h = c.realpathSync || function(A) {\n        try {\n            return w(A);\n        } catch (A) {\n            if (\"ENOENT\" !== A.code) throw A;\n        }\n        return A;\n    }, a = c.readPackageSync || function(A, B) {\n        var Q = A(B);\n        try {\n            return JSON.parse(Q);\n        } catch (A) {}\n    };\n    if (c.readFileSync && c.readPackageSync) throw new TypeError(\"`readFileSync` and `readPackageSync` are mutually exclusive.\");\n    var F = c.packageIterator, G = c.extensions || [\n        \".js\"\n    ];\n    c.includeCoreModules;\n    var n = c.basedir || g.dirname(function() {\n        var A = Error.prepareStackTrace;\n        Error.prepareStackTrace = function(A, B) {\n            return B;\n        };\n        var B = (new Error).stack;\n        return Error.prepareStackTrace = A, B[2].getFileName();\n    }()), r = c.filename || n;\n    c.paths = c.paths || [\n        g.join(o, \".node_modules\"),\n        g.join(o, \".node_libraries\")\n    ];\n    var N = s(h, g.resolve(n), c);\n    if (/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/.test(A)) {\n        var L = g.resolve(N, A);\n        \".\" !== A && \"..\" !== A && \"/\" !== A.slice(-1) || (L += \"/\");\n        var H = K(L) || U(L);\n        if (H) return s(h, H, c);\n    } else {\n        var k = function(A, B) {\n            for(var Q = function() {\n                return e(A, B, c);\n            }, E = F ? F(A, B, Q, c) : Q(), C = 0; C < E.length; C++){\n                var I = E[C];\n                if (M(g.dirname(I))) {\n                    var D = K(I);\n                    if (D) return D;\n                    var w = U(I);\n                    if (w) return w;\n                }\n            }\n        }(A, N);\n        if (k) return s(h, k, c);\n    }\n    var R = new Error(\"Cannot find module '\" + A + \"' from '\" + r + \"'\");\n    throw R.code = \"MODULE_NOT_FOUND\", R;\n    function K(A) {\n        var B = Y(g.dirname(A));\n        if (B && B.dir && B.pkg && c.pathFilter) {\n            var Q = g.relative(B.dir, A), E = c.pathFilter(B.pkg, A, Q);\n            E && (A = g.resolve(B.dir, E));\n        }\n        if (i(A)) return A;\n        for(var C = 0; C < G.length; C++){\n            var I = A + G[C];\n            if (i(I)) return I;\n        }\n    }\n    function Y(A) {\n        if (\"\" !== A && \"/\" !== A && !(\"win32\" === process.platform && /^\\w:[/\\\\]*$/.test(A) || /[/\\\\]node_modules[/\\\\]*$/.test(A))) {\n            var B = g.join(s(h, A, c), \"package.json\");\n            if (!i(B)) return Y(g.dirname(A));\n            var Q = a(t, B);\n            return Q && c.packageFilter && (Q = c.packageFilter(Q, A)), {\n                pkg: Q,\n                dir: A\n            };\n        }\n    }\n    function U(A) {\n        var B = g.join(s(h, A, c), \"/package.json\");\n        if (i(B)) {\n            try {\n                var Q = a(t, B);\n            } catch (A) {}\n            if (Q && c.packageFilter && (Q = c.packageFilter(Q, A)), Q && Q.main) {\n                if (\"string\" != typeof Q.main) {\n                    var E = new TypeError(\"package “\" + Q.name + \"” `main` must be a string\");\n                    throw E.code = \"INVALID_PACKAGE_MAIN\", E;\n                }\n                \".\" !== Q.main && \"./\" !== Q.main || (Q.main = \"index\");\n                try {\n                    var C = K(g.resolve(A, Q.main));\n                    if (C) return C;\n                    var I = U(g.resolve(A, Q.main));\n                    if (I) return I;\n                } catch (A) {}\n            }\n        }\n        return K(g.join(A, \"/index\"));\n    }\n}\nasync function B(B, Q) {\n    const g = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! fs */ \"fs\", 19)).then((A)=>A.promises), E = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! path */ \"path\", 19)), { URL: C } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! url */ \"url\", 19)), I = new C(\".\", \"file:///C:/Saba/Builds/night-owl-blog/node_modules/@code-hike/lighter/dist/index.esm.mjs\").pathname;\n    try {\n        let A = E.resolve(I, \"..\", B), C = E.resolve(A, Q);\n        const D = await g.readFile(C, \"utf8\");\n        if (!D) throw new Error(\"no results\");\n        return JSON.parse(D);\n    } catch (C) {\n        const D = A(\"@code-hike/lighter\", {\n            basedir: I\n        });\n        let w = E.resolve(D, \"..\", \"..\", B), o = E.resolve(w, Q);\n        return JSON.parse(await g.readFile(o, \"utf8\"));\n    }\n}\nasync function Q(A) {\n    if (\"function\" == typeof fetch) {\n        const B = await fetch(`https://lighter.codehike.org/${A}.json`);\n        return await B.json();\n    }\n    const B = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! https */ \"https\", 19)), Q = {\n        host: \"lighter.codehike.org\",\n        path: `/${A}.json`,\n        method: \"GET\"\n    };\n    return new Promise((A, g)=>{\n        const E = B.request(Q, (B)=>{\n            let Q = \"\";\n            B.on(\"data\", (A)=>{\n                Q += A;\n            }), B.on(\"end\", ()=>{\n                A(JSON.parse(Q));\n            });\n        });\n        E.on(\"error\", (A)=>{\n            g(A);\n        }), E.end();\n    });\n}\nconst g = (A)=>/^#([A-Fa-f0-9]{3,4}){1,2}$/.test(A), E = (A, B)=>A.match(new RegExp(`.{${B}}`, \"g\")), C = (A)=>parseInt(A.repeat(2 / A.length), 16);\nfunction I(A, B) {\n    return void 0 !== A ? A / 255 : \"number\" != typeof B || B < 0 || B > 1 ? 1 : B;\n}\nfunction D(A, B) {\n    if (!A) return A;\n    const { r: Q, g: D, b: w, a: o } = function(A) {\n        if (!A) return;\n        if (!g(A)) throw new Error(\"Invalid color string, must be a valid hex color\");\n        const B = Math.floor((A.length - 1) / 3), Q = E(A.slice(1), B), [D, w, o, s] = Q.map(C);\n        return {\n            r: D,\n            g: w,\n            b: o,\n            a: I(s, 1)\n        };\n    }(A);\n    return function(A) {\n        if (!A) return;\n        const { r: B, g: Q, b: g, a: E } = A, C = Math.round(255 * E);\n        return `#${B.toString(16).padStart(2, \"0\")}${Q.toString(16).padStart(2, \"0\")}${g.toString(16).padStart(2, \"0\")}${C.toString(16).padStart(2, \"0\")}`;\n    }({\n        r: Q,\n        g: D,\n        b: w,\n        a: o * B\n    });\n}\nfunction w(A, B) {\n    const Q = A.colors || {};\n    if (Q[B]) return Q[B];\n    const g = s[B];\n    if (!g) throw new Error(`Unknown theme color key: ${B}`);\n    return \"string\" == typeof g ? w(A, g) : function(A, B) {\n        const Q = B[A.type];\n        if (Array.isArray(Q)) {\n            const [B, g, ...E] = Q;\n            return B(w(A, g), ...E);\n        }\n        return Q;\n    }(A, g);\n}\nconst o = \"#6FC3DF\", s = {\n    \"editor.foreground\": {\n        dark: \"#bbbbbb\",\n        light: \"#333333\",\n        hc: \"#ffffff\"\n    },\n    \"editorLineNumber.foreground\": {\n        dark: \"#858585\",\n        light: \"#237893\",\n        hc: \"#fffffe\"\n    },\n    \"editor.selectionBackground\": {\n        light: \"#ADD6FF\",\n        dark: \"#264F78\",\n        hc: \"#f3f518\"\n    },\n    \"editor.background\": {\n        light: \"#fffffe\",\n        dark: \"#1E1E1E\",\n        hc: \"#000000\"\n    },\n    \"editorGroupHeader.tabsBackground\": {\n        dark: \"#252526\",\n        light: \"#F3F3F3\"\n    },\n    \"tab.activeBackground\": \"editor.background\",\n    \"tab.activeForeground\": {\n        dark: \"#ffffff\",\n        light: \"#333333\",\n        hc: \"#ffffff\"\n    },\n    \"tab.border\": {\n        dark: \"#252526\",\n        light: \"#F3F3F3\",\n        hc: o\n    },\n    \"tab.activeBorder\": \"tab.activeBackground\",\n    \"tab.inactiveBackground\": {\n        dark: \"#2D2D2D\",\n        light: \"#ECECEC\"\n    },\n    \"tab.inactiveForeground\": {\n        dark: [\n            D,\n            \"tab.activeForeground\",\n            .5\n        ],\n        light: [\n            D,\n            \"tab.activeForeground\",\n            .5\n        ],\n        hc: \"#ffffff\"\n    },\n    \"diffEditor.insertedTextBackground\": {\n        dark: \"#9ccc2c33\",\n        light: \"#9ccc2c40\"\n    },\n    \"diffEditor.removedTextBackground\": {\n        dark: \"#ff000033\",\n        light: \"#ff000033\"\n    },\n    \"diffEditor.insertedLineBackground\": {\n        dark: \"#9bb95533\",\n        light: \"#9bb95533\"\n    },\n    \"diffEditor.removedLineBackground\": {\n        dark: \"#ff000033\",\n        light: \"#ff000033\"\n    },\n    \"icon.foreground\": {\n        dark: \"#C5C5C5\",\n        light: \"#424242\",\n        hc: \"#FFFFFF\"\n    },\n    \"sideBar.background\": {\n        dark: \"#252526\",\n        light: \"#F3F3F3\",\n        hc: \"#000000\"\n    },\n    \"sideBar.foreground\": \"editor.foreground\",\n    \"sideBar.border\": \"sideBar.background\",\n    \"list.inactiveSelectionBackground\": {\n        dark: \"#37373D\",\n        light: \"#E4E6F1\"\n    },\n    \"list.inactiveSelectionForeground\": {},\n    \"list.hoverBackground\": {\n        dark: \"#2A2D2E\",\n        light: \"#F0F0F0\"\n    },\n    \"list.hoverForeground\": {},\n    \"editorGroupHeader.tabsBorder\": {\n        hc: o\n    },\n    \"tab.activeBorderTop\": {\n        hc: o\n    },\n    \"tab.hoverBackground\": \"tab.inactiveBackground\",\n    \"tab.hoverForeground\": \"tab.inactiveForeground\",\n    \"editor.rangeHighlightBackground\": {\n        dark: \"#ffffff0b\",\n        light: \"#fdff0033\"\n    },\n    \"editor.infoForeground\": {\n        dark: \"#3794FF\",\n        light: \"#1a85ff\",\n        hc: \"#3794FF\"\n    },\n    \"input.border\": {\n        hc: o\n    },\n    \"input.background\": {\n        dark: \"#3C3C3C\",\n        light: \"#fffffe\",\n        hc: \"#000000\"\n    },\n    \"input.foreground\": \"editor.foreground\",\n    \"editor.lineHighlightBackground\": {},\n    focusBorder: {\n        light: \"#0090F1\",\n        dark: \"#007FD4\",\n        hc: o\n    },\n    \"editorGroup.border\": {\n        dark: \"#444444\",\n        light: \"#E7E7E7\",\n        hc: o\n    },\n    \"list.activeSelectionBackground\": {\n        dark: \"#094771\",\n        light: \"#0060C0\",\n        hc: \"#000000\"\n    },\n    \"list.activeSelectionForeground\": {\n        dark: \"#fffffe\",\n        light: \"#fffffe\",\n        hc: \"#fffffe\"\n    },\n    \"lighter.inlineBackground\": {\n        dark: [\n            D,\n            \"editor.background\",\n            .9\n        ],\n        light: [\n            D,\n            \"editor.background\",\n            .9\n        ]\n    }\n}, e = new Map, c = new Map;\nasync function i(A) {\n    if (\"string\" == typeof A) {\n        const g = A;\n        if (!h.includes(g)) throw new a(g);\n        if (!e.has(g)) {\n            const A = (async function(A) {\n                try {\n                    return await B(\"themes\", A + \".json\");\n                } catch (B) {\n                    return await Q(`themes/${A}`);\n                }\n            })(g).then((A)=>(c.set(g, A), A));\n            e.set(g, A);\n        }\n        return e.get(g);\n    }\n    return A;\n}\nfunction t(A) {\n    let B = null;\n    if (\"string\" == typeof A) {\n        if (B = c.get(A), !B) throw new Error(\"Syntax highlighting error: theme not loaded\");\n    } else B = A;\n    return function(A) {\n        if (!A) return;\n        const B = A.settings || A.tokenColors || [], Q = {\n            name: A.name || \"unknown-theme\",\n            type: M(A),\n            foreground: \"\",\n            background: \"\",\n            settings: B,\n            colors: A.colors || {},\n            colorNames: A.colorNames\n        }, g = B.find((A)=>!A.scope);\n        if (g) {\n            const { foreground: A, background: B } = (null == g ? void 0 : g.settings) || {}, E = {};\n            A && !Q.colors[\"editor.foreground\"] && (E[\"editor.foreground\"] = A), B && !Q.colors[\"editor.background\"] && (E[\"editor.background\"] = B), Object.keys(E).length > 0 && (Q.colors = Object.assign(Object.assign({}, Q.colors), E)), Q.foreground = A, Q.background = B;\n        }\n        g || (Q.settings = [\n            {\n                settings: {\n                    foreground: w(Q, \"editor.foreground\"),\n                    background: w(Q, \"editor.background\")\n                }\n            },\n            ...Q.settings\n        ]);\n        if (Q.background = Q.background || w(Q, \"editor.background\"), Q.foreground = Q.foreground || w(Q, \"editor.foreground\"), \"from-css\" === A.type && !Q.colorNames) {\n            const A = {};\n            let B = 0;\n            Q.settings = Q.settings.map((Q)=>{\n                const g = Object.assign(Object.assign({}, Q), {\n                    settings: Object.assign({}, Q.settings)\n                }), { foreground: E, background: C } = g.settings || {};\n                return E && !A[E] && (A[E] = `#${B.toString(16).padStart(6, \"0\")}`, B++), C && !A[C] && (A[C] = `#${B.toString(16).padStart(6, \"0\")}`, B++), E && (g.settings.foreground = A[E]), C && (g.settings.background = A[C]), g;\n            }), Q.colorNames = A;\n        }\n        return Q;\n    }(B);\n}\nfunction M(A) {\n    var B;\n    if (\"from-css\" === A.type) return \"from-css\";\n    return \"light\" === (A.type ? A.type : (null === (B = A.name) || void 0 === B ? void 0 : B.toLowerCase().includes(\"light\")) ? \"light\" : \"dark\") ? \"light\" : \"dark\";\n}\nconst h = [\n    \"dark-plus\",\n    \"dracula-soft\",\n    \"dracula\",\n    \"github-dark\",\n    \"github-dark-dimmed\",\n    \"github-from-css\",\n    \"github-light\",\n    \"light-plus\",\n    \"material-darker\",\n    \"material-default\",\n    \"material-from-css\",\n    \"material-lighter\",\n    \"material-ocean\",\n    \"material-palenight\",\n    \"min-dark\",\n    \"min-light\",\n    \"monokai\",\n    \"nord\",\n    \"one-dark-pro\",\n    \"poimandres\",\n    \"slack-dark\",\n    \"slack-ochin\",\n    \"solarized-dark\",\n    \"solarized-light\"\n];\nclass a extends Error {\n    constructor(A){\n        super(`Unknown theme: ${A}`), this.theme = A;\n    }\n}\nfunction F(A) {\n    const B = (B)=>\"colorScheme\" === B ? function(A) {\n            return \"from-css\" === A.type ? \"var(--ch-0)\" : A.type;\n        }(A) : \"foreground\" === B ? A.foreground : \"background\" === B ? A.background : w(A, B);\n    return {\n        colorScheme: B(\"colorScheme\"),\n        foreground: B(\"foreground\"),\n        background: B(\"background\"),\n        lighter: {\n            inlineBackground: B(\"lighter.inlineBackground\")\n        },\n        editor: {\n            background: B(\"editor.background\"),\n            foreground: B(\"editor.foreground\"),\n            lineHighlightBackground: B(\"editor.lineHighlightBackground\"),\n            rangeHighlightBackground: B(\"editor.rangeHighlightBackground\"),\n            infoForeground: B(\"editor.infoForeground\"),\n            selectionBackground: B(\"editor.selectionBackground\")\n        },\n        focusBorder: B(\"focusBorder\"),\n        tab: {\n            activeBackground: B(\"tab.activeBackground\"),\n            activeForeground: B(\"tab.activeForeground\"),\n            inactiveBackground: B(\"tab.inactiveBackground\"),\n            inactiveForeground: B(\"tab.inactiveForeground\"),\n            border: B(\"tab.border\"),\n            activeBorder: B(\"tab.activeBorder\"),\n            activeBorderTop: B(\"tab.activeBorderTop\")\n        },\n        editorGroup: {\n            border: B(\"editorGroup.border\")\n        },\n        editorGroupHeader: {\n            tabsBackground: B(\"editorGroupHeader.tabsBackground\")\n        },\n        editorLineNumber: {\n            foreground: B(\"editorLineNumber.foreground\")\n        },\n        input: {\n            background: B(\"input.background\"),\n            foreground: B(\"input.foreground\"),\n            border: B(\"input.border\")\n        },\n        icon: {\n            foreground: B(\"icon.foreground\")\n        },\n        sideBar: {\n            background: B(\"sideBar.background\"),\n            foreground: B(\"sideBar.foreground\"),\n            border: B(\"sideBar.border\")\n        },\n        list: {\n            activeSelectionBackground: B(\"list.activeSelectionBackground\"),\n            activeSelectionForeground: B(\"list.activeSelectionForeground\"),\n            hoverBackground: B(\"list.hoverBackground\"),\n            hoverForeground: B(\"list.hoverForeground\")\n        }\n    };\n}\nconst G = [\n    \"abap\",\n    \"actionscript-3\",\n    \"ada\",\n    \"apache\",\n    \"apex\",\n    \"apl\",\n    \"applescript\",\n    \"ara\",\n    \"asm\",\n    \"astro\",\n    \"awk\",\n    \"ballerina\",\n    \"bash\",\n    \"bat\",\n    \"batch\",\n    \"be\",\n    \"beancount\",\n    \"berry\",\n    \"bibtex\",\n    \"bicep\",\n    \"blade\",\n    \"c\",\n    \"c#\",\n    \"cadence\",\n    \"cdc\",\n    \"clarity\",\n    \"clj\",\n    \"clojure\",\n    \"cmake\",\n    \"cmd\",\n    \"cobol\",\n    \"codeql\",\n    \"coffee\",\n    \"console\",\n    \"cpp\",\n    \"crystal\",\n    \"cs\",\n    \"csharp\",\n    \"css\",\n    \"cue\",\n    \"cypher\",\n    \"d\",\n    \"dart\",\n    \"dax\",\n    \"diff\",\n    \"docker\",\n    \"dockerfile\",\n    \"dream-maker\",\n    \"elixir\",\n    \"elm\",\n    \"erb\",\n    \"erl\",\n    \"erlang\",\n    \"f#\",\n    \"fish\",\n    \"fs\",\n    \"fsharp\",\n    \"fsl\",\n    \"gdresource\",\n    \"gdscript\",\n    \"gdshader\",\n    \"gherkin\",\n    \"git-commit\",\n    \"git-rebase\",\n    \"glimmer-js\",\n    \"glimmer-ts\",\n    \"glsl\",\n    \"gnuplot\",\n    \"go\",\n    \"graphql\",\n    \"groovy\",\n    \"hack\",\n    \"haml\",\n    \"handlebars\",\n    \"haskell\",\n    \"hbs\",\n    \"hcl\",\n    \"hjson\",\n    \"hlsl\",\n    \"hs\",\n    \"html\",\n    \"http\",\n    \"imba\",\n    \"ini\",\n    \"jade\",\n    \"java\",\n    \"javascript\",\n    \"jinja-html\",\n    \"jison\",\n    \"js\",\n    \"json\",\n    \"json5\",\n    \"jsonc\",\n    \"jsonl\",\n    \"jsonnet\",\n    \"jssm\",\n    \"jsx\",\n    \"julia\",\n    \"kotlin\",\n    \"kql\",\n    \"kusto\",\n    \"latex\",\n    \"less\",\n    \"liquid\",\n    \"lisp\",\n    \"logo\",\n    \"lua\",\n    \"make\",\n    \"makefile\",\n    \"markdown\",\n    \"marko\",\n    \"matlab\",\n    \"md\",\n    \"mdx\",\n    \"mermaid\",\n    \"narrat\",\n    \"nextflow\",\n    \"nginx\",\n    \"nim\",\n    \"nix\",\n    \"objc\",\n    \"objective-c\",\n    \"objective-cpp\",\n    \"ocaml\",\n    \"pascal\",\n    \"perl\",\n    \"perl6\",\n    \"php\",\n    \"plsql\",\n    \"postcss\",\n    \"powerquery\",\n    \"powershell\",\n    \"prisma\",\n    \"prolog\",\n    \"properties\",\n    \"proto\",\n    \"ps\",\n    \"ps1\",\n    \"pug\",\n    \"puppet\",\n    \"purescript\",\n    \"py\",\n    \"python\",\n    \"ql\",\n    \"r\",\n    \"raku\",\n    \"razor\",\n    \"rb\",\n    \"reg\",\n    \"rel\",\n    \"riscv\",\n    \"rs\",\n    \"rst\",\n    \"ruby\",\n    \"rust\",\n    \"sas\",\n    \"sass\",\n    \"scala\",\n    \"scheme\",\n    \"scss\",\n    \"sh\",\n    \"shader\",\n    \"shaderlab\",\n    \"shell\",\n    \"shellscript\",\n    \"shellsession\",\n    \"smalltalk\",\n    \"solidity\",\n    \"sparql\",\n    \"sql\",\n    \"ssh-config\",\n    \"stata\",\n    \"styl\",\n    \"stylus\",\n    \"svelte\",\n    \"swift\",\n    \"system-verilog\",\n    \"tasl\",\n    \"tcl\",\n    \"tex\",\n    \"text\",\n    \"toml\",\n    \"ts\",\n    \"tsx\",\n    \"turtle\",\n    \"twig\",\n    \"txt\",\n    \"typescript\",\n    \"v\",\n    \"vb\",\n    \"verilog\",\n    \"vhdl\",\n    \"vim\",\n    \"viml\",\n    \"vimscript\",\n    \"vue\",\n    \"vue-html\",\n    \"vyper\",\n    \"wasm\",\n    \"wenyan\",\n    \"wgsl\",\n    \"wolfram\",\n    \"xml\",\n    \"xsl\",\n    \"yaml\",\n    \"yml\",\n    \"zenscript\",\n    \"zsh\",\n    \"文言\"\n], n = {\n    abap: \"source.abap\",\n    \"actionscript-3\": \"source.actionscript.3\",\n    ada: \"source.ada\",\n    apache: \"source.apacheconf\",\n    apex: \"source.apex\",\n    apl: \"source.apl\",\n    applescript: \"source.applescript\",\n    ara: \"source.ara\",\n    asm: \"source.asm.x86_64\",\n    astro: \"source.astro\",\n    awk: \"source.awk\",\n    ballerina: \"source.ballerina\",\n    bat: \"source.batchfile\",\n    batch: \"source.batchfile\",\n    beancount: \"text.beancount\",\n    berry: \"source.berry\",\n    be: \"source.berry\",\n    bibtex: \"text.bibtex\",\n    bicep: \"source.bicep\",\n    blade: \"text.html.php.blade\",\n    c: \"source.c\",\n    cadence: \"source.cadence\",\n    cdc: \"source.cadence\",\n    clarity: \"source.clar\",\n    clojure: \"source.clojure\",\n    clj: \"source.clojure\",\n    cmake: \"source.cmake\",\n    cobol: \"source.cobol\",\n    codeql: \"source.ql\",\n    ql: \"source.ql\",\n    coffee: \"source.coffee\",\n    cpp: \"source.cpp\",\n    crystal: \"source.crystal\",\n    csharp: \"source.cs\",\n    \"c#\": \"source.cs\",\n    cs: \"source.cs\",\n    css: \"source.css\",\n    cue: \"source.cue\",\n    cypher: \"source.cypher\",\n    d: \"source.d\",\n    dart: \"source.dart\",\n    dax: \"source.dax\",\n    diff: \"source.diff\",\n    docker: \"source.dockerfile\",\n    dockerfile: \"source.dockerfile\",\n    \"dream-maker\": \"source.dm\",\n    elixir: \"source.elixir\",\n    elm: \"source.elm\",\n    erb: \"text.html.erb\",\n    erlang: \"source.erlang\",\n    erl: \"source.erlang\",\n    fish: \"source.fish\",\n    fsharp: \"source.fsharp\",\n    \"f#\": \"source.fsharp\",\n    fs: \"source.fsharp\",\n    gdresource: \"source.gdresource\",\n    gdscript: \"source.gdscript\",\n    gdshader: \"source.gdshader\",\n    gherkin: \"text.gherkin.feature\",\n    \"git-commit\": \"text.git-commit\",\n    \"git-rebase\": \"text.git-rebase\",\n    \"glimmer-js\": \"source.gjs\",\n    \"glimmer-ts\": \"source.gts\",\n    glsl: \"source.glsl\",\n    gnuplot: \"source.gnuplot\",\n    go: \"source.go\",\n    graphql: \"source.graphql\",\n    groovy: \"source.groovy\",\n    hack: \"source.hack\",\n    haml: \"text.haml\",\n    handlebars: \"text.html.handlebars\",\n    hbs: \"text.html.handlebars\",\n    haskell: \"source.haskell\",\n    hs: \"source.haskell\",\n    hcl: \"source.hcl\",\n    hjson: \"source.hjson\",\n    hlsl: \"source.hlsl\",\n    html: \"text.html.basic\",\n    http: \"source.http\",\n    imba: \"source.imba\",\n    ini: \"source.ini\",\n    properties: \"source.ini\",\n    java: \"source.java\",\n    javascript: \"source.js\",\n    js: \"source.js\",\n    \"jinja-html\": \"text.html.jinja\",\n    jison: \"source.jison\",\n    json: \"source.json\",\n    json5: \"source.json5\",\n    jsonc: \"source.json.comments\",\n    jsonl: \"source.json.lines\",\n    jsonnet: \"source.jsonnet\",\n    jssm: \"source.jssm\",\n    fsl: \"source.jssm\",\n    jsx: \"source.js.jsx\",\n    julia: \"source.julia\",\n    kotlin: \"source.kotlin\",\n    kusto: \"source.kusto\",\n    kql: \"source.kusto\",\n    latex: \"text.tex.latex\",\n    less: \"source.css.less\",\n    liquid: \"text.html.liquid\",\n    lisp: \"source.lisp\",\n    logo: \"source.logo\",\n    lua: \"source.lua\",\n    make: \"source.makefile\",\n    makefile: \"source.makefile\",\n    markdown: \"text.html.markdown\",\n    md: \"text.html.markdown\",\n    marko: \"text.marko\",\n    matlab: \"source.matlab\",\n    mdx: \"source.mdx\",\n    mermaid: \"source.mermaid\",\n    narrat: \"source.narrat\",\n    nextflow: \"source.nextflow\",\n    nginx: \"source.nginx\",\n    nim: \"source.nim\",\n    nix: \"source.nix\",\n    \"objective-c\": \"source.objc\",\n    objc: \"source.objc\",\n    \"objective-cpp\": \"source.objcpp\",\n    ocaml: \"source.ocaml\",\n    pascal: \"source.pascal\",\n    perl: \"source.perl\",\n    php: \"source.php\",\n    plsql: \"source.plsql.oracle\",\n    postcss: \"source.css.postcss\",\n    powerquery: \"source.powerquery\",\n    powershell: \"source.powershell\",\n    ps: \"source.powershell\",\n    ps1: \"source.powershell\",\n    prisma: \"source.prisma\",\n    prolog: \"source.prolog\",\n    proto: \"source.proto\",\n    pug: \"text.pug\",\n    jade: \"text.pug\",\n    puppet: \"source.puppet\",\n    purescript: \"source.purescript\",\n    python: \"source.python\",\n    py: \"source.python\",\n    r: \"source.r\",\n    raku: \"source.perl.6\",\n    perl6: \"source.perl.6\",\n    razor: \"text.aspnetcorerazor\",\n    reg: \"source.reg\",\n    rel: \"source.rel\",\n    riscv: \"source.riscv\",\n    rst: \"source.rst\",\n    ruby: \"source.ruby\",\n    rb: \"source.ruby\",\n    rust: \"source.rust\",\n    rs: \"source.rust\",\n    sas: \"source.sas\",\n    sass: \"source.sass\",\n    scala: \"source.scala\",\n    scheme: \"source.scheme\",\n    scss: \"source.css.scss\",\n    shaderlab: \"source.shaderlab\",\n    shader: \"source.shaderlab\",\n    shellscript: \"source.shell\",\n    bash: \"source.shell\",\n    console: \"source.shell\",\n    sh: \"source.shell\",\n    shell: \"source.shell\",\n    zsh: \"source.shell\",\n    shellsession: \"text.shell-session\",\n    smalltalk: \"source.smalltalk\",\n    solidity: \"source.solidity\",\n    sparql: \"source.sparql\",\n    sql: \"source.sql\",\n    \"ssh-config\": \"source.ssh-config\",\n    stata: \"source.stata\",\n    stylus: \"source.stylus\",\n    styl: \"source.stylus\",\n    svelte: \"source.svelte\",\n    swift: \"source.swift\",\n    \"system-verilog\": \"source.systemverilog\",\n    tasl: \"source.tasl\",\n    tcl: \"source.tcl\",\n    tex: \"text.tex\",\n    toml: \"source.toml\",\n    tsx: \"source.tsx\",\n    turtle: \"source.turtle\",\n    twig: \"text.html.twig\",\n    txt: \"source.txt\",\n    typescript: \"source.ts\",\n    ts: \"source.ts\",\n    v: \"source.v\",\n    vb: \"source.asp.vb.net\",\n    cmd: \"source.asp.vb.net\",\n    verilog: \"source.verilog\",\n    vhdl: \"source.vhdl\",\n    viml: \"source.viml\",\n    vim: \"source.viml\",\n    vimscript: \"source.viml\",\n    \"vue-html\": \"text.html.vue-html\",\n    vue: \"source.vue\",\n    vyper: \"source.vyper\",\n    wasm: \"source.wat\",\n    wenyan: \"source.wenyan\",\n    \"文言\": \"source.wenyan\",\n    wgsl: \"source.wgsl\",\n    wolfram: \"source.wolfram\",\n    xml: \"text.xml\",\n    xsl: \"text.xml.xsl\",\n    yaml: \"source.yaml\",\n    yml: \"source.yaml\",\n    zenscript: \"source.zenscript\"\n}, r = {\n    \"source.abap\": {\n        id: \"abap\",\n        path: \"abap.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.actionscript.3\": {\n        id: \"actionscript-3\",\n        path: \"actionscript-3.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.ada\": {\n        id: \"ada\",\n        path: \"ada.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.apacheconf\": {\n        id: \"apache\",\n        path: \"apache.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.apex\": {\n        id: \"apex\",\n        path: \"apex.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.apl\": {\n        id: \"apl\",\n        path: \"apl.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.java\",\n            \"source.json\",\n            \"source.js\",\n            \"source.css\",\n            \"text.xml\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.applescript\": {\n        id: \"applescript\",\n        path: \"applescript.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.ara\": {\n        id: \"ara\",\n        path: \"ara.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.asm.x86_64\": {\n        id: \"asm\",\n        path: \"asm.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.astro\": {\n        id: \"astro\",\n        path: \"astro.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.tsx\",\n            \"source.css.postcss\",\n            \"source.css.less\",\n            \"source.css.scss\",\n            \"source.css\",\n            \"source.sass\",\n            \"source.stylus\",\n            \"source.ts\",\n            \"source.js\",\n            \"source.json\"\n        ]\n    },\n    \"source.awk\": {\n        id: \"awk\",\n        path: \"awk.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.ballerina\": {\n        id: \"ballerina\",\n        path: \"ballerina.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.batchfile\": {\n        id: \"bat\",\n        path: \"bat.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.beancount\": {\n        id: \"beancount\",\n        path: \"beancount.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.berry\": {\n        id: \"berry\",\n        path: \"berry.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.bibtex\": {\n        id: \"bibtex\",\n        path: \"bibtex.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.bicep\": {\n        id: \"bicep\",\n        path: \"bicep.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.html.php.blade\": {\n        id: \"blade\",\n        path: \"blade.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.java\",\n            \"source.css\",\n            \"source.json\",\n            \"source.js\",\n            \"source.sql\",\n            \"text.xml\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.c\": {\n        id: \"c\",\n        path: \"c.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.cadence\": {\n        id: \"cadence\",\n        path: \"cadence.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.clar\": {\n        id: \"clarity\",\n        path: \"clarity.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.clojure\": {\n        id: \"clojure\",\n        path: \"clojure.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.cmake\": {\n        id: \"cmake\",\n        path: \"cmake.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.cobol\": {\n        id: \"cobol\",\n        path: \"cobol.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.css\",\n            \"source.js\",\n            \"source.java\",\n            \"text.html.basic\",\n            \"source.sql\"\n        ]\n    },\n    \"source.ql\": {\n        id: \"codeql\",\n        path: \"codeql.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.gnuplot\",\n            \"source.haskell\",\n            \"text.tex\",\n            \"source.stylus\",\n            \"source.sass\",\n            \"source.glsl\",\n            \"text.bibtex\",\n            \"text.tex.latex\",\n            \"source.elixir\",\n            \"source.erlang\",\n            \"text.html.handlebars\",\n            \"source.dart\",\n            \"source.fsharp\",\n            \"source.cs\",\n            \"source.tsx\",\n            \"source.ts\",\n            \"source.shell\",\n            \"source.scala\",\n            \"source.rust\",\n            \"source.julia\",\n            \"source.python\",\n            \"source.powershell\",\n            \"source.perl.6\",\n            \"source.css.scss\",\n            \"source.swift\",\n            \"source.objc\",\n            \"source.css.less\",\n            \"source.json.comments\",\n            \"source.json\",\n            \"source.js\",\n            \"text.pug\",\n            \"source.groovy\",\n            \"source.go\",\n            \"text.git-rebase\",\n            \"text.git-commit\",\n            \"source.dockerfile\",\n            \"source.diff\",\n            \"source.cpp\",\n            \"source.c\",\n            \"source.coffee\",\n            \"source.clojure\",\n            \"source.batchfile\",\n            \"source.yaml\",\n            \"text.xml.xsl\",\n            \"text.xml\",\n            \"source.asp.vb.net\",\n            \"source.sql\",\n            \"source.php\",\n            \"source.ruby\",\n            \"source.r\",\n            \"source.perl\",\n            \"source.makefile\",\n            \"source.lua\",\n            \"source.java\",\n            \"source.ini\",\n            \"text.html.basic\",\n            \"source.css\",\n            \"text.html.markdown\"\n        ]\n    },\n    \"source.coffee\": {\n        id: \"coffee\",\n        path: \"coffee.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.js\"\n        ]\n    },\n    \"source.cpp\": {\n        id: \"cpp\",\n        path: \"cpp.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.c\",\n            \"source.sql\",\n            \"source.glsl\"\n        ]\n    },\n    \"source.crystal\": {\n        id: \"crystal\",\n        path: \"crystal.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.shell\",\n            \"source.js\",\n            \"source.c\",\n            \"source.css\",\n            \"source.sql\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.cs\": {\n        id: \"csharp\",\n        path: \"csharp.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.css\": {\n        id: \"css\",\n        path: \"css.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.cue\": {\n        id: \"cue\",\n        path: \"cue.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.cypher\": {\n        id: \"cypher\",\n        path: \"cypher.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.d\": {\n        id: \"d\",\n        path: \"d.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.dart\": {\n        id: \"dart\",\n        path: \"dart.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.dax\": {\n        id: \"dax\",\n        path: \"dax.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.diff\": {\n        id: \"diff\",\n        path: \"diff.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.dockerfile\": {\n        id: \"docker\",\n        path: \"docker.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.dm\": {\n        id: \"dream-maker\",\n        path: \"dream-maker.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.elixir\": {\n        id: \"elixir\",\n        path: \"elixir.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.css\",\n            \"source.js\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.elm\": {\n        id: \"elm\",\n        path: \"elm.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.c\",\n            \"source.glsl\"\n        ]\n    },\n    \"text.html.erb\": {\n        id: \"erb\",\n        path: \"erb.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.java\",\n            \"source.lua\",\n            \"source.shell\",\n            \"source.c\",\n            \"source.sql\",\n            \"text.xml\",\n            \"source.css\",\n            \"source.js\",\n            \"source.ruby\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.erlang\": {\n        id: \"erlang\",\n        path: \"erlang.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.fish\": {\n        id: \"fish\",\n        path: \"fish.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.fsharp\": {\n        id: \"fsharp\",\n        path: \"fsharp.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.gnuplot\",\n            \"source.haskell\",\n            \"text.tex\",\n            \"source.stylus\",\n            \"source.sass\",\n            \"source.glsl\",\n            \"text.bibtex\",\n            \"text.tex.latex\",\n            \"source.elixir\",\n            \"source.erlang\",\n            \"text.html.handlebars\",\n            \"source.dart\",\n            \"source.cs\",\n            \"source.tsx\",\n            \"source.ts\",\n            \"source.shell\",\n            \"source.scala\",\n            \"source.rust\",\n            \"source.julia\",\n            \"source.python\",\n            \"source.powershell\",\n            \"source.perl.6\",\n            \"source.css.scss\",\n            \"source.swift\",\n            \"source.objc\",\n            \"source.css.less\",\n            \"source.json.comments\",\n            \"source.json\",\n            \"source.js\",\n            \"text.pug\",\n            \"source.groovy\",\n            \"source.go\",\n            \"text.git-rebase\",\n            \"text.git-commit\",\n            \"source.dockerfile\",\n            \"source.diff\",\n            \"source.cpp\",\n            \"source.c\",\n            \"source.coffee\",\n            \"source.clojure\",\n            \"source.batchfile\",\n            \"source.yaml\",\n            \"text.xml.xsl\",\n            \"text.xml\",\n            \"source.asp.vb.net\",\n            \"source.sql\",\n            \"source.php\",\n            \"source.ruby\",\n            \"source.r\",\n            \"source.perl\",\n            \"source.makefile\",\n            \"source.lua\",\n            \"source.java\",\n            \"source.ini\",\n            \"text.html.basic\",\n            \"source.css\",\n            \"text.html.markdown\"\n        ]\n    },\n    \"source.gdresource\": {\n        id: \"gdresource\",\n        path: \"gdresource.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.gdscript\",\n            \"source.gdshader\"\n        ]\n    },\n    \"source.gdscript\": {\n        id: \"gdscript\",\n        path: \"gdscript.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.gdshader\": {\n        id: \"gdshader\",\n        path: \"gdshader.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.gherkin.feature\": {\n        id: \"gherkin\",\n        path: \"gherkin.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.git-commit\": {\n        id: \"git-commit\",\n        path: \"git-commit.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.diff\"\n        ]\n    },\n    \"text.git-rebase\": {\n        id: \"git-rebase\",\n        path: \"git-rebase.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.shell\"\n        ]\n    },\n    \"source.gjs\": {\n        id: \"glimmer-js\",\n        path: \"glimmer-js.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.yaml\",\n            \"source.css\",\n            \"text.html.basic\",\n            \"text.html.handlebars\",\n            \"source.js\"\n        ]\n    },\n    \"source.gts\": {\n        id: \"glimmer-ts\",\n        path: \"glimmer-ts.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.yaml\",\n            \"source.js\",\n            \"source.css\",\n            \"text.html.basic\",\n            \"text.html.handlebars\",\n            \"source.ts\"\n        ]\n    },\n    \"source.glsl\": {\n        id: \"glsl\",\n        path: \"glsl.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.c\"\n        ]\n    },\n    \"source.gnuplot\": {\n        id: \"gnuplot\",\n        path: \"gnuplot.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.go\": {\n        id: \"go\",\n        path: \"go.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.graphql\": {\n        id: \"graphql\",\n        path: \"graphql.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.tsx\",\n            \"source.js.jsx\",\n            \"source.ts\",\n            \"source.js\"\n        ]\n    },\n    \"source.groovy\": {\n        id: \"groovy\",\n        path: \"groovy.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.hack\": {\n        id: \"hack\",\n        path: \"hack.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.css\",\n            \"source.js\",\n            \"source.sql\",\n            \"text.html.basic\"\n        ]\n    },\n    \"text.haml\": {\n        id: \"haml\",\n        path: \"haml.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.gnuplot\",\n            \"source.haskell\",\n            \"text.tex\",\n            \"source.stylus\",\n            \"source.glsl\",\n            \"text.bibtex\",\n            \"text.tex.latex\",\n            \"source.elixir\",\n            \"source.erlang\",\n            \"text.html.handlebars\",\n            \"source.dart\",\n            \"source.fsharp\",\n            \"source.cs\",\n            \"source.tsx\",\n            \"source.ts\",\n            \"source.scala\",\n            \"source.rust\",\n            \"source.julia\",\n            \"source.python\",\n            \"source.powershell\",\n            \"source.perl.6\",\n            \"source.css.scss\",\n            \"source.swift\",\n            \"source.objc\",\n            \"source.css.less\",\n            \"source.json.comments\",\n            \"source.json\",\n            \"text.pug\",\n            \"source.groovy\",\n            \"source.go\",\n            \"text.git-rebase\",\n            \"text.git-commit\",\n            \"source.dockerfile\",\n            \"source.diff\",\n            \"source.cpp\",\n            \"source.clojure\",\n            \"source.batchfile\",\n            \"source.yaml\",\n            \"text.xml.xsl\",\n            \"source.asp.vb.net\",\n            \"source.php\",\n            \"source.r\",\n            \"source.perl\",\n            \"source.makefile\",\n            \"source.java\",\n            \"source.ini\",\n            \"source.lua\",\n            \"source.shell\",\n            \"source.c\",\n            \"source.sql\",\n            \"text.xml\",\n            \"text.html.basic\",\n            \"source.css\",\n            \"text.html.markdown\",\n            \"source.coffee\",\n            \"source.sass\",\n            \"source.js\",\n            \"source.ruby\"\n        ]\n    },\n    \"text.html.handlebars\": {\n        id: \"handlebars\",\n        path: \"handlebars.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.yaml\",\n            \"source.js\",\n            \"source.css\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.haskell\": {\n        id: \"haskell\",\n        path: \"haskell.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.hcl\": {\n        id: \"hcl\",\n        path: \"hcl.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.hjson\": {\n        id: \"hjson\",\n        path: \"hjson.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.hlsl\": {\n        id: \"hlsl\",\n        path: \"hlsl.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.html.basic\": {\n        id: \"html\",\n        path: \"html.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.css\",\n            \"source.js\"\n        ]\n    },\n    \"source.http\": {\n        id: \"http\",\n        path: \"http.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.tsx\",\n            \"source.js.jsx\",\n            \"source.ts\",\n            \"source.js\",\n            \"source.java\",\n            \"source.graphql\",\n            \"text.xml\",\n            \"source.json\",\n            \"source.shell\"\n        ]\n    },\n    \"source.imba\": {\n        id: \"imba\",\n        path: \"imba.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.ini\": {\n        id: \"ini\",\n        path: \"ini.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.java\": {\n        id: \"java\",\n        path: \"java.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.js\": {\n        id: \"javascript\",\n        path: \"javascript.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.html.jinja\": {\n        id: \"jinja-html\",\n        path: \"jinja-html.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.css\",\n            \"source.js\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.jison\": {\n        id: \"jison\",\n        path: \"jison.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.js\"\n        ]\n    },\n    \"source.json\": {\n        id: \"json\",\n        path: \"json.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.json5\": {\n        id: \"json5\",\n        path: \"json5.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.json.comments\": {\n        id: \"jsonc\",\n        path: \"jsonc.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.json.lines\": {\n        id: \"jsonl\",\n        path: \"jsonl.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.jsonnet\": {\n        id: \"jsonnet\",\n        path: \"jsonnet.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.jssm\": {\n        id: \"jssm\",\n        path: \"jssm.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.js.jsx\": {\n        id: \"jsx\",\n        path: \"jsx.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.julia\": {\n        id: \"julia\",\n        path: \"julia.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.c\",\n            \"source.glsl\",\n            \"source.sql\",\n            \"source.r\",\n            \"source.js\",\n            \"source.python\",\n            \"source.cpp\"\n        ]\n    },\n    \"source.kotlin\": {\n        id: \"kotlin\",\n        path: \"kotlin.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.kusto\": {\n        id: \"kusto\",\n        path: \"kusto.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.tex.latex\": {\n        id: \"latex\",\n        path: \"latex.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.glsl\",\n            \"source.shell\",\n            \"source.sql\",\n            \"source.cpp\",\n            \"source.c\",\n            \"source.r\",\n            \"source.gnuplot\",\n            \"source.scala\",\n            \"source.rust\",\n            \"source.yaml\",\n            \"source.python\",\n            \"source.ts\",\n            \"source.js\",\n            \"source.ruby\",\n            \"source.julia\",\n            \"source.lua\",\n            \"source.java\",\n            \"text.xml\",\n            \"text.html.basic\",\n            \"source.haskell\",\n            \"source.css\",\n            \"text.tex\"\n        ]\n    },\n    \"source.css.less\": {\n        id: \"less\",\n        path: \"less.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.css\"\n        ]\n    },\n    \"text.html.liquid\": {\n        id: \"liquid\",\n        path: \"liquid.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.js\",\n            \"source.json\",\n            \"source.css\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.lisp\": {\n        id: \"lisp\",\n        path: \"lisp.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.logo\": {\n        id: \"logo\",\n        path: \"logo.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.lua\": {\n        id: \"lua\",\n        path: \"lua.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.c\"\n        ]\n    },\n    \"source.makefile\": {\n        id: \"make\",\n        path: \"make.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.html.markdown\": {\n        id: \"markdown\",\n        path: \"markdown.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.gnuplot\",\n            \"source.haskell\",\n            \"text.tex\",\n            \"source.stylus\",\n            \"source.sass\",\n            \"source.glsl\",\n            \"text.bibtex\",\n            \"text.tex.latex\",\n            \"source.elixir\",\n            \"source.erlang\",\n            \"text.html.handlebars\",\n            \"source.dart\",\n            \"source.fsharp\",\n            \"source.cs\",\n            \"source.tsx\",\n            \"source.ts\",\n            \"source.shell\",\n            \"source.scala\",\n            \"source.rust\",\n            \"source.julia\",\n            \"source.python\",\n            \"source.powershell\",\n            \"source.perl.6\",\n            \"source.css.scss\",\n            \"source.swift\",\n            \"source.objc\",\n            \"source.css.less\",\n            \"source.json.comments\",\n            \"source.json\",\n            \"source.js\",\n            \"text.pug\",\n            \"source.groovy\",\n            \"source.go\",\n            \"text.git-rebase\",\n            \"text.git-commit\",\n            \"source.dockerfile\",\n            \"source.diff\",\n            \"source.cpp\",\n            \"source.c\",\n            \"source.coffee\",\n            \"source.clojure\",\n            \"source.batchfile\",\n            \"source.yaml\",\n            \"text.xml.xsl\",\n            \"text.xml\",\n            \"source.asp.vb.net\",\n            \"source.sql\",\n            \"source.php\",\n            \"source.ruby\",\n            \"source.r\",\n            \"source.perl\",\n            \"source.makefile\",\n            \"source.lua\",\n            \"source.java\",\n            \"source.ini\",\n            \"text.html.basic\",\n            \"source.css\"\n        ]\n    },\n    \"text.marko\": {\n        id: \"marko\",\n        path: \"marko.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.js\",\n            \"source.css.scss\",\n            \"source.css.less\",\n            \"source.css\"\n        ]\n    },\n    \"source.matlab\": {\n        id: \"matlab\",\n        path: \"matlab.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.mdx\": {\n        id: \"mdx\",\n        path: \"mdx.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.gnuplot\",\n            \"text.tex\",\n            \"source.stylus\",\n            \"source.sass\",\n            \"text.bibtex\",\n            \"text.tex.latex\",\n            \"text.html.handlebars\",\n            \"source.dart\",\n            \"source.fsharp\",\n            \"source.powershell\",\n            \"source.perl.6\",\n            \"source.json.comments\",\n            \"text.pug\",\n            \"source.groovy\",\n            \"text.git-rebase\",\n            \"text.git-commit\",\n            \"source.batchfile\",\n            \"text.xml.xsl\",\n            \"source.asp.vb.net\",\n            \"source.php\",\n            \"source.js.jsx\",\n            \"source.glsl\",\n            \"source.ts\",\n            \"source.swift\",\n            \"text.xml\",\n            \"source.sql\",\n            \"text.shell-session\",\n            \"source.shell\",\n            \"source.css.scss\",\n            \"source.scala\",\n            \"source.rust\",\n            \"source.ruby\",\n            \"source.r\",\n            \"source.python\",\n            \"source.perl\",\n            \"source.objc\",\n            \"text.html.markdown\",\n            \"source.makefile\",\n            \"source.lua\",\n            \"source.css.less\",\n            \"source.kotlin\",\n            \"source.julia\",\n            \"source.json\",\n            \"source.js\",\n            \"source.java\",\n            \"source.ini\",\n            \"text.html.basic\",\n            \"source.haskell\",\n            \"source.graphql\",\n            \"source.go\",\n            \"source.erlang\",\n            \"source.elm\",\n            \"source.elixir\",\n            \"source.dockerfile\",\n            \"source.diff\",\n            \"source.css\",\n            \"source.cs\",\n            \"source.cpp\",\n            \"source.coffee\",\n            \"source.clojure\",\n            \"source.c\",\n            \"source.yaml\",\n            \"source.toml\",\n            \"source.tsx\"\n        ]\n    },\n    \"source.mermaid\": {\n        id: \"mermaid\",\n        path: \"mermaid.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.narrat\": {\n        id: \"narrat\",\n        path: \"narrat.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.nextflow\": {\n        id: \"nextflow\",\n        path: \"nextflow.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.nginx\": {\n        id: \"nginx\",\n        path: \"nginx.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.c\",\n            \"source.lua\"\n        ]\n    },\n    \"source.nim\": {\n        id: \"nim\",\n        path: \"nim.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.gnuplot\",\n            \"source.haskell\",\n            \"text.tex\",\n            \"source.stylus\",\n            \"source.sass\",\n            \"text.bibtex\",\n            \"text.tex.latex\",\n            \"source.elixir\",\n            \"source.erlang\",\n            \"text.html.handlebars\",\n            \"source.dart\",\n            \"source.fsharp\",\n            \"source.cs\",\n            \"source.tsx\",\n            \"source.ts\",\n            \"source.shell\",\n            \"source.scala\",\n            \"source.rust\",\n            \"source.julia\",\n            \"source.python\",\n            \"source.powershell\",\n            \"source.perl.6\",\n            \"source.css.scss\",\n            \"source.swift\",\n            \"source.objc\",\n            \"source.css.less\",\n            \"source.json.comments\",\n            \"source.json\",\n            \"text.pug\",\n            \"source.groovy\",\n            \"source.go\",\n            \"text.git-rebase\",\n            \"text.git-commit\",\n            \"source.dockerfile\",\n            \"source.diff\",\n            \"source.cpp\",\n            \"source.coffee\",\n            \"source.clojure\",\n            \"source.batchfile\",\n            \"source.yaml\",\n            \"text.xml.xsl\",\n            \"source.asp.vb.net\",\n            \"source.sql\",\n            \"source.php\",\n            \"source.ruby\",\n            \"source.r\",\n            \"source.perl\",\n            \"source.makefile\",\n            \"source.lua\",\n            \"source.ini\",\n            \"source.java\",\n            \"text.html.markdown\",\n            \"source.glsl\",\n            \"source.css\",\n            \"source.js\",\n            \"text.xml\",\n            \"text.html.basic\",\n            \"source.c\"\n        ]\n    },\n    \"source.nix\": {\n        id: \"nix\",\n        path: \"nix.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.objc\": {\n        id: \"objective-c\",\n        path: \"objective-c.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.objcpp\": {\n        id: \"objective-cpp\",\n        path: \"objective-cpp.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.ocaml\": {\n        id: \"ocaml\",\n        path: \"ocaml.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.pascal\": {\n        id: \"pascal\",\n        path: \"pascal.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.perl\": {\n        id: \"perl\",\n        path: \"perl.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.java\",\n            \"source.sql\",\n            \"source.js\",\n            \"source.css\",\n            \"text.xml\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.php\": {\n        id: \"php\",\n        path: \"php.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.java\",\n            \"source.css\",\n            \"source.json\",\n            \"source.js\",\n            \"source.sql\",\n            \"text.xml\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.plsql.oracle\": {\n        id: \"plsql\",\n        path: \"plsql.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.css.postcss\": {\n        id: \"postcss\",\n        path: \"postcss.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.powerquery\": {\n        id: \"powerquery\",\n        path: \"powerquery.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.powershell\": {\n        id: \"powershell\",\n        path: \"powershell.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.prisma\": {\n        id: \"prisma\",\n        path: \"prisma.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.prolog\": {\n        id: \"prolog\",\n        path: \"prolog.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.proto\": {\n        id: \"proto\",\n        path: \"proto.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.pug\": {\n        id: \"pug\",\n        path: \"pug.tmLanguage.json\",\n        embeddedScopes: [\n            \"text.html.basic\",\n            \"source.coffee\",\n            \"source.stylus\",\n            \"source.css.scss\",\n            \"source.sass\",\n            \"source.css\",\n            \"source.js\"\n        ]\n    },\n    \"source.puppet\": {\n        id: \"puppet\",\n        path: \"puppet.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.purescript\": {\n        id: \"purescript\",\n        path: \"purescript.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.python\": {\n        id: \"python\",\n        path: \"python.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.r\": {\n        id: \"r\",\n        path: \"r.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.perl.6\": {\n        id: \"raku\",\n        path: \"raku.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.aspnetcorerazor\": {\n        id: \"razor\",\n        path: \"razor.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.css\",\n            \"source.js\",\n            \"source.cs\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.reg\": {\n        id: \"reg\",\n        path: \"reg.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.rel\": {\n        id: \"rel\",\n        path: \"rel.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.riscv\": {\n        id: \"riscv\",\n        path: \"riscv.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.rst\": {\n        id: \"rst\",\n        path: \"rst.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.java\",\n            \"source.lua\",\n            \"source.c\",\n            \"source.css\",\n            \"text.xml\",\n            \"text.html.basic\",\n            \"source.sql\",\n            \"source.glsl\",\n            \"source.ruby\",\n            \"source.cmake\",\n            \"source.yaml\",\n            \"source.shell\",\n            \"source.js\",\n            \"source.python\",\n            \"source.cpp\"\n        ]\n    },\n    \"source.ruby\": {\n        id: \"ruby\",\n        path: \"ruby.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.java\",\n            \"source.lua\",\n            \"source.shell\",\n            \"source.js\",\n            \"source.c\",\n            \"source.css\",\n            \"source.sql\",\n            \"text.xml\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.rust\": {\n        id: \"rust\",\n        path: \"rust.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.sas\": {\n        id: \"sas\",\n        path: \"sas.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.sql\"\n        ]\n    },\n    \"source.sass\": {\n        id: \"sass\",\n        path: \"sass.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.scala\": {\n        id: \"scala\",\n        path: \"scala.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.scheme\": {\n        id: \"scheme\",\n        path: \"scheme.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.css.scss\": {\n        id: \"scss\",\n        path: \"scss.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.css\"\n        ]\n    },\n    \"source.shaderlab\": {\n        id: \"shaderlab\",\n        path: \"shaderlab.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.hlsl\"\n        ]\n    },\n    \"source.shell\": {\n        id: \"shellscript\",\n        path: \"shellscript.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.shell-session\": {\n        id: \"shellsession\",\n        path: \"shellsession.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.shell\"\n        ]\n    },\n    \"source.smalltalk\": {\n        id: \"smalltalk\",\n        path: \"smalltalk.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.solidity\": {\n        id: \"solidity\",\n        path: \"solidity.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.sparql\": {\n        id: \"sparql\",\n        path: \"sparql.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.turtle\"\n        ]\n    },\n    \"source.sql\": {\n        id: \"sql\",\n        path: \"sql.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.ssh-config\": {\n        id: \"ssh-config\",\n        path: \"ssh-config.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.stata\": {\n        id: \"stata\",\n        path: \"stata.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.sql\"\n        ]\n    },\n    \"source.stylus\": {\n        id: \"stylus\",\n        path: \"stylus.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.svelte\": {\n        id: \"svelte\",\n        path: \"svelte.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.gnuplot\",\n            \"source.haskell\",\n            \"text.tex\",\n            \"source.glsl\",\n            \"text.bibtex\",\n            \"text.tex.latex\",\n            \"source.elixir\",\n            \"source.erlang\",\n            \"text.html.handlebars\",\n            \"source.dart\",\n            \"source.fsharp\",\n            \"source.cs\",\n            \"source.tsx\",\n            \"source.shell\",\n            \"source.scala\",\n            \"source.rust\",\n            \"source.julia\",\n            \"source.python\",\n            \"source.powershell\",\n            \"source.perl.6\",\n            \"source.swift\",\n            \"source.objc\",\n            \"source.json.comments\",\n            \"source.json\",\n            \"source.groovy\",\n            \"source.go\",\n            \"text.git-rebase\",\n            \"text.git-commit\",\n            \"source.dockerfile\",\n            \"source.diff\",\n            \"source.cpp\",\n            \"source.c\",\n            \"source.clojure\",\n            \"source.batchfile\",\n            \"source.yaml\",\n            \"text.xml.xsl\",\n            \"text.xml\",\n            \"source.asp.vb.net\",\n            \"source.sql\",\n            \"source.php\",\n            \"source.ruby\",\n            \"source.r\",\n            \"source.perl\",\n            \"source.makefile\",\n            \"source.lua\",\n            \"source.java\",\n            \"source.ini\",\n            \"text.html.basic\",\n            \"text.html.markdown\",\n            \"text.pug\",\n            \"source.css.postcss\",\n            \"source.css.less\",\n            \"source.css.scss\",\n            \"source.css\",\n            \"source.sass\",\n            \"source.stylus\",\n            \"source.coffee\",\n            \"source.ts\",\n            \"source.js\"\n        ]\n    },\n    \"source.swift\": {\n        id: \"swift\",\n        path: \"swift.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.systemverilog\": {\n        id: \"system-verilog\",\n        path: \"system-verilog.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.tasl\": {\n        id: \"tasl\",\n        path: \"tasl.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.tcl\": {\n        id: \"tcl\",\n        path: \"tcl.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.tex\": {\n        id: \"tex\",\n        path: \"tex.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.r\"\n        ]\n    },\n    \"source.toml\": {\n        id: \"toml\",\n        path: \"toml.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.tsx\": {\n        id: \"tsx\",\n        path: \"tsx.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.turtle\": {\n        id: \"turtle\",\n        path: \"turtle.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.html.twig\": {\n        id: \"twig\",\n        path: \"twig.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.java\",\n            \"source.lua\",\n            \"source.shell\",\n            \"source.c\",\n            \"source.json\",\n            \"source.sql\",\n            \"text.xml\",\n            \"text.html.basic\",\n            \"source.ruby\",\n            \"source.python\",\n            \"source.php\",\n            \"source.js\",\n            \"source.css\"\n        ]\n    },\n    \"source.txt\": {\n        id: \"txt\",\n        path: \"txt.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.ts\": {\n        id: \"typescript\",\n        path: \"typescript.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.v\": {\n        id: \"v\",\n        path: \"v.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.asp.vb.net\": {\n        id: \"vb\",\n        path: \"vb.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.verilog\": {\n        id: \"verilog\",\n        path: \"verilog.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.vhdl\": {\n        id: \"vhdl\",\n        path: \"vhdl.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.viml\": {\n        id: \"viml\",\n        path: \"viml.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.html.vue-html\": {\n        id: \"vue-html\",\n        path: \"vue-html.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.gnuplot\",\n            \"source.haskell\",\n            \"text.tex\",\n            \"source.glsl\",\n            \"text.bibtex\",\n            \"text.tex.latex\",\n            \"source.elixir\",\n            \"source.erlang\",\n            \"text.html.handlebars\",\n            \"source.dart\",\n            \"source.fsharp\",\n            \"source.cs\",\n            \"source.shell\",\n            \"source.scala\",\n            \"source.rust\",\n            \"source.julia\",\n            \"source.python\",\n            \"source.powershell\",\n            \"source.perl.6\",\n            \"source.swift\",\n            \"source.objc\",\n            \"source.groovy\",\n            \"source.go\",\n            \"text.git-rebase\",\n            \"text.git-commit\",\n            \"source.dockerfile\",\n            \"source.diff\",\n            \"source.cpp\",\n            \"source.c\",\n            \"source.coffee\",\n            \"source.clojure\",\n            \"source.batchfile\",\n            \"text.xml.xsl\",\n            \"text.xml\",\n            \"source.asp.vb.net\",\n            \"source.sql\",\n            \"source.php\",\n            \"source.ruby\",\n            \"source.r\",\n            \"source.perl\",\n            \"source.makefile\",\n            \"source.lua\",\n            \"source.java\",\n            \"source.ini\",\n            \"source.graphql\",\n            \"source.toml\",\n            \"source.yaml\",\n            \"source.json5\",\n            \"source.json.comments\",\n            \"source.json\",\n            \"source.tsx\",\n            \"source.js.jsx\",\n            \"source.ts\",\n            \"source.css.less\",\n            \"source.css.scss\",\n            \"source.css\",\n            \"source.sass\",\n            \"source.stylus\",\n            \"text.pug\",\n            \"text.html.markdown\",\n            \"text.html.basic\",\n            \"source.js\",\n            \"source.vue\"\n        ]\n    },\n    \"source.vue\": {\n        id: \"vue\",\n        path: \"vue.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.gnuplot\",\n            \"source.haskell\",\n            \"text.tex\",\n            \"source.glsl\",\n            \"text.bibtex\",\n            \"text.tex.latex\",\n            \"source.elixir\",\n            \"source.erlang\",\n            \"text.html.handlebars\",\n            \"source.dart\",\n            \"source.fsharp\",\n            \"source.cs\",\n            \"source.shell\",\n            \"source.scala\",\n            \"source.rust\",\n            \"source.julia\",\n            \"source.python\",\n            \"source.powershell\",\n            \"source.perl.6\",\n            \"source.swift\",\n            \"source.objc\",\n            \"source.groovy\",\n            \"source.go\",\n            \"text.git-rebase\",\n            \"text.git-commit\",\n            \"source.dockerfile\",\n            \"source.diff\",\n            \"source.cpp\",\n            \"source.c\",\n            \"source.coffee\",\n            \"source.clojure\",\n            \"source.batchfile\",\n            \"text.xml.xsl\",\n            \"text.xml\",\n            \"source.asp.vb.net\",\n            \"source.sql\",\n            \"source.php\",\n            \"source.ruby\",\n            \"source.r\",\n            \"source.perl\",\n            \"source.makefile\",\n            \"source.lua\",\n            \"source.java\",\n            \"source.ini\",\n            \"source.graphql\",\n            \"source.toml\",\n            \"source.yaml\",\n            \"source.json5\",\n            \"source.json.comments\",\n            \"source.json\",\n            \"source.tsx\",\n            \"source.js.jsx\",\n            \"source.ts\",\n            \"source.js\",\n            \"source.css.less\",\n            \"source.css.scss\",\n            \"source.css\",\n            \"source.sass\",\n            \"source.stylus\",\n            \"text.pug\",\n            \"text.html.markdown\",\n            \"text.html.basic\"\n        ]\n    },\n    \"source.vyper\": {\n        id: \"vyper\",\n        path: \"vyper.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.wat\": {\n        id: \"wasm\",\n        path: \"wasm.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.wenyan\": {\n        id: \"wenyan\",\n        path: \"wenyan.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.wgsl\": {\n        id: \"wgsl\",\n        path: \"wgsl.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.wolfram\": {\n        id: \"wolfram\",\n        path: \"wolfram.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"text.xml\": {\n        id: \"xml\",\n        path: \"xml.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.java\"\n        ]\n    },\n    \"text.xml.xsl\": {\n        id: \"xsl\",\n        path: \"xsl.tmLanguage.json\",\n        embeddedScopes: [\n            \"source.java\",\n            \"text.xml\"\n        ]\n    },\n    \"source.yaml\": {\n        id: \"yaml\",\n        path: \"yaml.tmLanguage.json\",\n        embeddedScopes: []\n    },\n    \"source.zenscript\": {\n        id: \"zenscript\",\n        path: \"zenscript.tmLanguage.json\",\n        embeddedScopes: []\n    }\n};\nvar N = {\n    d: (A, B)=>{\n        for(var Q in B)N.o(B, Q) && !N.o(A, Q) && Object.defineProperty(A, Q, {\n            enumerable: !0,\n            get: B[Q]\n        });\n    },\n    o: (A, B)=>Object.prototype.hasOwnProperty.call(A, B)\n}, L = {};\nN.d(L, {\n    _X: ()=>vA,\n    Bz: ()=>XA,\n    ot: ()=>TA,\n    u: ()=>WA,\n    jG: ()=>Y,\n    Pn: ()=>ZA\n});\nconst H = \"undefined\" != typeof process && !!process.env.VSCODE_TEXTMATE_DEBUG;\nvar k;\nfunction R(A, B) {\n    const Q = [], g = function(A) {\n        let B = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g, Q = B.exec(A);\n        return {\n            next: ()=>{\n                if (!Q) return null;\n                const g = Q[0];\n                return Q = B.exec(A), g;\n            }\n        };\n    }(A);\n    let E = g.next();\n    for(; null !== E;){\n        let A = 0;\n        if (2 === E.length && \":\" === E.charAt(1)) {\n            switch(E.charAt(0)){\n                case \"R\":\n                    A = 1;\n                    break;\n                case \"L\":\n                    A = -1;\n                    break;\n                default:\n                    console.log(`Unknown priority ${E} in scope selector`);\n            }\n            E = g.next();\n        }\n        let B = I();\n        if (Q.push({\n            matcher: B,\n            priority: A\n        }), \",\" !== E) break;\n        E = g.next();\n    }\n    return Q;\n    function C() {\n        if (\"-\" === E) {\n            E = g.next();\n            const A = C();\n            return (B)=>!!A && !A(B);\n        }\n        if (\"(\" === E) {\n            E = g.next();\n            const A = function() {\n                const A = [];\n                let B = I();\n                for(; B && (A.push(B), \"|\" === E || \",\" === E);){\n                    do {\n                        E = g.next();\n                    }while (\"|\" === E || \",\" === E);\n                    B = I();\n                }\n                return (B)=>A.some((A)=>A(B));\n            }();\n            return \")\" === E && (E = g.next()), A;\n        }\n        if (K(E)) {\n            const A = [];\n            do {\n                A.push(E), E = g.next();\n            }while (K(E));\n            return (Q)=>B(A, Q);\n        }\n        return null;\n    }\n    function I() {\n        const A = [];\n        let B = C();\n        for(; B;)A.push(B), B = C();\n        return (B)=>A.every((A)=>A(B));\n    }\n}\nfunction K(A) {\n    return !!A && !!A.match(/[\\w\\.:]+/);\n}\nfunction Y(A) {\n    \"function\" == typeof A.dispose && A.dispose();\n}\nfunction U(A) {\n    return Array.isArray(A) ? function(A) {\n        let B = [];\n        for(let Q = 0, g = A.length; Q < g; Q++)B[Q] = U(A[Q]);\n        return B;\n    }(A) : \"object\" == typeof A ? function(A) {\n        let B = {};\n        for(let Q in A)B[Q] = U(A[Q]);\n        return B;\n    }(A) : A;\n}\nfunction P(A, ...B) {\n    return B.forEach((B)=>{\n        for(let Q in B)A[Q] = B[Q];\n    }), A;\n}\nfunction u(A) {\n    const B = ~A.lastIndexOf(\"/\") || ~A.lastIndexOf(\"\\\\\");\n    return 0 === B ? A : ~B == A.length - 1 ? u(A.substring(0, A.length - 1)) : A.substr(1 + ~B);\n}\n!function(A) {\n    A.toBinaryStr = function(A) {\n        let B = A.toString(2);\n        for(; B.length < 32;)B = \"0\" + B;\n        return B;\n    }, A.print = function(B) {\n        const Q = A.getLanguageId(B), g = A.getTokenType(B), E = A.getFontStyle(B), C = A.getForeground(B), I = A.getBackground(B);\n        console.log({\n            languageId: Q,\n            tokenType: g,\n            fontStyle: E,\n            foreground: C,\n            background: I\n        });\n    }, A.getLanguageId = function(A) {\n        return (255 & A) >>> 0;\n    }, A.getTokenType = function(A) {\n        return (768 & A) >>> 8;\n    }, A.containsBalancedBrackets = function(A) {\n        return 0 != (1024 & A);\n    }, A.getFontStyle = function(A) {\n        return (30720 & A) >>> 11;\n    }, A.getForeground = function(A) {\n        return (16744448 & A) >>> 15;\n    }, A.getBackground = function(A) {\n        return (4278190080 & A) >>> 24;\n    }, A.set = function(B, Q, g, E, C, I, D) {\n        let w = A.getLanguageId(B), o = A.getTokenType(B), s = A.containsBalancedBrackets(B) ? 1 : 0, e = A.getFontStyle(B), c = A.getForeground(B), i = A.getBackground(B);\n        return 0 !== Q && (w = Q), 8 !== g && (o = g), null !== E && (s = E ? 1 : 0), -1 !== C && (e = C), 0 !== I && (c = I), 0 !== D && (i = D), (w << 0 | o << 8 | s << 10 | e << 11 | c << 15 | i << 24) >>> 0;\n    };\n}(k || (k = {}));\nlet J = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/g;\nclass y {\n    static hasCaptures(A) {\n        return null !== A && (J.lastIndex = 0, J.test(A));\n    }\n    static replaceCaptures(A, B, Q) {\n        return A.replace(J, (A, g, E, C)=>{\n            let I = Q[parseInt(g || E, 10)];\n            if (!I) return A;\n            {\n                let A = B.substring(I.start, I.end);\n                for(; \".\" === A[0];)A = A.substring(1);\n                switch(C){\n                    case \"downcase\":\n                        return A.toLowerCase();\n                    case \"upcase\":\n                        return A.toUpperCase();\n                    default:\n                        return A;\n                }\n            }\n        });\n    }\n}\nfunction S(A, B) {\n    return A < B ? -1 : A > B ? 1 : 0;\n}\nfunction p(A, B) {\n    if (null === A && null === B) return 0;\n    if (!A) return -1;\n    if (!B) return 1;\n    let Q = A.length, g = B.length;\n    if (Q === g) {\n        for(let g = 0; g < Q; g++){\n            let Q = S(A[g], B[g]);\n            if (0 !== Q) return Q;\n        }\n        return 0;\n    }\n    return Q - g;\n}\nfunction d(A) {\n    return !!(/^#[0-9a-f]{6}$/i.test(A) || /^#[0-9a-f]{8}$/i.test(A) || /^#[0-9a-f]{3}$/i.test(A) || /^#[0-9a-f]{4}$/i.test(A));\n}\nfunction l(A) {\n    return A.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, \"\\\\$&\");\n}\nclass x {\n    constructor(A){\n        this.fn = A, this.cache = new Map;\n    }\n    get(A) {\n        if (this.cache.has(A)) return this.cache.get(A);\n        const B = this.fn(A);\n        return this.cache.set(A, B), B;\n    }\n}\nconst f = \"undefined\" == typeof performance ? function() {\n    return Date.now();\n} : function() {\n    return performance.now();\n};\nclass m {\n    constructor(A){\n        this.scopeName = A;\n    }\n    toKey() {\n        return this.scopeName;\n    }\n}\nclass O {\n    constructor(A, B){\n        this.scopeName = A, this.ruleName = B;\n    }\n    toKey() {\n        return `${this.scopeName}#${this.ruleName}`;\n    }\n}\nclass q {\n    constructor(){\n        this._references = [], this._seenReferenceKeys = new Set, this.visitedRule = new Set;\n    }\n    get references() {\n        return this._references;\n    }\n    add(A) {\n        const B = A.toKey();\n        this._seenReferenceKeys.has(B) || (this._seenReferenceKeys.add(B), this._references.push(A));\n    }\n}\nclass b {\n    constructor(A, B){\n        this.repo = A, this.initialScopeName = B, this.seenFullScopeRequests = new Set, this.seenPartialScopeRequests = new Set, this.seenFullScopeRequests.add(this.initialScopeName), this.Q = [\n            new m(this.initialScopeName)\n        ];\n    }\n    processQueue() {\n        const A = this.Q;\n        this.Q = [];\n        const B = new q;\n        for (const Q of A)W(Q, this.initialScopeName, this.repo, B);\n        for (const A of B.references)if (A instanceof m) {\n            if (this.seenFullScopeRequests.has(A.scopeName)) continue;\n            this.seenFullScopeRequests.add(A.scopeName), this.Q.push(A);\n        } else {\n            if (this.seenFullScopeRequests.has(A.scopeName)) continue;\n            if (this.seenPartialScopeRequests.has(A.toKey())) continue;\n            this.seenPartialScopeRequests.add(A.toKey()), this.Q.push(A);\n        }\n    }\n}\nfunction W(A, B, Q, g) {\n    const E = Q.lookup(A.scopeName);\n    if (!E) {\n        if (A.scopeName === B) throw new Error(`No grammar provided for <${B}>`);\n        return;\n    }\n    const C = Q.lookup(B);\n    A instanceof m ? X({\n        baseGrammar: C,\n        selfGrammar: E\n    }, g) : T(A.ruleName, {\n        baseGrammar: C,\n        selfGrammar: E,\n        repository: E.repository\n    }, g);\n    const I = Q.injections(A.scopeName);\n    if (I) for (const A of I)g.add(new m(A));\n}\nfunction T(A, B, Q) {\n    B.repository && B.repository[A] && v([\n        B.repository[A]\n    ], B, Q);\n}\nfunction X(A, B) {\n    A.selfGrammar.patterns && Array.isArray(A.selfGrammar.patterns) && v(A.selfGrammar.patterns, {\n        ...A,\n        repository: A.selfGrammar.repository\n    }, B), A.selfGrammar.injections && v(Object.values(A.selfGrammar.injections), {\n        ...A,\n        repository: A.selfGrammar.repository\n    }, B);\n}\nfunction v(A, B, Q) {\n    for (const g of A){\n        if (Q.visitedRule.has(g)) continue;\n        Q.visitedRule.add(g);\n        const A = g.repository ? P({}, B.repository, g.repository) : B.repository;\n        Array.isArray(g.patterns) && v(g.patterns, {\n            ...B,\n            repository: A\n        }, Q);\n        const E = g.include;\n        if (!E) continue;\n        const C = $(E);\n        switch(C.kind){\n            case 0:\n                X({\n                    ...B,\n                    selfGrammar: B.baseGrammar\n                }, Q);\n                break;\n            case 1:\n                X(B, Q);\n                break;\n            case 2:\n                T(C.ruleName, {\n                    ...B,\n                    repository: A\n                }, Q);\n                break;\n            case 3:\n            case 4:\n                const g1 = C.scopeName === B.selfGrammar.scopeName ? B.selfGrammar : C.scopeName === B.baseGrammar.scopeName ? B.baseGrammar : void 0;\n                if (g1) {\n                    const E = {\n                        baseGrammar: B.baseGrammar,\n                        selfGrammar: g1,\n                        repository: A\n                    };\n                    4 === C.kind ? T(C.ruleName, E, Q) : X(E, Q);\n                } else 4 === C.kind ? Q.add(new O(C.scopeName, C.ruleName)) : Q.add(new m(C.scopeName));\n        }\n    }\n}\nclass Z {\n    constructor(){\n        this.kind = 0;\n    }\n}\nclass j {\n    constructor(){\n        this.kind = 1;\n    }\n}\nclass V {\n    constructor(A){\n        this.ruleName = A, this.kind = 2;\n    }\n}\nclass z {\n    constructor(A){\n        this.scopeName = A, this.kind = 3;\n    }\n}\nclass _ {\n    constructor(A, B){\n        this.scopeName = A, this.ruleName = B, this.kind = 4;\n    }\n}\nfunction $(A) {\n    if (\"$base\" === A) return new Z;\n    if (\"$self\" === A) return new j;\n    const B = A.indexOf(\"#\");\n    if (-1 === B) return new z(A);\n    if (0 === B) return new V(A.substring(1));\n    {\n        const Q = A.substring(0, B), g = A.substring(B + 1);\n        return new _(Q, g);\n    }\n}\nconst AA = /\\\\(\\d+)/, BA = /\\\\(\\d+)/g;\nclass QA {\n    constructor(A, B, Q, g){\n        this.$location = A, this.id = B, this._name = Q || null, this._nameIsCapturing = y.hasCaptures(this._name), this._contentName = g || null, this._contentNameIsCapturing = y.hasCaptures(this._contentName);\n    }\n    get debugName() {\n        const A = this.$location ? `${u(this.$location.filename)}:${this.$location.line}` : \"unknown\";\n        return `${this.constructor.name}#${this.id} @ ${A}`;\n    }\n    getName(A, B) {\n        return this._nameIsCapturing && null !== this._name && null !== A && null !== B ? y.replaceCaptures(this._name, A, B) : this._name;\n    }\n    getContentName(A, B) {\n        return this._contentNameIsCapturing && null !== this._contentName ? y.replaceCaptures(this._contentName, A, B) : this._contentName;\n    }\n}\nclass gA extends QA {\n    constructor(A, B, Q, g, E){\n        super(A, B, Q, g), this.retokenizeCapturedWithRuleId = E;\n    }\n    dispose() {}\n    collectPatterns(A, B) {\n        throw new Error(\"Not supported!\");\n    }\n    compile(A, B) {\n        throw new Error(\"Not supported!\");\n    }\n    compileAG(A, B, Q, g) {\n        throw new Error(\"Not supported!\");\n    }\n}\nclass EA extends QA {\n    constructor(A, B, Q, g, E){\n        super(A, B, Q, null), this._match = new oA(g, this.id), this.captures = E, this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);\n    }\n    get debugMatchRegExp() {\n        return `${this._match.source}`;\n    }\n    collectPatterns(A, B) {\n        B.push(this._match);\n    }\n    compile(A, B) {\n        return this._getCachedCompiledPatterns(A).compile(A);\n    }\n    compileAG(A, B, Q, g) {\n        return this._getCachedCompiledPatterns(A).compileAG(A, Q, g);\n    }\n    _getCachedCompiledPatterns(A) {\n        return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new sA, this.collectPatterns(A, this._cachedCompiledPatterns)), this._cachedCompiledPatterns;\n    }\n}\nclass CA extends QA {\n    constructor(A, B, Q, g, E){\n        super(A, B, Q, g), this.patterns = E.patterns, this.hasMissingPatterns = E.hasMissingPatterns, this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);\n    }\n    collectPatterns(A, B) {\n        for (const Q of this.patterns)A.getRule(Q).collectPatterns(A, B);\n    }\n    compile(A, B) {\n        return this._getCachedCompiledPatterns(A).compile(A);\n    }\n    compileAG(A, B, Q, g) {\n        return this._getCachedCompiledPatterns(A).compileAG(A, Q, g);\n    }\n    _getCachedCompiledPatterns(A) {\n        return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new sA, this.collectPatterns(A, this._cachedCompiledPatterns)), this._cachedCompiledPatterns;\n    }\n}\nclass IA extends QA {\n    constructor(A, B, Q, g, E, C, I, D, w, o){\n        super(A, B, Q, g), this._begin = new oA(E, this.id), this.beginCaptures = C, this._end = new oA(I || \"￿\", -1), this.endHasBackReferences = this._end.hasBackReferences, this.endCaptures = D, this.applyEndPatternLast = w || !1, this.patterns = o.patterns, this.hasMissingPatterns = o.hasMissingPatterns, this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugEndRegExp() {\n        return `${this._end.source}`;\n    }\n    getEndWithResolvedBackReferences(A, B) {\n        return this._end.resolveBackReferences(A, B);\n    }\n    collectPatterns(A, B) {\n        B.push(this._begin);\n    }\n    compile(A, B) {\n        return this._getCachedCompiledPatterns(A, B).compile(A);\n    }\n    compileAG(A, B, Q, g) {\n        return this._getCachedCompiledPatterns(A, B).compileAG(A, Q, g);\n    }\n    _getCachedCompiledPatterns(A, B) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new sA;\n            for (const B of this.patterns)A.getRule(B).collectPatterns(A, this._cachedCompiledPatterns);\n            this.applyEndPatternLast ? this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end) : this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n        }\n        return this._end.hasBackReferences && (this.applyEndPatternLast ? this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, B) : this._cachedCompiledPatterns.setSource(0, B)), this._cachedCompiledPatterns;\n    }\n}\nclass DA extends QA {\n    constructor(A, B, Q, g, E, C, I, D, w){\n        super(A, B, Q, g), this._begin = new oA(E, this.id), this.beginCaptures = C, this.whileCaptures = D, this._while = new oA(I, -2), this.whileHasBackReferences = this._while.hasBackReferences, this.patterns = w.patterns, this.hasMissingPatterns = w.hasMissingPatterns, this._cachedCompiledPatterns = null, this._cachedCompiledWhilePatterns = null;\n    }\n    dispose() {\n        this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null), this._cachedCompiledWhilePatterns && (this._cachedCompiledWhilePatterns.dispose(), this._cachedCompiledWhilePatterns = null);\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugWhileRegExp() {\n        return `${this._while.source}`;\n    }\n    getWhileWithResolvedBackReferences(A, B) {\n        return this._while.resolveBackReferences(A, B);\n    }\n    collectPatterns(A, B) {\n        B.push(this._begin);\n    }\n    compile(A, B) {\n        return this._getCachedCompiledPatterns(A).compile(A);\n    }\n    compileAG(A, B, Q, g) {\n        return this._getCachedCompiledPatterns(A).compileAG(A, Q, g);\n    }\n    _getCachedCompiledPatterns(A) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new sA;\n            for (const B of this.patterns)A.getRule(B).collectPatterns(A, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n    compileWhile(A, B) {\n        return this._getCachedCompiledWhilePatterns(A, B).compile(A);\n    }\n    compileWhileAG(A, B, Q, g) {\n        return this._getCachedCompiledWhilePatterns(A, B).compileAG(A, Q, g);\n    }\n    _getCachedCompiledWhilePatterns(A, B) {\n        return this._cachedCompiledWhilePatterns || (this._cachedCompiledWhilePatterns = new sA, this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while)), this._while.hasBackReferences && this._cachedCompiledWhilePatterns.setSource(0, B || \"￿\"), this._cachedCompiledWhilePatterns;\n    }\n}\nclass wA {\n    static createCaptureRule(A, B, Q, g, E) {\n        return A.registerRule((A)=>new gA(B, A, Q, g, E));\n    }\n    static getCompiledRuleId(A, B, Q) {\n        return A.id || B.registerRule((g)=>{\n            if (A.id = g, A.match) return new EA(A.$vscodeTextmateLocation, A.id, A.name, A.match, wA._compileCaptures(A.captures, B, Q));\n            if (void 0 === A.begin) {\n                A.repository && (Q = P({}, Q, A.repository));\n                let g = A.patterns;\n                return void 0 === g && A.include && (g = [\n                    {\n                        include: A.include\n                    }\n                ]), new CA(A.$vscodeTextmateLocation, A.id, A.name, A.contentName, wA._compilePatterns(g, B, Q));\n            }\n            return A.while ? new DA(A.$vscodeTextmateLocation, A.id, A.name, A.contentName, A.begin, wA._compileCaptures(A.beginCaptures || A.captures, B, Q), A.while, wA._compileCaptures(A.whileCaptures || A.captures, B, Q), wA._compilePatterns(A.patterns, B, Q)) : new IA(A.$vscodeTextmateLocation, A.id, A.name, A.contentName, A.begin, wA._compileCaptures(A.beginCaptures || A.captures, B, Q), A.end, wA._compileCaptures(A.endCaptures || A.captures, B, Q), A.applyEndPatternLast, wA._compilePatterns(A.patterns, B, Q));\n        }), A.id;\n    }\n    static _compileCaptures(A, B, Q) {\n        let g = [];\n        if (A) {\n            let E = 0;\n            for(const B in A){\n                if (\"$vscodeTextmateLocation\" === B) continue;\n                const A = parseInt(B, 10);\n                A > E && (E = A);\n            }\n            for(let A = 0; A <= E; A++)g[A] = null;\n            for(const E in A){\n                if (\"$vscodeTextmateLocation\" === E) continue;\n                const C = parseInt(E, 10);\n                let I = 0;\n                A[E].patterns && (I = wA.getCompiledRuleId(A[E], B, Q)), g[C] = wA.createCaptureRule(B, A[E].$vscodeTextmateLocation, A[E].name, A[E].contentName, I);\n            }\n        }\n        return g;\n    }\n    static _compilePatterns(A, B, Q) {\n        let g = [];\n        if (A) for(let E = 0, C = A.length; E < C; E++){\n            const C = A[E];\n            let I = -1;\n            if (C.include) {\n                const A = $(C.include);\n                switch(A.kind){\n                    case 0:\n                    case 1:\n                        I = wA.getCompiledRuleId(Q[C.include], B, Q);\n                        break;\n                    case 2:\n                        let g = Q[A.ruleName];\n                        g && (I = wA.getCompiledRuleId(g, B, Q));\n                        break;\n                    case 3:\n                    case 4:\n                        const E = A.scopeName, D = 4 === A.kind ? A.ruleName : null, w = B.getExternalGrammar(E, Q);\n                        if (w) if (D) {\n                            let A = w.repository[D];\n                            A && (I = wA.getCompiledRuleId(A, B, w.repository));\n                        } else I = wA.getCompiledRuleId(w.repository.$self, B, w.repository);\n                }\n            } else I = wA.getCompiledRuleId(C, B, Q);\n            if (-1 !== I) {\n                const A = B.getRule(I);\n                let Q = !1;\n                if ((A instanceof CA || A instanceof IA || A instanceof DA) && A.hasMissingPatterns && 0 === A.patterns.length && (Q = !0), Q) continue;\n                g.push(I);\n            }\n        }\n        return {\n            patterns: g,\n            hasMissingPatterns: (A ? A.length : 0) !== g.length\n        };\n    }\n}\nclass oA {\n    constructor(A, B){\n        if (A) {\n            const B = A.length;\n            let Q = 0, g = [], E = !1;\n            for(let C = 0; C < B; C++)if (\"\\\\\" === A.charAt(C) && C + 1 < B) {\n                const B = A.charAt(C + 1);\n                \"z\" === B ? (g.push(A.substring(Q, C)), g.push(\"$(?!\\\\n)(?<!\\\\n)\"), Q = C + 2) : \"A\" !== B && \"G\" !== B || (E = !0), C++;\n            }\n            this.hasAnchor = E, 0 === Q ? this.source = A : (g.push(A.substring(Q, B)), this.source = g.join(\"\"));\n        } else this.hasAnchor = !1, this.source = A;\n        this.hasAnchor ? this._anchorCache = this._buildAnchorCache() : this._anchorCache = null, this.ruleId = B, this.hasBackReferences = AA.test(this.source);\n    }\n    clone() {\n        return new oA(this.source, this.ruleId);\n    }\n    setSource(A) {\n        this.source !== A && (this.source = A, this.hasAnchor && (this._anchorCache = this._buildAnchorCache()));\n    }\n    resolveBackReferences(A, B) {\n        let Q = B.map((B)=>A.substring(B.start, B.end));\n        return BA.lastIndex = 0, this.source.replace(BA, (A, B)=>l(Q[parseInt(B, 10)] || \"\"));\n    }\n    _buildAnchorCache() {\n        let A, B, Q, g, E = [], C = [], I = [], D = [];\n        for(A = 0, B = this.source.length; A < B; A++)Q = this.source.charAt(A), E[A] = Q, C[A] = Q, I[A] = Q, D[A] = Q, \"\\\\\" === Q && A + 1 < B && (g = this.source.charAt(A + 1), \"A\" === g ? (E[A + 1] = \"￿\", C[A + 1] = \"￿\", I[A + 1] = \"A\", D[A + 1] = \"A\") : \"G\" === g ? (E[A + 1] = \"￿\", C[A + 1] = \"G\", I[A + 1] = \"￿\", D[A + 1] = \"G\") : (E[A + 1] = g, C[A + 1] = g, I[A + 1] = g, D[A + 1] = g), A++);\n        return {\n            A0_G0: E.join(\"\"),\n            A0_G1: C.join(\"\"),\n            A1_G0: I.join(\"\"),\n            A1_G1: D.join(\"\")\n        };\n    }\n    resolveAnchors(A, B) {\n        return this.hasAnchor && this._anchorCache ? A ? B ? this._anchorCache.A1_G1 : this._anchorCache.A1_G0 : B ? this._anchorCache.A0_G1 : this._anchorCache.A0_G0 : this.source;\n    }\n}\nclass sA {\n    constructor(){\n        this._items = [], this._hasAnchors = !1, this._cached = null, this._anchorCache = {\n            A0_G0: null,\n            A0_G1: null,\n            A1_G0: null,\n            A1_G1: null\n        };\n    }\n    dispose() {\n        this._disposeCaches();\n    }\n    _disposeCaches() {\n        this._cached && (this._cached.dispose(), this._cached = null), this._anchorCache.A0_G0 && (this._anchorCache.A0_G0.dispose(), this._anchorCache.A0_G0 = null), this._anchorCache.A0_G1 && (this._anchorCache.A0_G1.dispose(), this._anchorCache.A0_G1 = null), this._anchorCache.A1_G0 && (this._anchorCache.A1_G0.dispose(), this._anchorCache.A1_G0 = null), this._anchorCache.A1_G1 && (this._anchorCache.A1_G1.dispose(), this._anchorCache.A1_G1 = null);\n    }\n    push(A) {\n        this._items.push(A), this._hasAnchors = this._hasAnchors || A.hasAnchor;\n    }\n    unshift(A) {\n        this._items.unshift(A), this._hasAnchors = this._hasAnchors || A.hasAnchor;\n    }\n    length() {\n        return this._items.length;\n    }\n    setSource(A, B) {\n        this._items[A].source !== B && (this._disposeCaches(), this._items[A].setSource(B));\n    }\n    compile(A) {\n        if (!this._cached) {\n            let B = this._items.map((A)=>A.source);\n            this._cached = new eA(A, B, this._items.map((A)=>A.ruleId));\n        }\n        return this._cached;\n    }\n    compileAG(A, B, Q) {\n        return this._hasAnchors ? B ? Q ? (this._anchorCache.A1_G1 || (this._anchorCache.A1_G1 = this._resolveAnchors(A, B, Q)), this._anchorCache.A1_G1) : (this._anchorCache.A1_G0 || (this._anchorCache.A1_G0 = this._resolveAnchors(A, B, Q)), this._anchorCache.A1_G0) : Q ? (this._anchorCache.A0_G1 || (this._anchorCache.A0_G1 = this._resolveAnchors(A, B, Q)), this._anchorCache.A0_G1) : (this._anchorCache.A0_G0 || (this._anchorCache.A0_G0 = this._resolveAnchors(A, B, Q)), this._anchorCache.A0_G0) : this.compile(A);\n    }\n    _resolveAnchors(A, B, Q) {\n        let g = this._items.map((A)=>A.resolveAnchors(B, Q));\n        return new eA(A, g, this._items.map((A)=>A.ruleId));\n    }\n}\nclass eA {\n    constructor(A, B, Q){\n        this.regExps = B, this.rules = Q, this.scanner = A.createOnigScanner(B);\n    }\n    dispose() {\n        \"function\" == typeof this.scanner.dispose && this.scanner.dispose();\n    }\n    toString() {\n        const A = [];\n        for(let B = 0, Q = this.rules.length; B < Q; B++)A.push(\"   - \" + this.rules[B] + \": \" + this.regExps[B]);\n        return A.join(\"\\n\");\n    }\n    findNextMatchSync(A, B, Q) {\n        const g = this.scanner.findNextMatchSync(A, B, Q);\n        return g ? {\n            ruleId: this.rules[g.index],\n            captureIndices: g.captureIndices\n        } : null;\n    }\n}\nclass cA {\n    constructor(A, B, Q){\n        this._colorMap = A, this._defaults = B, this._root = Q, this._cachedMatchRoot = new x((A)=>this._root.match(A));\n    }\n    static createFromRawTheme(A, B) {\n        return this.createFromParsedTheme(function(A) {\n            if (!A) return [];\n            if (!A.settings || !Array.isArray(A.settings)) return [];\n            let B = A.settings, Q = [], g = 0;\n            for(let A = 0, E = B.length; A < E; A++){\n                let E, C = B[A];\n                if (!C.settings) continue;\n                if (\"string\" == typeof C.scope) {\n                    let A = C.scope;\n                    A = A.replace(/^[,]+/, \"\"), A = A.replace(/[,]+$/, \"\"), E = A.split(\",\");\n                } else E = Array.isArray(C.scope) ? C.scope : [\n                    \"\"\n                ];\n                let I = -1;\n                if (\"string\" == typeof C.settings.fontStyle) {\n                    I = 0;\n                    let A = C.settings.fontStyle.split(\" \");\n                    for(let B = 0, Q = A.length; B < Q; B++)switch(A[B]){\n                        case \"italic\":\n                            I |= 1;\n                            break;\n                        case \"bold\":\n                            I |= 2;\n                            break;\n                        case \"underline\":\n                            I |= 4;\n                            break;\n                        case \"strikethrough\":\n                            I |= 8;\n                    }\n                }\n                let D = null;\n                \"string\" == typeof C.settings.foreground && d(C.settings.foreground) && (D = C.settings.foreground);\n                let w = null;\n                \"string\" == typeof C.settings.background && d(C.settings.background) && (w = C.settings.background);\n                for(let B = 0, C = E.length; B < C; B++){\n                    let C = E[B].trim().split(\" \"), o = C[C.length - 1], s = null;\n                    C.length > 1 && (s = C.slice(0, C.length - 1), s.reverse()), Q[g++] = new hA(o, s, A, I, D, w);\n                }\n            }\n            return Q;\n        }(A), B);\n    }\n    static createFromParsedTheme(A, B) {\n        return function(A, B) {\n            A.sort((A, B)=>{\n                let Q = S(A.scope, B.scope);\n                return 0 !== Q ? Q : (Q = p(A.parentScopes, B.parentScopes), 0 !== Q ? Q : A.index - B.index);\n            });\n            let Q = 0, g = \"#000000\", E = \"#ffffff\";\n            for(; A.length >= 1 && \"\" === A[0].scope;){\n                let B = A.shift();\n                -1 !== B.fontStyle && (Q = B.fontStyle), null !== B.foreground && (g = B.foreground), null !== B.background && (E = B.background);\n            }\n            let C = new aA(B), I = new MA(Q, C.getId(g), C.getId(E)), D = new GA(new FA(0, null, -1, 0, 0), []);\n            for(let B = 0, Q = A.length; B < Q; B++){\n                let Q = A[B];\n                D.insert(0, Q.scope, Q.parentScopes, Q.fontStyle, C.getId(Q.foreground), C.getId(Q.background));\n            }\n            return new cA(C, I, D);\n        }(A, B);\n    }\n    getColorMap() {\n        return this._colorMap.getColorMap();\n    }\n    getDefaults() {\n        return this._defaults;\n    }\n    match(A) {\n        if (null === A) return this._defaults;\n        const B = A.scopeName, Q = this._cachedMatchRoot.get(B).find((B)=>(function(A, B) {\n                if (null === B) return !0;\n                let Q = 0, g = B[Q];\n                for(; A;){\n                    if (tA(A.scopeName, g)) {\n                        if (Q++, Q === B.length) return !0;\n                        g = B[Q];\n                    }\n                    A = A.parent;\n                }\n                return !1;\n            })(A.parent, B.parentScopes));\n        return Q ? new MA(Q.fontStyle, Q.foreground, Q.background) : null;\n    }\n}\nclass iA {\n    constructor(A, B){\n        this.parent = A, this.scopeName = B;\n    }\n    static push(A, B) {\n        for (const Q of B)A = new iA(A, Q);\n        return A;\n    }\n    static from(...A) {\n        let B = null;\n        for(let Q = 0; Q < A.length; Q++)B = new iA(B, A[Q]);\n        return B;\n    }\n    push(A) {\n        return new iA(this, A);\n    }\n    getSegments() {\n        let A = this;\n        const B = [];\n        for(; A;)B.push(A.scopeName), A = A.parent;\n        return B.reverse(), B;\n    }\n    toString() {\n        return this.getSegments().join(\" \");\n    }\n    extends(A) {\n        return this === A || null !== this.parent && this.parent.extends(A);\n    }\n    getExtensionIfDefined(A) {\n        const B = [];\n        let Q = this;\n        for(; Q && Q !== A;)B.push(Q.scopeName), Q = Q.parent;\n        return Q === A ? B.reverse() : void 0;\n    }\n}\nfunction tA(A, B) {\n    return B === A || A.startsWith(B) && \".\" === A[B.length];\n}\nclass MA {\n    constructor(A, B, Q){\n        this.fontStyle = A, this.foregroundId = B, this.backgroundId = Q;\n    }\n}\nclass hA {\n    constructor(A, B, Q, g, E, C){\n        this.scope = A, this.parentScopes = B, this.index = Q, this.fontStyle = g, this.foreground = E, this.background = C;\n    }\n}\nclass aA {\n    constructor(A){\n        if (this._lastColorId = 0, this._id2color = [], this._color2id = Object.create(null), Array.isArray(A)) {\n            this._isFrozen = !0;\n            for(let B = 0, Q = A.length; B < Q; B++)this._color2id[A[B]] = B, this._id2color[B] = A[B];\n        } else this._isFrozen = !1;\n    }\n    getId(A) {\n        if (null === A) return 0;\n        A = A.toUpperCase();\n        let B = this._color2id[A];\n        if (B) return B;\n        if (this._isFrozen) throw new Error(`Missing color in color map - ${A}`);\n        return B = ++this._lastColorId, this._color2id[A] = B, this._id2color[B] = A, B;\n    }\n    getColorMap() {\n        return this._id2color.slice(0);\n    }\n}\nclass FA {\n    constructor(A, B, Q, g, E){\n        this.scopeDepth = A, this.parentScopes = B, this.fontStyle = Q, this.foreground = g, this.background = E;\n    }\n    clone() {\n        return new FA(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n    }\n    static cloneArr(A) {\n        let B = [];\n        for(let Q = 0, g = A.length; Q < g; Q++)B[Q] = A[Q].clone();\n        return B;\n    }\n    acceptOverwrite(A, B, Q, g) {\n        this.scopeDepth > A ? console.log(\"how did this happen?\") : this.scopeDepth = A, -1 !== B && (this.fontStyle = B), 0 !== Q && (this.foreground = Q), 0 !== g && (this.background = g);\n    }\n}\nclass GA {\n    constructor(A, B = [], Q = {}){\n        this._mainRule = A, this._children = Q, this._rulesWithParentScopes = B;\n    }\n    static _sortBySpecificity(A) {\n        return 1 === A.length || A.sort(this._cmpBySpecificity), A;\n    }\n    static _cmpBySpecificity(A, B) {\n        if (A.scopeDepth === B.scopeDepth) {\n            const Q = A.parentScopes, g = B.parentScopes;\n            let E = null === Q ? 0 : Q.length, C = null === g ? 0 : g.length;\n            if (E === C) for(let A = 0; A < E; A++){\n                const B = Q[A].length, E = g[A].length;\n                if (B !== E) return E - B;\n            }\n            return C - E;\n        }\n        return B.scopeDepth - A.scopeDepth;\n    }\n    match(A) {\n        if (\"\" === A) return GA._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n        let B, Q, g = A.indexOf(\".\");\n        return -1 === g ? (B = A, Q = \"\") : (B = A.substring(0, g), Q = A.substring(g + 1)), this._children.hasOwnProperty(B) ? this._children[B].match(Q) : GA._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n    }\n    insert(A, B, Q, g, E, C) {\n        if (\"\" === B) return void this._doInsertHere(A, Q, g, E, C);\n        let I, D, w, o = B.indexOf(\".\");\n        -1 === o ? (I = B, D = \"\") : (I = B.substring(0, o), D = B.substring(o + 1)), this._children.hasOwnProperty(I) ? w = this._children[I] : (w = new GA(this._mainRule.clone(), FA.cloneArr(this._rulesWithParentScopes)), this._children[I] = w), w.insert(A + 1, D, Q, g, E, C);\n    }\n    _doInsertHere(A, B, Q, g, E) {\n        if (null !== B) {\n            for(let C = 0, I = this._rulesWithParentScopes.length; C < I; C++){\n                let I = this._rulesWithParentScopes[C];\n                if (0 === p(I.parentScopes, B)) return void I.acceptOverwrite(A, Q, g, E);\n            }\n            -1 === Q && (Q = this._mainRule.fontStyle), 0 === g && (g = this._mainRule.foreground), 0 === E && (E = this._mainRule.background), this._rulesWithParentScopes.push(new FA(A, B, Q, g, E));\n        } else this._mainRule.acceptOverwrite(A, Q, g, E);\n    }\n}\nclass nA {\n    constructor(A, B){\n        this.languageId = A, this.tokenType = B;\n    }\n}\nclass rA {\n    constructor(A, B){\n        this._getBasicScopeAttributes = new x((A)=>{\n            const B = this._scopeToLanguage(A), Q = this._toStandardTokenType(A);\n            return new nA(B, Q);\n        }), this._defaultAttributes = new nA(A, 8), this._embeddedLanguagesMatcher = new NA(Object.entries(B || {}));\n    }\n    getDefaultAttributes() {\n        return this._defaultAttributes;\n    }\n    getBasicScopeAttributes(A) {\n        return null === A ? rA._NULL_SCOPE_METADATA : this._getBasicScopeAttributes.get(A);\n    }\n    _scopeToLanguage(A) {\n        return this._embeddedLanguagesMatcher.match(A) || 0;\n    }\n    _toStandardTokenType(A) {\n        const B = A.match(rA.STANDARD_TOKEN_TYPE_REGEXP);\n        if (!B) return 8;\n        switch(B[1]){\n            case \"comment\":\n                return 1;\n            case \"string\":\n                return 2;\n            case \"regex\":\n                return 3;\n            case \"meta.embedded\":\n                return 0;\n        }\n        throw new Error(\"Unexpected match for standard token type!\");\n    }\n}\nrA._NULL_SCOPE_METADATA = new nA(0, 0), rA.STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\nclass NA {\n    constructor(A){\n        if (0 === A.length) this.values = null, this.scopesRegExp = null;\n        else {\n            this.values = new Map(A);\n            const B = A.map(([A, B])=>l(A));\n            B.sort(), B.reverse(), this.scopesRegExp = new RegExp(`^((${B.join(\")|(\")}))($|\\\\.)`, \"\");\n        }\n    }\n    match(A) {\n        if (!this.scopesRegExp) return;\n        const B = A.match(this.scopesRegExp);\n        return B ? this.values.get(B[1]) : void 0;\n    }\n}\nclass LA {\n    constructor(A, B){\n        this.stack = A, this.stoppedEarly = B;\n    }\n}\nfunction HA(A, B, Q, g, E, C, I, D) {\n    const w = B.content.length;\n    let o = !1, s = -1;\n    if (I) {\n        const I = function(A, B, Q, g, E, C) {\n            let I = E.beginRuleCapturedEOL ? 0 : -1;\n            const D = [];\n            for(let B = E; B; B = B.pop()){\n                const Q = B.getRule(A);\n                Q instanceof DA && D.push({\n                    rule: Q,\n                    stack: B\n                });\n            }\n            for(let w = D.pop(); w; w = D.pop()){\n                const { ruleScanner: D, findOptions: o } = RA(w.rule, A, w.stack.endRule, Q, g === I), s = D.findNextMatchSync(B, g, o);\n                if (H && (console.log(\"  scanning for while rule\"), console.log(D.toString())), !s) {\n                    H && console.log(\"  popping \" + w.rule.debugName + \" - \" + w.rule.debugWhileRegExp), E = w.stack.pop();\n                    break;\n                }\n                if (-2 !== s.ruleId) {\n                    E = w.stack.pop();\n                    break;\n                }\n                s.captureIndices && s.captureIndices.length && (C.produce(w.stack, s.captureIndices[0].start), KA(A, B, Q, w.stack, C, w.rule.whileCaptures, s.captureIndices), C.produce(w.stack, s.captureIndices[0].end), I = s.captureIndices[0].end, s.captureIndices[0].end > g && (g = s.captureIndices[0].end, Q = !1));\n            }\n            return {\n                stack: E,\n                linePos: g,\n                anchorPosition: I,\n                isFirstLine: Q\n            };\n        }(A, B, Q, g, E, C);\n        E = I.stack, g = I.linePos, Q = I.isFirstLine, s = I.anchorPosition;\n    }\n    const e = Date.now();\n    for(; !o;){\n        if (0 !== D && Date.now() - e > D) return new LA(E, !0);\n        c();\n    }\n    return new LA(E, !1);\n    function c() {\n        H && (console.log(\"\"), console.log(`@@scanNext ${g}: |${B.content.substr(g).replace(/\\n$/, \"\\\\n\")}|`));\n        const I = function(A, B, Q, g, E, C) {\n            const I = function(A, B, Q, g, E, C) {\n                const I = E.getRule(A), { ruleScanner: D, findOptions: w } = kA(I, A, E.endRule, Q, g === C);\n                let o = 0;\n                H && (o = f());\n                const s = D.findNextMatchSync(B, g, w);\n                if (H) {\n                    const A = f() - o;\n                    A > 5 && console.warn(`Rule ${I.debugName} (${I.id}) matching took ${A} against '${B}'`), console.log(`  scanning for (linePos: ${g}, anchorPosition: ${C})`), console.log(D.toString()), s && console.log(`matched rule id: ${s.ruleId} from ${s.captureIndices[0].start} to ${s.captureIndices[0].end}`);\n                }\n                return s ? {\n                    captureIndices: s.captureIndices,\n                    matchedRuleId: s.ruleId\n                } : null;\n            }(A, B, Q, g, E, C), D = A.getInjections();\n            if (0 === D.length) return I;\n            const w = function(A, B, Q, g, E, C, I) {\n                let D, w = Number.MAX_VALUE, o = null, s = 0;\n                const e = C.contentNameScopesList.getScopeNames();\n                for(let C = 0, c = A.length; C < c; C++){\n                    const c = A[C];\n                    if (!c.matcher(e)) continue;\n                    const i = B.getRule(c.ruleId), { ruleScanner: t, findOptions: M } = kA(i, B, null, g, E === I), h = t.findNextMatchSync(Q, E, M);\n                    if (!h) continue;\n                    H && (console.log(`  matched injection: ${c.debugSelector}`), console.log(t.toString()));\n                    const a = h.captureIndices[0].start;\n                    if (!(a >= w) && (w = a, o = h.captureIndices, D = h.ruleId, s = c.priority, w === E)) break;\n                }\n                return o ? {\n                    priorityMatch: -1 === s,\n                    captureIndices: o,\n                    matchedRuleId: D\n                } : null;\n            }(D, A, B, Q, g, E, C);\n            if (!w) return I;\n            if (!I) return w;\n            const o = I.captureIndices[0].start, s = w.captureIndices[0].start;\n            return s < o || w.priorityMatch && s === o ? w : I;\n        }(A, B, Q, g, E, s);\n        if (!I) return H && console.log(\"  no more matches.\"), C.produce(E, w), void (o = !0);\n        const D = I.captureIndices, e = I.matchedRuleId, c = !!(D && D.length > 0) && D[0].end > g;\n        if (-1 === e) {\n            const I = E.getRule(A);\n            H && console.log(\"  popping \" + I.debugName + \" - \" + I.debugEndRegExp), C.produce(E, D[0].start), E = E.withContentNameScopesList(E.nameScopesList), KA(A, B, Q, E, C, I.endCaptures, D), C.produce(E, D[0].end);\n            const e = E;\n            if (E = E.parent, s = e.getAnchorPos(), !c && e.getEnterPos() === g) return H && console.error(\"[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing\"), E = e, C.produce(E, w), void (o = !0);\n        } else {\n            const I = A.getRule(e);\n            C.produce(E, D[0].start);\n            const i = E, t = I.getName(B.content, D), M = E.contentNameScopesList.pushAttributed(t, A);\n            if (E = E.push(e, g, s, D[0].end === w, null, M, M), I instanceof IA) {\n                const g = I;\n                H && console.log(\"  pushing \" + g.debugName + \" - \" + g.debugBeginRegExp), KA(A, B, Q, E, C, g.beginCaptures, D), C.produce(E, D[0].end), s = D[0].end;\n                const e = g.getContentName(B.content, D), t = M.pushAttributed(e, A);\n                if (E = E.withContentNameScopesList(t), g.endHasBackReferences && (E = E.withEndRule(g.getEndWithResolvedBackReferences(B.content, D))), !c && i.hasSameRuleAs(E)) return H && console.error(\"[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\"), E = E.pop(), C.produce(E, w), void (o = !0);\n            } else if (I instanceof DA) {\n                const g = I;\n                H && console.log(\"  pushing \" + g.debugName), KA(A, B, Q, E, C, g.beginCaptures, D), C.produce(E, D[0].end), s = D[0].end;\n                const e = g.getContentName(B.content, D), t = M.pushAttributed(e, A);\n                if (E = E.withContentNameScopesList(t), g.whileHasBackReferences && (E = E.withEndRule(g.getWhileWithResolvedBackReferences(B.content, D))), !c && i.hasSameRuleAs(E)) return H && console.error(\"[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\"), E = E.pop(), C.produce(E, w), void (o = !0);\n            } else {\n                const g = I;\n                if (H && console.log(\"  matched \" + g.debugName + \" - \" + g.debugMatchRegExp), KA(A, B, Q, E, C, g.captures, D), C.produce(E, D[0].end), E = E.pop(), !c) return H && console.error(\"[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping\"), E = E.safePop(), C.produce(E, w), void (o = !0);\n            }\n        }\n        D[0].end > g && (g = D[0].end, Q = !1);\n    }\n}\nfunction kA(A, B, Q, g, E) {\n    return {\n        ruleScanner: A.compileAG(B, Q, g, E),\n        findOptions: 0\n    };\n}\nfunction RA(A, B, Q, g, E) {\n    return {\n        ruleScanner: A.compileWhileAG(B, Q, g, E),\n        findOptions: 0\n    };\n}\nfunction KA(A, B, Q, g, E, C, I) {\n    if (0 === C.length) return;\n    const D = B.content, w = Math.min(C.length, I.length), o = [], s = I[0].end;\n    for(let B = 0; B < w; B++){\n        const w = C[B];\n        if (null === w) continue;\n        const e = I[B];\n        if (0 === e.length) continue;\n        if (e.start > s) break;\n        for(; o.length > 0 && o[o.length - 1].endPos <= e.start;)E.produceFromScopes(o[o.length - 1].scopes, o[o.length - 1].endPos), o.pop();\n        if (o.length > 0 ? E.produceFromScopes(o[o.length - 1].scopes, e.start) : E.produce(g, e.start), w.retokenizeCapturedWithRuleId) {\n            const B = w.getName(D, I), C = g.contentNameScopesList.pushAttributed(B, A), o = w.getContentName(D, I), s = C.pushAttributed(o, A), c = g.push(w.retokenizeCapturedWithRuleId, e.start, -1, !1, null, C, s), i = A.createOnigString(D.substring(0, e.end));\n            HA(A, i, Q && 0 === e.start, e.start, c, E, !1, 0), Y(i);\n            continue;\n        }\n        const c = w.getName(D, I);\n        if (null !== c) {\n            const B = (o.length > 0 ? o[o.length - 1].scopes : g.contentNameScopesList).pushAttributed(c, A);\n            o.push(new YA(B, e.end));\n        }\n    }\n    for(; o.length > 0;)E.produceFromScopes(o[o.length - 1].scopes, o[o.length - 1].endPos), o.pop();\n}\nclass YA {\n    constructor(A, B){\n        this.scopes = A, this.endPos = B;\n    }\n}\nfunction UA(A, B, Q, g, E) {\n    const C = R(B, PA), I = wA.getCompiledRuleId(Q, g, E.repository);\n    for (const Q of C)A.push({\n        debugSelector: B,\n        matcher: Q.matcher,\n        ruleId: I,\n        grammar: E,\n        priority: Q.priority\n    });\n}\nfunction PA(A, B) {\n    if (B.length < A.length) return !1;\n    let Q = 0;\n    return A.every((A)=>{\n        for(let g = Q; g < B.length; g++)if (uA(B[g], A)) return Q = g + 1, !0;\n        return !1;\n    });\n}\nfunction uA(A, B) {\n    if (!A) return !1;\n    if (A === B) return !0;\n    const Q = B.length;\n    return A.length > Q && A.substr(0, Q) === B && \".\" === A[Q];\n}\nclass JA {\n    constructor(A, B, Q, g, E, C, I, D){\n        if (this._rootScopeName = A, this.balancedBracketSelectors = C, this._onigLib = D, this._basicScopeAttributesProvider = new rA(Q, g), this._rootId = -1, this._lastRuleId = 0, this._ruleId2desc = [\n            null\n        ], this._includedGrammars = {}, this._grammarRepository = I, this._grammar = yA(B, null), this._injections = null, this._tokenTypeMatchers = [], E) for (const A of Object.keys(E)){\n            const B = R(A, PA);\n            for (const Q of B)this._tokenTypeMatchers.push({\n                matcher: Q.matcher,\n                type: E[A]\n            });\n        }\n    }\n    get themeProvider() {\n        return this._grammarRepository;\n    }\n    dispose() {\n        for (const A of this._ruleId2desc)A && A.dispose();\n    }\n    createOnigScanner(A) {\n        return this._onigLib.createOnigScanner(A);\n    }\n    createOnigString(A) {\n        return this._onigLib.createOnigString(A);\n    }\n    getMetadataForScope(A) {\n        return this._basicScopeAttributesProvider.getBasicScopeAttributes(A);\n    }\n    _collectInjections() {\n        const A = [], B = this._rootScopeName, Q = ((A)=>A === this._rootScopeName ? this._grammar : this.getExternalGrammar(A))(B);\n        if (Q) {\n            const g = Q.injections;\n            if (g) for(let B in g)UA(A, B, g[B], this, Q);\n            const E = this._grammarRepository.injections(B);\n            E && E.forEach((B)=>{\n                const Q = this.getExternalGrammar(B);\n                if (Q) {\n                    const B = Q.injectionSelector;\n                    B && UA(A, B, Q, this, Q);\n                }\n            });\n        }\n        return A.sort((A, B)=>A.priority - B.priority), A;\n    }\n    getInjections() {\n        if (null === this._injections && (this._injections = this._collectInjections(), H && this._injections.length > 0)) {\n            console.log(`Grammar ${this._rootScopeName} contains the following injections:`);\n            for (const A of this._injections)console.log(`  - ${A.debugSelector}`);\n        }\n        return this._injections;\n    }\n    registerRule(A) {\n        const B = ++this._lastRuleId, Q = A(B);\n        return this._ruleId2desc[B] = Q, Q;\n    }\n    getRule(A) {\n        return this._ruleId2desc[A];\n    }\n    getExternalGrammar(A, B) {\n        if (this._includedGrammars[A]) return this._includedGrammars[A];\n        if (this._grammarRepository) {\n            const Q = this._grammarRepository.lookup(A);\n            if (Q) return this._includedGrammars[A] = yA(Q, B && B.$base), this._includedGrammars[A];\n        }\n    }\n    tokenizeLine(A, B, Q = 0) {\n        const g = this._tokenize(A, B, !1, Q);\n        return {\n            tokens: g.lineTokens.getResult(g.ruleStack, g.lineLength),\n            ruleStack: g.ruleStack,\n            stoppedEarly: g.stoppedEarly\n        };\n    }\n    tokenizeLine2(A, B, Q = 0) {\n        const g = this._tokenize(A, B, !0, Q);\n        return {\n            tokens: g.lineTokens.getBinaryResult(g.ruleStack, g.lineLength),\n            ruleStack: g.ruleStack,\n            stoppedEarly: g.stoppedEarly\n        };\n    }\n    _tokenize(A, B, Q, g) {\n        let E;\n        if (-1 === this._rootId && (this._rootId = wA.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository), this.getInjections()), B && B !== pA.NULL) E = !1, B.reset();\n        else {\n            E = !0;\n            const A = this._basicScopeAttributesProvider.getDefaultAttributes(), Q = this.themeProvider.getDefaults(), g = k.set(0, A.languageId, A.tokenType, null, Q.fontStyle, Q.foregroundId, Q.backgroundId), C = this.getRule(this._rootId).getName(null, null);\n            let I;\n            I = C ? SA.createRootAndLookUpScopeName(C, g, this) : SA.createRoot(\"unknown\", g), B = new pA(null, this._rootId, -1, -1, !1, null, I, I);\n        }\n        A += \"\\n\";\n        const C = this.createOnigString(A), I = C.content.length, D = new lA(Q, A, this._tokenTypeMatchers, this.balancedBracketSelectors), w = HA(this, C, E, 0, B, D, !0, g);\n        return Y(C), {\n            lineLength: I,\n            lineTokens: D,\n            ruleStack: w.stack,\n            stoppedEarly: w.stoppedEarly\n        };\n    }\n}\nfunction yA(A, B) {\n    return (A = U(A)).repository = A.repository || {}, A.repository.$self = {\n        $vscodeTextmateLocation: A.$vscodeTextmateLocation,\n        patterns: A.patterns,\n        name: A.scopeName\n    }, A.repository.$base = B || A.repository.$self, A;\n}\nclass SA {\n    constructor(A, B, Q){\n        this.parent = A, this.scopePath = B, this.tokenAttributes = Q;\n    }\n    static fromExtension(A, B) {\n        let Q = A, g = A?.scopePath ?? null;\n        for (const A of B)g = iA.push(g, A.scopeNames), Q = new SA(Q, g, A.encodedTokenAttributes);\n        return Q;\n    }\n    static createRoot(A, B) {\n        return new SA(null, new iA(null, A), B);\n    }\n    static createRootAndLookUpScopeName(A, B, Q) {\n        const g = Q.getMetadataForScope(A), E = new iA(null, A), C = Q.themeProvider.themeMatch(E), I = SA.mergeAttributes(B, g, C);\n        return new SA(null, E, I);\n    }\n    get scopeName() {\n        return this.scopePath.scopeName;\n    }\n    toString() {\n        return this.getScopeNames().join(\" \");\n    }\n    equals(A) {\n        return SA.equals(this, A);\n    }\n    static equals(A, B) {\n        for(;;){\n            if (A === B) return !0;\n            if (!A && !B) return !0;\n            if (!A || !B) return !1;\n            if (A.scopeName !== B.scopeName || A.tokenAttributes !== B.tokenAttributes) return !1;\n            A = A.parent, B = B.parent;\n        }\n    }\n    static mergeAttributes(A, B, Q) {\n        let g = -1, E = 0, C = 0;\n        return null !== Q && (g = Q.fontStyle, E = Q.foregroundId, C = Q.backgroundId), k.set(A, B.languageId, B.tokenType, null, g, E, C);\n    }\n    pushAttributed(A, B) {\n        if (null === A) return this;\n        if (-1 === A.indexOf(\" \")) return SA._pushAttributed(this, A, B);\n        const Q = A.split(/ /g);\n        let g = this;\n        for (const A of Q)g = SA._pushAttributed(g, A, B);\n        return g;\n    }\n    static _pushAttributed(A, B, Q) {\n        const g = Q.getMetadataForScope(B), E = A.scopePath.push(B), C = Q.themeProvider.themeMatch(E), I = SA.mergeAttributes(A.tokenAttributes, g, C);\n        return new SA(A, E, I);\n    }\n    getScopeNames() {\n        return this.scopePath.getSegments();\n    }\n    getExtensionIfDefined(A) {\n        const B = [];\n        let Q = this;\n        for(; Q && Q !== A;)B.push({\n            encodedTokenAttributes: Q.tokenAttributes,\n            scopeNames: Q.scopePath.getExtensionIfDefined(Q.parent?.scopePath ?? null)\n        }), Q = Q.parent;\n        return Q === A ? B.reverse() : void 0;\n    }\n}\nclass pA {\n    constructor(A, B, Q, g, E, C, I, D){\n        this.parent = A, this.ruleId = B, this.beginRuleCapturedEOL = E, this.endRule = C, this.nameScopesList = I, this.contentNameScopesList = D, this._stackElementBrand = void 0, this.depth = this.parent ? this.parent.depth + 1 : 1, this._enterPos = Q, this._anchorPos = g;\n    }\n    equals(A) {\n        return null !== A && pA._equals(this, A);\n    }\n    static _equals(A, B) {\n        return A === B || !!this._structuralEquals(A, B) && SA.equals(A.contentNameScopesList, B.contentNameScopesList);\n    }\n    static _structuralEquals(A, B) {\n        for(;;){\n            if (A === B) return !0;\n            if (!A && !B) return !0;\n            if (!A || !B) return !1;\n            if (A.depth !== B.depth || A.ruleId !== B.ruleId || A.endRule !== B.endRule) return !1;\n            A = A.parent, B = B.parent;\n        }\n    }\n    clone() {\n        return this;\n    }\n    static _reset(A) {\n        for(; A;)A._enterPos = -1, A._anchorPos = -1, A = A.parent;\n    }\n    reset() {\n        pA._reset(this);\n    }\n    pop() {\n        return this.parent;\n    }\n    safePop() {\n        return this.parent ? this.parent : this;\n    }\n    push(A, B, Q, g, E, C, I) {\n        return new pA(this, A, B, Q, g, E, C, I);\n    }\n    getEnterPos() {\n        return this._enterPos;\n    }\n    getAnchorPos() {\n        return this._anchorPos;\n    }\n    getRule(A) {\n        return A.getRule(this.ruleId);\n    }\n    toString() {\n        const A = [];\n        return this._writeString(A, 0), \"[\" + A.join(\",\") + \"]\";\n    }\n    _writeString(A, B) {\n        return this.parent && (B = this.parent._writeString(A, B)), A[B++] = `(${this.ruleId}, ${this.nameScopesList?.toString()}, ${this.contentNameScopesList?.toString()})`, B;\n    }\n    withContentNameScopesList(A) {\n        return this.contentNameScopesList === A ? this : this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, A);\n    }\n    withEndRule(A) {\n        return this.endRule === A ? this : new pA(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, A, this.nameScopesList, this.contentNameScopesList);\n    }\n    hasSameRuleAs(A) {\n        let B = this;\n        for(; B && B._enterPos === A._enterPos;){\n            if (B.ruleId === A.ruleId) return !0;\n            B = B.parent;\n        }\n        return !1;\n    }\n    toStateStackFrame() {\n        return {\n            ruleId: this.ruleId,\n            beginRuleCapturedEOL: this.beginRuleCapturedEOL,\n            endRule: this.endRule,\n            nameScopesList: this.nameScopesList?.getExtensionIfDefined(this.parent?.nameScopesList ?? null) ?? [],\n            contentNameScopesList: this.contentNameScopesList?.getExtensionIfDefined(this.nameScopesList) ?? []\n        };\n    }\n    static pushFrame(A, B) {\n        const Q = SA.fromExtension(A?.nameScopesList ?? null, B.nameScopesList);\n        return new pA(A, B.ruleId, B.enterPos ?? -1, B.anchorPos ?? -1, B.beginRuleCapturedEOL, B.endRule, Q, SA.fromExtension(Q, B.contentNameScopesList));\n    }\n}\npA.NULL = new pA(null, 0, 0, 0, !1, null, null, null);\nclass dA {\n    constructor(A, B){\n        this.allowAny = !1, this.balancedBracketScopes = A.flatMap((A)=>\"*\" === A ? (this.allowAny = !0, []) : R(A, PA).map((A)=>A.matcher)), this.unbalancedBracketScopes = B.flatMap((A)=>R(A, PA).map((A)=>A.matcher));\n    }\n    get matchesAlways() {\n        return this.allowAny && 0 === this.unbalancedBracketScopes.length;\n    }\n    get matchesNever() {\n        return 0 === this.balancedBracketScopes.length && !this.allowAny;\n    }\n    match(A) {\n        for (const B of this.unbalancedBracketScopes)if (B(A)) return !1;\n        for (const B of this.balancedBracketScopes)if (B(A)) return !0;\n        return this.allowAny;\n    }\n}\nclass lA {\n    constructor(A, B, Q, g){\n        this.balancedBracketSelectors = g, this._emitBinaryTokens = A, this._tokenTypeOverrides = Q, this._lineText = H ? B : null, this._tokens = [], this._binaryTokens = [], this._lastTokenEndIndex = 0;\n    }\n    produce(A, B) {\n        this.produceFromScopes(A.contentNameScopesList, B);\n    }\n    produceFromScopes(A, B) {\n        if (this._lastTokenEndIndex >= B) return;\n        if (this._emitBinaryTokens) {\n            let Q = A?.tokenAttributes ?? 0, g = !1;\n            if (this.balancedBracketSelectors?.matchesAlways && (g = !0), this._tokenTypeOverrides.length > 0 || this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever) {\n                const B = A?.getScopeNames() ?? [];\n                for (const A of this._tokenTypeOverrides)A.matcher(B) && (Q = k.set(Q, 0, A.type, null, -1, 0, 0));\n                this.balancedBracketSelectors && (g = this.balancedBracketSelectors.match(B));\n            }\n            if (g && (Q = k.set(Q, 0, 8, g, -1, 0, 0)), this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === Q) return void (this._lastTokenEndIndex = B);\n            if (H) {\n                const Q = A?.getScopeNames() ?? [];\n                console.log(\"  token: |\" + this._lineText.substring(this._lastTokenEndIndex, B).replace(/\\n$/, \"\\\\n\") + \"|\");\n                for(let A = 0; A < Q.length; A++)console.log(\"      * \" + Q[A]);\n            }\n            return this._binaryTokens.push(this._lastTokenEndIndex), this._binaryTokens.push(Q), void (this._lastTokenEndIndex = B);\n        }\n        const Q = A?.getScopeNames() ?? [];\n        if (H) {\n            console.log(\"  token: |\" + this._lineText.substring(this._lastTokenEndIndex, B).replace(/\\n$/, \"\\\\n\") + \"|\");\n            for(let A = 0; A < Q.length; A++)console.log(\"      * \" + Q[A]);\n        }\n        this._tokens.push({\n            startIndex: this._lastTokenEndIndex,\n            endIndex: B,\n            scopes: Q\n        }), this._lastTokenEndIndex = B;\n    }\n    getResult(A, B) {\n        return this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === B - 1 && this._tokens.pop(), 0 === this._tokens.length && (this._lastTokenEndIndex = -1, this.produce(A, B), this._tokens[this._tokens.length - 1].startIndex = 0), this._tokens;\n    }\n    getBinaryResult(A, B) {\n        this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === B - 1 && (this._binaryTokens.pop(), this._binaryTokens.pop()), 0 === this._binaryTokens.length && (this._lastTokenEndIndex = -1, this.produce(A, B), this._binaryTokens[this._binaryTokens.length - 2] = 0);\n        const Q = new Uint32Array(this._binaryTokens.length);\n        for(let A = 0, B = this._binaryTokens.length; A < B; A++)Q[A] = this._binaryTokens[A];\n        return Q;\n    }\n}\nfunction xA(A, B, Q) {\n    const g = A.length;\n    let E = 0, C = 1, I = 0;\n    function D(B) {\n        if (null === Q) E += B;\n        else for(; B > 0;)10 === A.charCodeAt(E) ? (E++, C++, I = 0) : (E++, I++), B--;\n    }\n    function w(A) {\n        null === Q ? E = A : D(A - E);\n    }\n    function o() {\n        for(; E < g;){\n            let B = A.charCodeAt(E);\n            if (32 !== B && 9 !== B && 13 !== B && 10 !== B) break;\n            D(1);\n        }\n    }\n    function s(B) {\n        return A.substr(E, B.length) === B && (D(B.length), !0);\n    }\n    function e(B) {\n        let Q = A.indexOf(B, E);\n        w(-1 !== Q ? Q + B.length : g);\n    }\n    function c(B) {\n        let Q = A.indexOf(B, E);\n        if (-1 !== Q) {\n            let g = A.substring(E, Q);\n            return w(Q + B.length), g;\n        }\n        {\n            let B = A.substr(E);\n            return w(g), B;\n        }\n    }\n    g > 0 && 65279 === A.charCodeAt(0) && (E = 1);\n    let i = 0, t = null, M = [], h = [], a = null;\n    function F(A, B) {\n        M.push(i), h.push(t), i = A, t = B;\n    }\n    function G() {\n        if (0 === M.length) return n(\"illegal state stack\");\n        i = M.pop(), t = h.pop();\n    }\n    function n(B) {\n        throw new Error(\"Near offset \" + E + \": \" + B + \" ~~~\" + A.substr(E, 50) + \"~~~\");\n    }\n    const r = function() {\n        if (null === a) return n(\"missing <key>\");\n        let A = {};\n        null !== Q && (A[Q] = {\n            filename: B,\n            line: C,\n            char: I\n        }), t[a] = A, a = null, F(1, A);\n    }, N = function() {\n        if (null === a) return n(\"missing <key>\");\n        let A = [];\n        t[a] = A, a = null, F(2, A);\n    }, L = function() {\n        let A = {};\n        null !== Q && (A[Q] = {\n            filename: B,\n            line: C,\n            char: I\n        }), t.push(A), F(1, A);\n    }, H = function() {\n        let A = [];\n        t.push(A), F(2, A);\n    };\n    function k() {\n        if (1 !== i) return n(\"unexpected </dict>\");\n        G();\n    }\n    function R() {\n        return 1 === i || 2 !== i ? n(\"unexpected </array>\") : void G();\n    }\n    function K(A) {\n        if (1 === i) {\n            if (null === a) return n(\"missing <key>\");\n            t[a] = A, a = null;\n        } else 2 === i ? t.push(A) : t = A;\n    }\n    function Y(A) {\n        if (isNaN(A)) return n(\"cannot parse float\");\n        if (1 === i) {\n            if (null === a) return n(\"missing <key>\");\n            t[a] = A, a = null;\n        } else 2 === i ? t.push(A) : t = A;\n    }\n    function U(A) {\n        if (isNaN(A)) return n(\"cannot parse integer\");\n        if (1 === i) {\n            if (null === a) return n(\"missing <key>\");\n            t[a] = A, a = null;\n        } else 2 === i ? t.push(A) : t = A;\n    }\n    function P(A) {\n        if (1 === i) {\n            if (null === a) return n(\"missing <key>\");\n            t[a] = A, a = null;\n        } else 2 === i ? t.push(A) : t = A;\n    }\n    function u(A) {\n        if (1 === i) {\n            if (null === a) return n(\"missing <key>\");\n            t[a] = A, a = null;\n        } else 2 === i ? t.push(A) : t = A;\n    }\n    function J(A) {\n        if (1 === i) {\n            if (null === a) return n(\"missing <key>\");\n            t[a] = A, a = null;\n        } else 2 === i ? t.push(A) : t = A;\n    }\n    function y() {\n        let A = c(\">\"), B = !1;\n        return 47 === A.charCodeAt(A.length - 1) && (B = !0, A = A.substring(0, A.length - 1)), {\n            name: A.trim(),\n            isClosed: B\n        };\n    }\n    function S(A) {\n        if (A.isClosed) return \"\";\n        let B = c(\"</\");\n        return e(\">\"), B.replace(/&#([0-9]+);/g, function(A, B) {\n            return String.fromCodePoint(parseInt(B, 10));\n        }).replace(/&#x([0-9a-f]+);/g, function(A, B) {\n            return String.fromCodePoint(parseInt(B, 16));\n        }).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function(A) {\n            switch(A){\n                case \"&amp;\":\n                    return \"&\";\n                case \"&lt;\":\n                    return \"<\";\n                case \"&gt;\":\n                    return \">\";\n                case \"&quot;\":\n                    return '\"';\n                case \"&apos;\":\n                    return \"'\";\n            }\n            return A;\n        });\n    }\n    for(; E < g && (o(), !(E >= g));){\n        const w = A.charCodeAt(E);\n        if (D(1), 60 !== w) return n(\"expected <\");\n        if (E >= g) return n(\"unexpected end of input\");\n        const c = A.charCodeAt(E);\n        if (63 === c) {\n            D(1), e(\"?>\");\n            continue;\n        }\n        if (33 === c) {\n            if (D(1), s(\"--\")) {\n                e(\"-->\");\n                continue;\n            }\n            e(\">\");\n            continue;\n        }\n        if (47 === c) {\n            if (D(1), o(), s(\"plist\")) {\n                e(\">\");\n                continue;\n            }\n            if (s(\"dict\")) {\n                e(\">\"), k();\n                continue;\n            }\n            if (s(\"array\")) {\n                e(\">\"), R();\n                continue;\n            }\n            return n(\"unexpected closed tag\");\n        }\n        let M = y();\n        switch(M.name){\n            case \"dict\":\n                1 === i ? r() : 2 === i ? L() : (t = {}, null !== Q && (t[Q] = {\n                    filename: B,\n                    line: C,\n                    char: I\n                }), F(1, t)), M.isClosed && k();\n                continue;\n            case \"array\":\n                1 === i ? N() : 2 === i ? H() : (t = [], F(2, t)), M.isClosed && R();\n                continue;\n            case \"key\":\n                p = S(M), 1 !== i ? n(\"unexpected <key>\") : null !== a ? n(\"too many <key>\") : a = p;\n                continue;\n            case \"string\":\n                K(S(M));\n                continue;\n            case \"real\":\n                Y(parseFloat(S(M)));\n                continue;\n            case \"integer\":\n                U(parseInt(S(M), 10));\n                continue;\n            case \"date\":\n                P(new Date(S(M)));\n                continue;\n            case \"data\":\n                u(S(M));\n                continue;\n            case \"true\":\n                S(M), J(!0);\n                continue;\n            case \"false\":\n                S(M), J(!1);\n                continue;\n        }\n        if (!/^plist/.test(M.name)) return n(\"unexpected opened tag \" + M.name);\n    }\n    var p;\n    return t;\n}\nfunction fA(A, B) {\n    throw new Error(\"Near offset \" + A.pos + \": \" + B + \" ~~~\" + A.source.substr(A.pos, 50) + \"~~~\");\n}\nclass mA {\n    constructor(A){\n        this.source = A, this.pos = 0, this.len = A.length, this.line = 1, this.char = 0;\n    }\n}\nclass OA {\n    constructor(){\n        this.value = null, this.type = 0, this.offset = -1, this.len = -1, this.line = -1, this.char = -1;\n    }\n    toLocation(A) {\n        return {\n            filename: A,\n            line: this.line,\n            char: this.char\n        };\n    }\n}\nfunction qA(A, B) {\n    B.value = null, B.type = 0, B.offset = -1, B.len = -1, B.line = -1, B.char = -1;\n    let Q, g = A.source, E = A.pos, C = A.len, I = A.line, D = A.char;\n    for(;;){\n        if (E >= C) return !1;\n        if (Q = g.charCodeAt(E), 32 !== Q && 9 !== Q && 13 !== Q) {\n            if (10 !== Q) break;\n            E++, I++, D = 0;\n        } else E++, D++;\n    }\n    if (B.offset = E, B.line = I, B.char = D, 34 === Q) {\n        for(B.type = 1, E++, D++;;){\n            if (E >= C) return !1;\n            if (Q = g.charCodeAt(E), E++, D++, 92 !== Q) {\n                if (34 === Q) break;\n            } else E++, D++;\n        }\n        B.value = g.substring(B.offset + 1, E - 1).replace(/\\\\u([0-9A-Fa-f]{4})/g, (A, B)=>String.fromCodePoint(parseInt(B, 16))).replace(/\\\\(.)/g, (B, Q)=>{\n            switch(Q){\n                case '\"':\n                    return '\"';\n                case \"\\\\\":\n                    return \"\\\\\";\n                case \"/\":\n                    return \"/\";\n                case \"b\":\n                    return \"\\b\";\n                case \"f\":\n                    return \"\\f\";\n                case \"n\":\n                    return \"\\n\";\n                case \"r\":\n                    return \"\\r\";\n                case \"t\":\n                    return \"\t\";\n                default:\n                    fA(A, \"invalid escape sequence\");\n            }\n            throw new Error(\"unreachable\");\n        });\n    } else if (91 === Q) B.type = 2, E++, D++;\n    else if (123 === Q) B.type = 3, E++, D++;\n    else if (93 === Q) B.type = 4, E++, D++;\n    else if (125 === Q) B.type = 5, E++, D++;\n    else if (58 === Q) B.type = 6, E++, D++;\n    else if (44 === Q) B.type = 7, E++, D++;\n    else if (110 === Q) {\n        if (B.type = 8, E++, D++, Q = g.charCodeAt(E), 117 !== Q) return !1;\n        if (E++, D++, Q = g.charCodeAt(E), 108 !== Q) return !1;\n        if (E++, D++, Q = g.charCodeAt(E), 108 !== Q) return !1;\n        E++, D++;\n    } else if (116 === Q) {\n        if (B.type = 9, E++, D++, Q = g.charCodeAt(E), 114 !== Q) return !1;\n        if (E++, D++, Q = g.charCodeAt(E), 117 !== Q) return !1;\n        if (E++, D++, Q = g.charCodeAt(E), 101 !== Q) return !1;\n        E++, D++;\n    } else if (102 === Q) {\n        if (B.type = 10, E++, D++, Q = g.charCodeAt(E), 97 !== Q) return !1;\n        if (E++, D++, Q = g.charCodeAt(E), 108 !== Q) return !1;\n        if (E++, D++, Q = g.charCodeAt(E), 115 !== Q) return !1;\n        if (E++, D++, Q = g.charCodeAt(E), 101 !== Q) return !1;\n        E++, D++;\n    } else for(B.type = 11;;){\n        if (E >= C) return !1;\n        if (Q = g.charCodeAt(E), !(46 === Q || Q >= 48 && Q <= 57 || 101 === Q || 69 === Q || 45 === Q || 43 === Q)) break;\n        E++, D++;\n    }\n    return B.len = E - B.offset, null === B.value && (B.value = g.substr(B.offset, B.len)), A.pos = E, A.line = I, A.char = D, !0;\n}\nclass bA {\n    constructor(A, B){\n        this._onigLibPromise = B, this._grammars = new Map, this._rawGrammars = new Map, this._injectionGrammars = new Map, this._theme = A;\n    }\n    dispose() {\n        for (const A of this._grammars.values())A.dispose();\n    }\n    setTheme(A) {\n        this._theme = A;\n    }\n    getColorMap() {\n        return this._theme.getColorMap();\n    }\n    addGrammar(A, B) {\n        this._rawGrammars.set(A.scopeName, A), B && this._injectionGrammars.set(A.scopeName, B);\n    }\n    lookup(A) {\n        return this._rawGrammars.get(A);\n    }\n    injections(A) {\n        return this._injectionGrammars.get(A);\n    }\n    getDefaults() {\n        return this._theme.getDefaults();\n    }\n    themeMatch(A) {\n        return this._theme.match(A);\n    }\n    async grammarForScopeName(A, B, Q, g, E) {\n        if (!this._grammars.has(A)) {\n            let C = this._rawGrammars.get(A);\n            if (!C) return null;\n            this._grammars.set(A, function(A, B, Q, g, E, C, I, D) {\n                return new JA(A, B, Q, g, E, C, I, D);\n            }(A, C, B, Q, g, E, this, await this._onigLibPromise));\n        }\n        return this._grammars.get(A);\n    }\n}\nfunction WA(A, B) {\n    let Q = 0;\n    const g = [];\n    let E = A, C = B;\n    for(; E !== C;)E && (!C || E.depth >= C.depth) ? (Q++, E = E.parent) : (g.push(C.toStateStackFrame()), C = C.parent);\n    return {\n        pops: Q,\n        newFrames: g.reverse()\n    };\n}\nfunction TA(A, B) {\n    let Q = A;\n    for(let A = 0; A < B.pops; A++)Q = Q.parent;\n    for (const A of B.newFrames)Q = pA.pushFrame(Q, A);\n    return Q;\n}\nclass XA {\n    constructor(A){\n        this._options = A, this._syncRegistry = new bA(cA.createFromRawTheme(A.theme, A.colorMap), A.onigLib), this._ensureGrammarCache = new Map;\n    }\n    dispose() {\n        this._syncRegistry.dispose();\n    }\n    setTheme(A, B) {\n        this._syncRegistry.setTheme(cA.createFromRawTheme(A, B));\n    }\n    getColorMap() {\n        return this._syncRegistry.getColorMap();\n    }\n    loadGrammarWithEmbeddedLanguages(A, B, Q) {\n        return this.loadGrammarWithConfiguration(A, B, {\n            embeddedLanguages: Q\n        });\n    }\n    loadGrammarWithConfiguration(A, B, Q) {\n        return this._loadGrammar(A, B, Q.embeddedLanguages, Q.tokenTypes, new dA(Q.balancedBracketSelectors || [], Q.unbalancedBracketSelectors || []));\n    }\n    loadGrammar(A) {\n        return this._loadGrammar(A, 0, null, null, null);\n    }\n    async _loadGrammar(A, B, Q, g, E) {\n        const C = new b(this._syncRegistry, A);\n        for(; C.Q.length > 0;)await Promise.all(C.Q.map((A)=>this._loadSingleGrammar(A.scopeName))), C.processQueue();\n        return this._grammarForScopeName(A, B, Q, g, E);\n    }\n    async _loadSingleGrammar(A) {\n        return this._ensureGrammarCache.has(A) || this._ensureGrammarCache.set(A, this._doLoadSingleGrammar(A)), this._ensureGrammarCache.get(A);\n    }\n    async _doLoadSingleGrammar(A) {\n        const B = await this._options.loadGrammar(A);\n        if (B) {\n            const Q = \"function\" == typeof this._options.getInjections ? this._options.getInjections(A) : void 0;\n            this._syncRegistry.addGrammar(B, Q);\n        }\n    }\n    async addGrammar(A, B = [], Q = 0, g = null) {\n        return this._syncRegistry.addGrammar(A, B), await this._grammarForScopeName(A.scopeName, Q, g);\n    }\n    _grammarForScopeName(A, B = 0, Q = null, g = null, E = null) {\n        return this._syncRegistry.grammarForScopeName(A, B, Q, g, E);\n    }\n}\nconst vA = pA.NULL, ZA = function(A, B = null) {\n    return null !== B && /\\.json$/.test(B) ? (Q = A, H ? function(A, B, Q) {\n        let g = new mA(A), E = new OA, C = 0, I = null, D = [], w = [];\n        function o() {\n            D.push(C), w.push(I);\n        }\n        function s() {\n            C = D.pop(), I = w.pop();\n        }\n        function e(A) {\n            fA(g, A);\n        }\n        for(; qA(g, E);){\n            if (0 === C) {\n                if (null !== I && e(\"too many constructs in root\"), 3 === E.type) {\n                    I = {}, I.$vscodeTextmateLocation = E.toLocation(B), o(), C = 1;\n                    continue;\n                }\n                if (2 === E.type) {\n                    I = [], o(), C = 4;\n                    continue;\n                }\n                e(\"unexpected token in root\");\n            }\n            if (2 === C) {\n                if (5 === E.type) {\n                    s();\n                    continue;\n                }\n                if (7 === E.type) {\n                    C = 3;\n                    continue;\n                }\n                e(\"expected , or }\");\n            }\n            if (1 === C || 3 === C) {\n                if (1 === C && 5 === E.type) {\n                    s();\n                    continue;\n                }\n                if (1 === E.type) {\n                    let A = E.value;\n                    if (qA(g, E) && 6 === E.type || e(\"expected colon\"), qA(g, E) || e(\"expected value\"), C = 2, 1 === E.type) {\n                        I[A] = E.value;\n                        continue;\n                    }\n                    if (8 === E.type) {\n                        I[A] = null;\n                        continue;\n                    }\n                    if (9 === E.type) {\n                        I[A] = !0;\n                        continue;\n                    }\n                    if (10 === E.type) {\n                        I[A] = !1;\n                        continue;\n                    }\n                    if (11 === E.type) {\n                        I[A] = parseFloat(E.value);\n                        continue;\n                    }\n                    if (2 === E.type) {\n                        let B = [];\n                        I[A] = B, o(), C = 4, I = B;\n                        continue;\n                    }\n                    if (3 === E.type) {\n                        let Q = {};\n                        Q.$vscodeTextmateLocation = E.toLocation(B), I[A] = Q, o(), C = 1, I = Q;\n                        continue;\n                    }\n                }\n                e(\"unexpected token in dict\");\n            }\n            if (5 === C) {\n                if (4 === E.type) {\n                    s();\n                    continue;\n                }\n                if (7 === E.type) {\n                    C = 6;\n                    continue;\n                }\n                e(\"expected , or ]\");\n            }\n            if (4 === C || 6 === C) {\n                if (4 === C && 4 === E.type) {\n                    s();\n                    continue;\n                }\n                if (C = 5, 1 === E.type) {\n                    I.push(E.value);\n                    continue;\n                }\n                if (8 === E.type) {\n                    I.push(null);\n                    continue;\n                }\n                if (9 === E.type) {\n                    I.push(!0);\n                    continue;\n                }\n                if (10 === E.type) {\n                    I.push(!1);\n                    continue;\n                }\n                if (11 === E.type) {\n                    I.push(parseFloat(E.value));\n                    continue;\n                }\n                if (2 === E.type) {\n                    let A = [];\n                    I.push(A), o(), C = 4, I = A;\n                    continue;\n                }\n                if (3 === E.type) {\n                    let A = {};\n                    A.$vscodeTextmateLocation = E.toLocation(B), I.push(A), o(), C = 1, I = A;\n                    continue;\n                }\n                e(\"unexpected token in array\");\n            }\n            e(\"unknown state\");\n        }\n        return 0 !== w.length && e(\"unclosed constructs\"), I;\n    }(Q, B) : JSON.parse(Q)) : function(A, B) {\n        return H ? function(A, B, Q) {\n            return xA(A, B, \"$vscodeTextmateLocation\");\n        }(A, B) : function(A) {\n            return xA(A, null, null);\n        }(A);\n    }(A, B);\n    var Q;\n};\nvar jA = L.Bz, VA = (\"undefined\" != typeof document && document.currentScript && document.currentScript.src, function(A) {\n    var B, Q, g = void 0 !== (A = A || {}) ? A : {};\n    g.ready = new Promise(function(A, g) {\n        B = A, Q = g;\n    });\n    var E, C = Object.assign({}, g), I = !1;\n    E = function(A) {\n        let B;\n        return \"function\" == typeof readbuffer ? new Uint8Array(readbuffer(A)) : (B = read(A, \"binary\"), \"object\" == typeof B || L(Q), B);\n        var Q;\n    }, \"undefined\" != typeof scriptArgs && scriptArgs, \"undefined\" != typeof onig_print && (\"undefined\" == typeof console && (console = {}), console.log = onig_print, console.warn = console.error = \"undefined\" != typeof printErr ? printErr : onig_print);\n    var D, w, o = g.print || console.log.bind(console), s = g.printErr || console.warn.bind(console);\n    Object.assign(g, C), C = null, g.arguments && g.arguments, g.thisProgram && g.thisProgram, g.quit && g.quit, g.wasmBinary && (D = g.wasmBinary), g.noExitRuntime, \"object\" != typeof WebAssembly && L(\"no native wasm support detected\");\n    var e, c, i, t = !1, M = \"undefined\" != typeof TextDecoder ? new TextDecoder(\"utf8\") : void 0;\n    function h(A, B, Q) {\n        for(var g = B + Q, E = B; A[E] && !(E >= g);)++E;\n        if (E - B > 16 && A.buffer && M) return M.decode(A.subarray(B, E));\n        for(var C = \"\"; B < E;){\n            var I = A[B++];\n            if (128 & I) {\n                var D = 63 & A[B++];\n                if (192 != (224 & I)) {\n                    var w = 63 & A[B++];\n                    if ((I = 224 == (240 & I) ? (15 & I) << 12 | D << 6 | w : (7 & I) << 18 | D << 12 | w << 6 | 63 & A[B++]) < 65536) C += String.fromCharCode(I);\n                    else {\n                        var o = I - 65536;\n                        C += String.fromCharCode(55296 | o >> 10, 56320 | 1023 & o);\n                    }\n                } else C += String.fromCharCode((31 & I) << 6 | D);\n            } else C += String.fromCharCode(I);\n        }\n        return C;\n    }\n    function a(A) {\n        e = A, g.HEAP8 = new Int8Array(A), g.HEAP16 = new Int16Array(A), g.HEAP32 = new Int32Array(A), g.HEAPU8 = c = new Uint8Array(A), g.HEAPU16 = new Uint16Array(A), g.HEAPU32 = i = new Uint32Array(A), g.HEAPF32 = new Float32Array(A), g.HEAPF64 = new Float64Array(A);\n    }\n    g.INITIAL_MEMORY;\n    var F = [], G = [], n = [], r = 0, N = null;\n    function L(A) {\n        g.onAbort && g.onAbort(A), s(A = \"Aborted(\" + A + \")\"), t = !0, A += \". Build with -sASSERTIONS for more info.\";\n        var B = new WebAssembly.RuntimeError(A);\n        throw Q(B), B;\n    }\n    var H, k, R, K = \"data:application/octet-stream;base64,\";\n    function Y(A) {\n        return A.startsWith(K);\n    }\n    function U(A) {\n        try {\n            if (A == H && D) return new Uint8Array(D);\n            if (E) return E(A);\n            throw \"both async and sync fetching of the wasm failed\";\n        } catch (A) {\n            L(A);\n        }\n    }\n    function P(A) {\n        for(; A.length > 0;)A.shift()(g);\n    }\n    function u(A) {\n        try {\n            return w.grow(A - e.byteLength + 65535 >>> 16), a(w.buffer), 1;\n        } catch (A) {}\n    }\n    Y(H = \"onig.wasm\") || (k = H, H = g.locateFile ? g.locateFile(k, \"\") : \"\" + k), R = \"undefined\" != typeof dateNow ? dateNow : ()=>performance.now();\n    var J = [\n        null,\n        [],\n        []\n    ];\n    function y(A, B) {\n        var Q = J[A];\n        0 === B || 10 === B ? ((1 === A ? o : s)(h(Q, 0)), Q.length = 0) : Q.push(B);\n    }\n    var S, p = {\n        emscripten_get_now: R,\n        emscripten_memcpy_big: function(A, B, Q) {\n            c.copyWithin(A, B, B + Q);\n        },\n        emscripten_resize_heap: function(A) {\n            var B = c.length, Q = 2147483648;\n            if ((A >>>= 0) > Q) return !1;\n            let g = (A, B)=>A + (B - A % B) % B;\n            for(var E = 1; E <= 4; E *= 2){\n                var C = B * (1 + .2 / E);\n                if (C = Math.min(C, A + 100663296), u(Math.min(Q, g(Math.max(A, C), 65536)))) return !0;\n            }\n            return !1;\n        },\n        fd_write: function(A, B, Q, g) {\n            for(var E = 0, C = 0; C < Q; C++){\n                var I = i[B >> 2], D = i[B + 4 >> 2];\n                B += 8;\n                for(var w = 0; w < D; w++)y(A, c[I + w]);\n                E += D;\n            }\n            return i[g >> 2] = E, 0;\n        }\n    };\n    function d(A) {\n        function Q() {\n            S || (S = !0, g.calledRun = !0, t || (P(G), B(g), g.onRuntimeInitialized && g.onRuntimeInitialized(), function() {\n                if (g.postRun) for(\"function\" == typeof g.postRun && (g.postRun = [\n                    g.postRun\n                ]); g.postRun.length;)A = g.postRun.shift(), n.unshift(A);\n                var A;\n                P(n);\n            }()));\n        }\n        r > 0 || (function() {\n            if (g.preRun) for(\"function\" == typeof g.preRun && (g.preRun = [\n                g.preRun\n            ]); g.preRun.length;)A = g.preRun.shift(), F.unshift(A);\n            var A;\n            P(F);\n        }(), r > 0 || (g.setStatus ? (g.setStatus(\"Running...\"), setTimeout(function() {\n            setTimeout(function() {\n                g.setStatus(\"\");\n            }, 1), Q();\n        }, 1)) : Q()));\n    }\n    if (function() {\n        var A = {\n            env: p,\n            wasi_snapshot_preview1: p\n        };\n        function B(A, B) {\n            var Q, E = A.exports;\n            g.asm = E, a((w = g.asm.memory).buffer), g.asm.__indirect_function_table, Q = g.asm.__wasm_call_ctors, G.unshift(Q), function(A) {\n                if (r--, g.monitorRunDependencies && g.monitorRunDependencies(r), 0 == r && N) {\n                    var B = N;\n                    N = null, B();\n                }\n            }();\n        }\n        function E(A) {\n            B(A.instance);\n        }\n        function C(B) {\n            return (!D && I && \"function\" == typeof fetch ? fetch(H, {\n                credentials: \"same-origin\"\n            }).then(function(A) {\n                if (!A.ok) throw \"failed to load wasm binary file at '\" + H + \"'\";\n                return A.arrayBuffer();\n            }).catch(function() {\n                return U(H);\n            }) : Promise.resolve().then(function() {\n                return U(H);\n            })).then(function(B) {\n                return WebAssembly.instantiate(B, A);\n            }).then(function(A) {\n                return A;\n            }).then(B, function(A) {\n                s(\"failed to asynchronously prepare wasm: \" + A), L(A);\n            });\n        }\n        if (r++, g.monitorRunDependencies && g.monitorRunDependencies(r), g.instantiateWasm) try {\n            return g.instantiateWasm(A, B);\n        } catch (A) {\n            s(\"Module.instantiateWasm callback failed with error: \" + A), Q(A);\n        }\n        (D || \"function\" != typeof WebAssembly.instantiateStreaming || Y(H) || \"function\" != typeof fetch ? C(E) : fetch(H, {\n            credentials: \"same-origin\"\n        }).then(function(B) {\n            return WebAssembly.instantiateStreaming(B, A).then(E, function(A) {\n                return s(\"wasm streaming compile failed: \" + A), s(\"falling back to ArrayBuffer instantiation\"), C(E);\n            });\n        })).catch(Q);\n    }(), g.___wasm_call_ctors = function() {\n        return (g.___wasm_call_ctors = g.asm.__wasm_call_ctors).apply(null, arguments);\n    }, g.___errno_location = function() {\n        return (g.___errno_location = g.asm.__errno_location).apply(null, arguments);\n    }, g._omalloc = function() {\n        return (g._omalloc = g.asm.omalloc).apply(null, arguments);\n    }, g._ofree = function() {\n        return (g._ofree = g.asm.ofree).apply(null, arguments);\n    }, g._getLastOnigError = function() {\n        return (g._getLastOnigError = g.asm.getLastOnigError).apply(null, arguments);\n    }, g._createOnigScanner = function() {\n        return (g._createOnigScanner = g.asm.createOnigScanner).apply(null, arguments);\n    }, g._freeOnigScanner = function() {\n        return (g._freeOnigScanner = g.asm.freeOnigScanner).apply(null, arguments);\n    }, g._findNextOnigScannerMatch = function() {\n        return (g._findNextOnigScannerMatch = g.asm.findNextOnigScannerMatch).apply(null, arguments);\n    }, g._findNextOnigScannerMatchDbg = function() {\n        return (g._findNextOnigScannerMatchDbg = g.asm.findNextOnigScannerMatchDbg).apply(null, arguments);\n    }, g.stackSave = function() {\n        return (g.stackSave = g.asm.stackSave).apply(null, arguments);\n    }, g.stackRestore = function() {\n        return (g.stackRestore = g.asm.stackRestore).apply(null, arguments);\n    }, g.stackAlloc = function() {\n        return (g.stackAlloc = g.asm.stackAlloc).apply(null, arguments);\n    }, g.dynCall_jiji = function() {\n        return (g.dynCall_jiji = g.asm.dynCall_jiji).apply(null, arguments);\n    }, g.UTF8ToString = function(A, B) {\n        return A ? h(c, A, B) : \"\";\n    }, N = function A() {\n        S || d(), S || (N = A);\n    }, g.preInit) for(\"function\" == typeof g.preInit && (g.preInit = [\n        g.preInit\n    ]); g.preInit.length > 0;)g.preInit.pop()();\n    return d(), A.ready;\n});\nlet zA = null;\nclass _A {\n    static _utf8ByteLength(A) {\n        let B = 0;\n        for(let Q = 0, g = A.length; Q < g; Q++){\n            const E = A.charCodeAt(Q);\n            let C = E, I = !1;\n            if (E >= 55296 && E <= 56319 && Q + 1 < g) {\n                const B = A.charCodeAt(Q + 1);\n                B >= 56320 && B <= 57343 && (C = 65536 + (E - 55296 << 10) | B - 56320, I = !0);\n            }\n            B += C <= 127 ? 1 : C <= 2047 ? 2 : C <= 65535 ? 3 : 4, I && Q++;\n        }\n        return B;\n    }\n    constructor(A){\n        const B = A.length, Q = _A._utf8ByteLength(A), g = Q !== B, E = g ? new Uint32Array(B + 1) : null;\n        g && (E[B] = Q);\n        const C = g ? new Uint32Array(Q + 1) : null;\n        g && (C[Q] = B);\n        const I = new Uint8Array(Q);\n        let D = 0;\n        for(let Q = 0; Q < B; Q++){\n            const w = A.charCodeAt(Q);\n            let o = w, s = !1;\n            if (w >= 55296 && w <= 56319 && Q + 1 < B) {\n                const B = A.charCodeAt(Q + 1);\n                B >= 56320 && B <= 57343 && (o = 65536 + (w - 55296 << 10) | B - 56320, s = !0);\n            }\n            g && (E[Q] = D, s && (E[Q + 1] = D), o <= 127 ? C[D + 0] = Q : o <= 2047 ? (C[D + 0] = Q, C[D + 1] = Q) : o <= 65535 ? (C[D + 0] = Q, C[D + 1] = Q, C[D + 2] = Q) : (C[D + 0] = Q, C[D + 1] = Q, C[D + 2] = Q, C[D + 3] = Q)), o <= 127 ? I[D++] = o : o <= 2047 ? (I[D++] = 192 | (1984 & o) >>> 6, I[D++] = 128 | (63 & o) >>> 0) : o <= 65535 ? (I[D++] = 224 | (61440 & o) >>> 12, I[D++] = 128 | (4032 & o) >>> 6, I[D++] = 128 | (63 & o) >>> 0) : (I[D++] = 240 | (1835008 & o) >>> 18, I[D++] = 128 | (258048 & o) >>> 12, I[D++] = 128 | (4032 & o) >>> 6, I[D++] = 128 | (63 & o) >>> 0), s && Q++;\n        }\n        this.utf16Length = B, this.utf8Length = Q, this.utf16Value = A, this.utf8Value = I, this.utf16OffsetToUtf8 = E, this.utf8OffsetToUtf16 = C;\n    }\n    createString(A) {\n        const B = A._omalloc(this.utf8Length);\n        return A.HEAPU8.set(this.utf8Value, B), B;\n    }\n}\nclass $A {\n    constructor(A){\n        if (this.id = ++$A.LAST_ID, !zA) throw new Error(\"Must invoke loadWASM first.\");\n        this._onigBinding = zA, this.content = A;\n        const B = new _A(A);\n        this.utf16Length = B.utf16Length, this.utf8Length = B.utf8Length, this.utf16OffsetToUtf8 = B.utf16OffsetToUtf8, this.utf8OffsetToUtf16 = B.utf8OffsetToUtf16, this.utf8Length < 1e4 && !$A._sharedPtrInUse ? ($A._sharedPtr || ($A._sharedPtr = zA._omalloc(1e4)), $A._sharedPtrInUse = !0, zA.HEAPU8.set(B.utf8Value, $A._sharedPtr), this.ptr = $A._sharedPtr) : this.ptr = B.createString(zA);\n    }\n    convertUtf8OffsetToUtf16(A) {\n        return this.utf8OffsetToUtf16 ? A < 0 ? 0 : A > this.utf8Length ? this.utf16Length : this.utf8OffsetToUtf16[A] : A;\n    }\n    convertUtf16OffsetToUtf8(A) {\n        return this.utf16OffsetToUtf8 ? A < 0 ? 0 : A > this.utf16Length ? this.utf8Length : this.utf16OffsetToUtf8[A] : A;\n    }\n    dispose() {\n        this.ptr === $A._sharedPtr ? $A._sharedPtrInUse = !1 : this._onigBinding._ofree(this.ptr);\n    }\n}\n$A.LAST_ID = 0, $A._sharedPtr = 0, $A._sharedPtrInUse = !1;\nclass AB {\n    constructor(A){\n        if (!zA) throw new Error(\"Must invoke loadWASM first.\");\n        const B = [], Q = [];\n        for(let g = 0, E = A.length; g < E; g++){\n            const E = new _A(A[g]);\n            B[g] = E.createString(zA), Q[g] = E.utf8Length;\n        }\n        const g = zA._omalloc(4 * A.length);\n        zA.HEAPU32.set(B, g / 4);\n        const E = zA._omalloc(4 * A.length);\n        zA.HEAPU32.set(Q, E / 4);\n        const C = zA._createOnigScanner(g, E, A.length);\n        for(let Q = 0, g = A.length; Q < g; Q++)zA._ofree(B[Q]);\n        zA._ofree(E), zA._ofree(g), 0 === C && function(A) {\n            throw new Error(A.UTF8ToString(A._getLastOnigError()));\n        }(zA), this._onigBinding = zA, this._ptr = C;\n    }\n    dispose() {\n        this._onigBinding._freeOnigScanner(this._ptr);\n    }\n    findNextMatchSync(A, B, Q) {\n        let g = false, E = 0;\n        if (\"number\" == typeof Q ? (8 & Q && (g = !0), E = Q) : \"boolean\" == typeof Q && (g = Q), \"string\" == typeof A) {\n            A = new $A(A);\n            const Q = this._findNextMatchSync(A, B, g, E);\n            return A.dispose(), Q;\n        }\n        return this._findNextMatchSync(A, B, g, E);\n    }\n    _findNextMatchSync(A, B, Q, g) {\n        const E = this._onigBinding;\n        let C;\n        if (C = Q ? E._findNextOnigScannerMatchDbg(this._ptr, A.id, A.ptr, A.utf8Length, A.convertUtf16OffsetToUtf8(B), g) : E._findNextOnigScannerMatch(this._ptr, A.id, A.ptr, A.utf8Length, A.convertUtf16OffsetToUtf8(B), g), 0 === C) return null;\n        const I = E.HEAPU32;\n        let D = C / 4;\n        const w = I[D++], o = I[D++];\n        let s = [];\n        for(let B = 0; B < o; B++){\n            const Q = A.convertUtf8OffsetToUtf16(I[D++]), g = A.convertUtf8OffsetToUtf16(I[D++]);\n            s[B] = {\n                start: Q,\n                end: g,\n                length: g - Q\n            };\n        }\n        return {\n            index: w,\n            captureIndices: s\n        };\n    }\n}\nlet BB = !1, QB = null;\nfunction gB(A) {\n    if (BB) return QB;\n    let B, Q, g, E;\n    if (BB = !0, function(A) {\n        return \"function\" == typeof A.instantiator;\n    }(A)) B = A.instantiator, Q = A.print;\n    else {\n        let g;\n        !function(A) {\n            return void 0 !== A.data;\n        }(A) ? g = A : (g = A.data, Q = A.print), B = function(A) {\n            return \"undefined\" != typeof Response && A instanceof Response;\n        }(g) ? \"function\" == typeof WebAssembly.instantiateStreaming ? function(A) {\n            return (B)=>WebAssembly.instantiateStreaming(A, B);\n        }(g) : function(A) {\n            return async (B)=>{\n                const Q = await A.arrayBuffer();\n                return WebAssembly.instantiate(Q, B);\n            };\n        }(g) : function(A) {\n            return (B)=>WebAssembly.instantiate(A, B);\n        }(g);\n    }\n    return QB = new Promise((A, B)=>{\n        g = A, E = B;\n    }), function(A, B, Q, g) {\n        VA({\n            print: B,\n            instantiateWasm: (B, Q)=>{\n                if (\"undefined\" == typeof performance) {\n                    const A = ()=>Date.now();\n                    B.env.emscripten_get_now = A, B.wasi_snapshot_preview1.emscripten_get_now = A;\n                }\n                return A(B).then((A)=>Q(A.instance), g), {};\n            }\n        }).then((A)=>{\n            zA = A, Q();\n        });\n    }(B, Q, g, E), QB;\n}\nfunction EB(A) {\n    return new $A(A);\n}\nfunction CB(A) {\n    return new AB(A);\n}\nfunction IB(A) {\n    const B = n[A];\n    if (!B) return;\n    const { id: Q } = r[B];\n    return {\n        id: Q,\n        scopeName: B\n    };\n}\nconst DB = new Map;\nlet wB, oB;\nasync function sB(A) {\n    if (DB.has(A)) return DB.get(A);\n    const B = function(A) {\n        return r[A];\n    }(A);\n    if (!B) return Promise.resolve(void 0);\n    let g;\n    if (void 0 === wB && (g = eB(B.path), wB = g.then(()=>!0).catch(()=>!1)), void 0 === oB && (oB = await wB), oB) {\n        const Q = g || eB(B.path);\n        return DB.set(A, Q), Q;\n    }\n    const E = Q(`grammars/${B.id}`);\n    B.embeddedScopes.forEach((A)=>{\n        if (!DB.has(A)) {\n            const B = E.then((B)=>B.find((B)=>B.scopeName === A));\n            DB.set(A, B);\n        }\n    });\n    const C = E.then((B)=>B.find((B)=>B.scopeName === A));\n    return DB.set(A, C), C;\n}\nasync function eB(A) {\n    return await B(\"grammars\", A);\n}\nconst cB = 30720, iB = 16744448, tB = 16775168, MB = 11, hB = 15, aB = {\n    NotSet: -1,\n    None: 0,\n    Italic: 1,\n    Bold: 2,\n    Underline: 4,\n    Strikethrough: 8\n};\nfunction FB(A, B, Q, g) {\n    const { tokens: E, ruleStack: C } = A.tokenizeLine2(Q, B), I = [];\n    let D = Q.length;\n    for(let A = E.length - 2; A >= 0; A -= 2){\n        const B = E[A], g = E[A + 1], C = Q.slice(B, D);\n        I.unshift({\n            content: C,\n            metadata: g\n        }), D = B;\n    }\n    let w = [];\n    if (null == g ? void 0 : g.preserveWhitespace) w = I;\n    else for(let A = 0; A < I.length; A++){\n        const B = I[A];\n        if (\"\" !== B.content.trim()) {\n            const A = w[w.length - 1];\n            A && (A.metadata & tB) == (B.metadata & tB) ? A.content += B.content : w.push(B);\n        } else w.length > 0 ? w[w.length - 1].content += B.content : A < I.length - 1 ? I[A + 1].content = B.content + I[A + 1].content : w.push(B);\n    }\n    return {\n        rawTokens: w,\n        nextStack: C\n    };\n}\nfunction GB(A, B, Q) {\n    let g = null;\n    return A.split(/\\r?\\n|\\r/g).map((A)=>{\n        const { rawTokens: E, nextStack: C } = FB(B, g, A, {\n            preserveWhitespace: !0\n        }), I = E.map(({ content: A, metadata: B })=>({\n                content: A,\n                style: nB(B, Q)\n            })), D = function(A, B, Q, g) {\n            const { tokens: E } = Q.tokenizeLine(A, B), C = [];\n            for(let B = 0; B < E.length; B++){\n                const { startIndex: Q, endIndex: I, scopes: D } = E[B];\n                let w = 0;\n                const o = g.find((A)=>{\n                    if (w += A.content.length, Q < w) return !0;\n                });\n                C.push(Object.assign(Object.assign({}, o), {\n                    content: A.slice(Q, I),\n                    scopes: D.reverse()\n                }));\n            }\n            return C;\n        }(A, g, B, I);\n        return g = C, D;\n    });\n}\nfunction nB(A, B) {\n    const Q = {\n        color: B[(A & iB) >>> hB]\n    }, g = (A & cB) >>> MB;\n    return g & aB.Italic && (Q.fontStyle = \"italic\"), g & aB.Bold && (Q.fontWeight = \"bold\"), g & aB.Underline && (Q.textDecoration = \"underline\"), g & aB.Strikethrough && (Q.textDecoration = \"line-through\"), Q;\n}\nvar rB = function(A) {\n    var B = null;\n    if (\"undefined\" != typeof process && null != process.versions && null != process.versions.node) B = Buffer.from(A, \"base64\");\n    else {\n        var Q = globalThis.atob(A), g = Q.length;\n        B = new Uint8Array(new ArrayBuffer(g));\n        for(var E = 0; E < g; E++)B[E] = Q.charCodeAt(E);\n    }\n    return B;\n}(\"\");\nlet NB = null;\nfunction LB(A) {\n    if (!NB) {\n        const A = gB(rB).then(()=>({\n                createOnigScanner: CB,\n                createOnigString: EB\n            }));\n        NB = new jA({\n            onigLib: A,\n            loadGrammar: (A)=>sB(A)\n        });\n    }\n    const B = A.filter((A)=>\"text\" != A).map((A)=>{\n        const B = IB(A);\n        if (!B) throw new kB(A);\n        return NB.loadGrammar(B.scopeName);\n    });\n    return Promise.all(B);\n}\nfunction HB(A) {\n    if (\"text\" == A) return {\n        langId: \"text\",\n        grammar: null\n    };\n    const B = IB(A);\n    if (!B) throw new kB(A);\n    const Q = function(A) {\n        const { _syncRegistry: B } = NB;\n        return null == B ? void 0 : B._grammars.get(A);\n    }(B.scopeName);\n    if (!Q) throw new Error(`Syntax highlighting error: grammar for ${A} not loaded`);\n    return {\n        langId: B.id,\n        grammar: Q\n    };\n}\nclass kB extends Error {\n    constructor(A){\n        super(`Unknown language: ${A}`), this.alias = A;\n    }\n}\nfunction RB(A, B, Q) {\n    NB.setTheme(Q);\n    const g = function(A) {\n        const B = NB.getColorMap();\n        return A.colorNames ? B.map((B)=>Object.keys(A.colorNames).find((Q)=>A.colorNames[Q].toUpperCase() === B.toUpperCase()) || B) : B;\n    }(Q);\n    return function(A, B, Q) {\n        let g = null;\n        return A.split(/\\r?\\n|\\r/g).map((A)=>{\n            const { rawTokens: E, nextStack: C } = FB(B, g, A);\n            return g = C, E.map(({ content: A, metadata: B })=>({\n                    content: A,\n                    style: nB(B, Q)\n                }));\n        });\n    }(A, B, g);\n}\nfunction KB(A) {\n    return A.split(/\\r?\\n|\\r/g).map((A)=>[\n            {\n                content: A,\n                style: {}\n            }\n        ]);\n}\nfunction YB(A, B) {\n    if (!A) return [\n        {\n            fromLineNumber: B,\n            toLineNumber: B\n        }\n    ];\n    if (A.startsWith(\"[\")) return UB(A, B);\n    return uB(A.slice(1, -1)).map((A)=>{\n        if (A.includes(\"[\")) {\n            console.log(\"part\", A);\n            const [Q, g] = A.split(\"[\"), E = Number(Q), C = B + E - 1;\n            if (!JB(C)) throw new yB(Q);\n            return UB(\"[\" + g, C);\n        }\n        const { from: Q, to: g } = PB(A);\n        return [\n            {\n                fromLineNumber: Q + B - 1,\n                toLineNumber: g + B - 1\n            }\n        ];\n    }).flat();\n}\nfunction UB(A, B) {\n    return uB(A.slice(1, -1)).map((A)=>{\n        const { from: Q, to: g } = PB(A);\n        return {\n            lineNumber: B,\n            fromColumn: Q,\n            toColumn: g\n        };\n    });\n}\nfunction PB(A) {\n    const [B, Q] = A.split(\":\");\n    if (!JB(B)) throw new yB(B);\n    const g = Number(B);\n    if (g < 1) throw new SB;\n    if (Q) {\n        if (!JB(Q)) throw new yB(Q);\n        return {\n            from: g,\n            to: +Q\n        };\n    }\n    return {\n        from: g,\n        to: g\n    };\n}\nfunction uB(A) {\n    return A.split(/,(?![^\\[]*\\])/g);\n}\nfunction JB(A) {\n    A = A.toString();\n    var B = Math.abs(A), Q = parseInt(A, 10);\n    return !isNaN(B) && Q === B && B.toString() === A;\n}\nclass yB extends Error {\n    constructor(A){\n        super(`Invalid number \"${A}\" in range string`), this.number = A, Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass SB extends Error {\n    constructor(){\n        super(\"Invalid line or column number in range string\"), Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nconst pB = \"#001\", dB = \"#010\", lB = {\n    name: \"comments\",\n    type: \"light\",\n    foreground: \"\",\n    background: \"\",\n    colors: {},\n    settings: [\n        {\n            settings: {\n                foreground: \"#000\"\n            }\n        },\n        {\n            scope: [\n                \"punctuation.definition.comment\"\n            ],\n            settings: {\n                foreground: pB\n            }\n        },\n        {\n            scope: \"comment\",\n            settings: {\n                foreground: dB\n            }\n        }\n    ]\n};\nfunction xB(A, B, Q, g) {\n    const E = B ? RB(A, B, lB) : KB(A), C = [];\n    let I = 1;\n    const D = E.map((A)=>{\n        const { annotations: B, lineWithoutComments: E } = function(A, B, Q) {\n            if (!A.some((A)=>A.style.color === pB)) return {\n                annotations: [],\n                lineWithoutComments: A\n            };\n            const g = [];\n            let E = 0;\n            for(; E < A.length;){\n                const C = A[E];\n                if (C.style.color !== dB) {\n                    E++;\n                    continue;\n                }\n                const { name: I, query: D, rangeString: w } = fB(C.content);\n                if (!B.includes(I)) {\n                    E++;\n                    continue;\n                }\n                const o = A[E - 1], s = A[E + 1], e = [];\n                o && o.style.color === pB && e.push(o), e.push(C), s && s.style.color === pB && e.push(s), g.push({\n                    tokens: e,\n                    name: I,\n                    query: D,\n                    ranges: YB(w, Q)\n                }), E += 2;\n            }\n            let C = A;\n            for (const A of g)C = C.filter((B)=>!A.tokens.includes(B));\n            C.every((A)=>\"\" === A.content.trim()) && (C = null);\n            return {\n                annotations: g.map((A)=>({\n                        name: A.name,\n                        query: A.query,\n                        ranges: A.ranges\n                    })),\n                lineWithoutComments: C\n            };\n        }(A, g, I);\n        if (C.push(...B), !E) return null;\n        const D = E.map((A)=>A.content).join(\"\");\n        return \"mdx\" === Q && B.length > 0 && \"{}\" === D.trim() ? null : (I++, D);\n    }).filter((A)=>null !== A).join(\"\\n\");\n    return {\n        newCode: D,\n        annotations: C\n    };\n}\nfunction fB(A) {\n    var B;\n    const Q = A.match(/\\s*([\\w-]+)?(\\([^\\)]*\\)|\\[[^\\]]*\\])?(.*)$/);\n    return {\n        name: Q[1],\n        rangeString: Q[2],\n        query: null === (B = Q[3]) || void 0 === B ? void 0 : B.trim()\n    };\n}\nfunction mB(A, B) {\n    let Q = [], g = 1;\n    return A.forEach((A)=>{\n        Q.push({\n            fromColumn: g,\n            toColumn: g + A.content.length - 1,\n            token: A\n        }), g += A.content.length;\n    }), B.forEach((A)=>{\n        Q = function(A, B) {\n            const { range: Q } = B, { fromColumn: g, toColumn: E } = Q, C = [];\n            let I = 0;\n            for(; I < A.length && A[I].toColumn < g;)C.push(A[I]), I++;\n            if (I === A.length) return A;\n            const D = {\n                annotationName: B.name,\n                annotationQuery: B.query,\n                fromColumn: g,\n                toColumn: E,\n                tokens: []\n            }, w = A[I];\n            if (w.fromColumn < g) {\n                const [A, B] = qB(w, g);\n                if (C.push(A), C.push(D), B.toColumn > E) {\n                    const [A, Q] = qB(B, E + 1);\n                    D.tokens.push(A), C.push(Q);\n                } else D.tokens.push(B);\n                I++;\n            } else C.push(D);\n            for(; I < A.length && A[I].toColumn <= E;)D.tokens.push(A[I]), I++;\n            if (I === A.length) return C;\n            const o = A[I];\n            if (o.fromColumn <= E) {\n                const [A, B] = qB(o, E + 1);\n                D.tokens.push(A), C.push(B), I++;\n            }\n            for(; I < A.length;)C.push(A[I]), I++;\n            return C;\n        }(Q, A);\n    }), Q.map((A)=>OB(A));\n}\nfunction OB(A) {\n    return \"tokens\" in A ? {\n        annotationName: A.annotationName,\n        annotationQuery: A.annotationQuery,\n        fromColumn: A.fromColumn,\n        toColumn: A.toColumn,\n        tokens: A.tokens.map((A)=>OB(A))\n    } : A.token;\n}\nfunction qB(A, B) {\n    if (\"token\" in A) {\n        const Q = Object.assign(Object.assign({}, A.token), {\n            content: A.token.content.slice(0, B - A.fromColumn)\n        }), g = Object.assign(Object.assign({}, A.token), {\n            content: A.token.content.slice(B - A.fromColumn)\n        });\n        return [\n            Object.assign(Object.assign({}, A), {\n                toColumn: B - 1,\n                token: Q\n            }),\n            Object.assign(Object.assign({}, A), {\n                fromColumn: B,\n                token: g\n            })\n        ];\n    }\n    {\n        const Q = [], g = [];\n        A.tokens.forEach((A)=>{\n            if (A.toColumn < B) Q.push(A);\n            else if (A.fromColumn >= B) g.push(A);\n            else {\n                const [E, C] = qB(A, B);\n                Q.push(E), g.push(C);\n            }\n        });\n        return [\n            Object.assign(Object.assign({}, A), {\n                toColumn: B - 1,\n                tokens: Q\n            }),\n            Object.assign(Object.assign({}, A), {\n                fromColumn: B,\n                tokens: g\n            })\n        ];\n    }\n}\nfunction bB(A, B) {\n    let Q = A.map((A, B)=>({\n            fromLineNumber: B + 1,\n            toLineNumber: B + 1,\n            line: A\n        }));\n    return B.forEach((A)=>{\n        Q = function(A, B) {\n            const { range: Q, name: g, query: E } = B, { fromLineNumber: C, toLineNumber: I } = Q, D = [];\n            let w = 0;\n            for(; w < A.length && A[w].toLineNumber < C;)D.push(A[w]), w++;\n            if (w === A.length) return D;\n            const o = {\n                annotationName: g,\n                annotationQuery: E,\n                fromLineNumber: C,\n                toLineNumber: I,\n                lines: []\n            }, s = A[w];\n            if (s.fromLineNumber < C) {\n                const [A, B] = TB(s, C);\n                if (D.push(A), D.push(o), B.toLineNumber > I) {\n                    const [A, Q] = TB(B, I + 1);\n                    o.lines.push(A), D.push(Q);\n                } else o.lines.push(B);\n                w++;\n            } else D.push(o);\n            for(; w < A.length && A[w].toLineNumber <= I;)o.lines.push(A[w]), w++;\n            if (w === A.length) return D;\n            const e = A[w];\n            if (e.fromLineNumber <= I) {\n                const [A, B] = TB(e, I + 1);\n                o.lines.push(A), D.push(B), w++;\n            }\n            for(; w < A.length;)D.push(A[w]), w++;\n            return D;\n        }(Q, A);\n    }), Q.map((A)=>WB(A));\n}\nfunction WB(A) {\n    return \"line\" in A ? {\n        lineNumber: A.fromLineNumber,\n        tokens: A.line.tokens\n    } : {\n        annotationName: A.annotationName,\n        annotationQuery: A.annotationQuery,\n        fromLineNumber: A.fromLineNumber,\n        toLineNumber: A.toLineNumber,\n        lines: A.lines.map((A)=>WB(A))\n    };\n}\nfunction TB(A, B) {\n    if (\"line\" in A) return [\n        Object.assign(Object.assign({}, A), {\n            toLineNumber: B - 1\n        }),\n        Object.assign(Object.assign({}, A), {\n            fromLineNumber: B\n        })\n    ];\n    {\n        const Q = [], g = [];\n        return A.lines.forEach((A)=>{\n            if (A.toLineNumber < B) Q.push(A);\n            else if (A.fromLineNumber >= B) g.push(A);\n            else {\n                const [E, C] = TB(A, B);\n                Q.push(E), g.push(C);\n            }\n        }), [\n            Object.assign(Object.assign({}, A), {\n                toLineNumber: B - 1,\n                lines: Q\n            }),\n            Object.assign(Object.assign({}, A), {\n                fromLineNumber: B,\n                lines: g\n            })\n        ];\n    }\n}\nfunction XB(A, B) {\n    const { inlineAnnotations: Q, multilineAnnotations: g } = function(A) {\n        const B = [], Q = [];\n        return A.forEach((A)=>{\n            A.ranges.forEach((g)=>{\n                \"lineNumber\" in g ? B.push(Object.assign(Object.assign({}, A), {\n                    range: g\n                })) : Q.push(Object.assign(Object.assign({}, A), {\n                    range: g\n                }));\n            });\n        }), {\n            inlineAnnotations: B,\n            multilineAnnotations: Q\n        };\n    }(B);\n    return bB(A.map((A, B)=>{\n        const g = Q.filter((A)=>A.range.lineNumber === B + 1);\n        return {\n            lineNumber: B + 1,\n            tokens: mB(A, g)\n        };\n    }), g);\n}\nasync function vB(A, B) {\n    await Promise.all([\n        LB(A),\n        i(B)\n    ]);\n}\nasync function ZB(A, B, Q = \"dark-plus\", g = {}) {\n    const E = A || \"\", C = B || \"text\";\n    if (\"string\" != typeof E) throw new Error(\"Syntax highlighter error: code must be a string\");\n    if (\"string\" != typeof C) throw new Error(\"Syntax highlighter error: lang must be a string\");\n    return await vB([\n        C\n    ], Q), jB(E, C, Q, g);\n}\nfunction jB(A, B, Q = \"dark-plus\", g = {}) {\n    const E = A || \"\", C = B || \"text\";\n    if (\"string\" != typeof E) throw new Error(\"Syntax highlighter error: code must be a string\");\n    if (\"string\" != typeof C) throw new Error(\"Syntax highlighter error: lang must be a string\");\n    const { langId: I, grammar: D } = HB(C), w = t(Q), o = \"text\" == I ? KB(E) : (null == g ? void 0 : g.scopes) ? function(A, B, Q) {\n        return NB.setTheme(Q), GB(A, B, NB.getColorMap());\n    }(E, D, w) : RB(E, D, w);\n    if (function(A) {\n        return \"annotations\" in A;\n    }(g)) {\n        return {\n            lines: XB(o, (null == g ? void 0 : g.annotations) || []),\n            lang: I,\n            style: {\n                color: w.foreground,\n                background: w.background\n            }\n        };\n    }\n    return {\n        lines: o,\n        lang: I,\n        style: {\n            color: w.foreground,\n            background: w.background\n        }\n    };\n}\nasync function VB(A, B, Q = []) {\n    if (0 === Q.length) return {\n        code: A,\n        annotations: []\n    };\n    await LB([\n        B\n    ]);\n    const { grammar: g } = HB(B), { newCode: E, annotations: C } = xB(A, g, B, Q);\n    return {\n        code: E,\n        annotations: C\n    };\n}\nasync function zB(A) {\n    if (!A) throw new Error(\"Syntax highlighter error: undefined theme\");\n    await vB([], A);\n    return F(t(A));\n}\nfunction _B(A) {\n    if (!A) throw new Error(\"Syntax highlighter error: undefined theme\");\n    return F(t(A));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@code-hike/lighter/dist/index.esm.mjs\n");

/***/ })

};
;