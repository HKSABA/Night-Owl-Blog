"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/bright";
exports.ids = ["vendor-chunks/bright"];
exports.modules = {

/***/ "(rsc)/./node_modules/bright/dist/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/bright/dist/index.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Code: () => (/* binding */ Code),\n/* harmony export */   linesToContent: () => (/* binding */ linesToContent),\n/* harmony export */   tokensToContent: () => (/* binding */ tokensToContent),\n/* harmony export */   tokensToTokenList: () => (/* binding */ tokensToTokenList)\n/* harmony export */ });\n/* harmony import */ var _code_hike_lighter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @code-hike/lighter */ \"(rsc)/./node_modules/@code-hike/lighter/dist/index.esm.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\");\n/* harmony import */ var server_only__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! server-only */ \"(rsc)/./node_modules/next/dist/compiled/server-only/empty.js\");\n// src/index.tsx\n\n// src/code.tsx\n\n// src/title.tsx\n\nfunction TitleBar(props) {\n    const colors = props.colors;\n    const { TitleBarContent: TitleBarContent2 } = props;\n    const elementProps = {\n        className: props.titleClassName,\n        style: {\n            background: colors.editorGroupHeader.tabsBackground,\n            color: colors.tab.activeForeground,\n            position: \"relative\",\n            display: \"flex\"\n        }\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        ...elementProps,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TitleBarContent2, {\n                ...props\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                    position: \"absolute\",\n                    bottom: 0,\n                    left: 0,\n                    width: \"100%\",\n                    pointerEvents: \"none\",\n                    background: colors.tab.border,\n                    height: 1,\n                    zIndex: 9\n                }\n            })\n        ]\n    });\n}\nfunction TitleBarContent(props) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Tab, {\n        ...props\n    });\n}\nfunction Tab(props) {\n    const { TabContent: TabContent2 } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        \"data-bright-tab\": props.title,\n        style: {\n            cursor: \"pointer\",\n            background: \"var(--tab-background)\",\n            color: \"var(--tab-color)\",\n            display: \"inline-block\",\n            padding: \"0.5em 1em\",\n            position: \"relative\",\n            fontFamily: \"Segoe WPC,Segoe UI,-apple-system,BlinkMacSystemFont,sans-serif\",\n            fontSize: \"13px\",\n            borderRight: \"1px solid var(--tab-border)\"\n        },\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TabContent2, {\n                ...props\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                    position: \"absolute\",\n                    left: 0,\n                    top: 0,\n                    height: 1,\n                    zIndex: 10,\n                    background: \"var(--tab-top-border)\",\n                    width: \"100%\"\n                }\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                    position: \"absolute\",\n                    bottom: 0,\n                    left: 0,\n                    height: 1,\n                    zIndex: 10,\n                    background: \"var(--tab-bottom-border)\",\n                    width: \"100%\"\n                }\n            })\n        ]\n    });\n}\nfunction TabContent(props) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children: props.title\n    });\n}\n// src/tokens.tsx\n\nfunction TokensRenderer({ tokens, brightProps }) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children: tokens.map((token, i)=>\"content\" in token ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TokenRenderer, {\n                token,\n                brightProps\n            }, i) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TokenGroupRenderer, {\n                tokens: token,\n                brightProps\n            }, i))\n    });\n}\nfunction TokenGroupRenderer({ tokens, brightProps }) {\n    const { extensions } = brightProps;\n    const extension = extensions.find((ext)=>ext.name === tokens.annotationName);\n    const Wrapper = extension == null ? void 0 : extension.InlineAnnotation;\n    if (!Wrapper) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TokensRenderer, {\n            tokens: tokens.tokens,\n            brightProps\n        });\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Wrapper, {\n        query: tokens.annotationQuery,\n        tokens: tokens.tokens,\n        brightProps,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TokensRenderer, {\n            tokens: tokens.tokens,\n            brightProps\n        })\n    });\n}\nfunction TokenRenderer({ token, brightProps }) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n        style: token.style,\n        children: token.content\n    });\n}\nfunction tokensToTokenList(tokens) {\n    return tokens.map((token)=>{\n        if (\"content\" in token) {\n            return token;\n        } else {\n            return tokensToTokenList(token.tokens);\n        }\n    }).flat();\n}\nfunction tokensToContent(tokens) {\n    return tokens.map((token)=>{\n        if (\"content\" in token) {\n            return token.content;\n        } else {\n            return tokensToContent(token.tokens);\n        }\n    }).join(\"\");\n}\n// src/lines.tsx\n\nfunction LinesComponent({ lines, brightProps }) {\n    const { extensions } = brightProps;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children: lines.map((line, i)=>{\n            if (\"lineNumber\" in line) {\n                return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(LineComponent, {\n                    line,\n                    brightProps\n                }, i);\n            }\n            const extension = extensions.find((ext)=>ext.name === line.annotationName);\n            if (extension == null ? void 0 : extension.MultilineAnnotation) {\n                const Wrapper = extension.MultilineAnnotation;\n                return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Wrapper, {\n                    query: line.annotationQuery,\n                    lines: line.lines,\n                    brightProps,\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(LinesComponent, {\n                        lines: line.lines,\n                        brightProps\n                    })\n                }, i);\n            } else {\n                return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(LinesComponent, {\n                    lines: line.lines,\n                    brightProps\n                }, i);\n            }\n        })\n    });\n}\nfunction LineComponent({ line, brightProps }) {\n    const digits = brightProps.lineNumbers ? brightProps.lineCount.toString().length : 0;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        style: {\n            padding: \"0 1em\"\n        },\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"span\", {\n            children: [\n                digits > 0 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n                    \"data-bright-ln\": line.lineNumber,\n                    style: {\n                        width: `${digits}ch`\n                    },\n                    children: line.lineNumber\n                }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TokensRenderer, {\n                    tokens: line.tokens,\n                    brightProps\n                }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"br\", {})\n            ]\n        })\n    });\n}\nfunction linesToContent(lines) {\n    return lines.map((line)=>{\n        if (\"lineNumber\" in line) {\n            return tokensToContent(line.tokens);\n        } else {\n            return linesToContent(line.lines);\n        }\n    }).join(\"\\n\");\n}\n// src/code.tsx\n\nasync function BrightCode(props) {\n    const brightProps = await highlight(props);\n    const { Root: Root2 } = brightProps;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Root2, {\n        ...brightProps\n    });\n}\nasync function highlight(props) {\n    if (props.subProps) {\n        const { subProps, ...rootProps } = props;\n        const newSubProps = await Promise.all(subProps.map((sub)=>highlight({\n                ...rootProps,\n                ...sub\n            })));\n        return {\n            ...rootProps,\n            ...newSubProps[0],\n            subProps: newSubProps\n        };\n    }\n    const { code, lang, theme, annotations } = props;\n    const { lines } = await (0,_code_hike_lighter__WEBPACK_IMPORTED_MODULE_0__.highlight)(code, lang, theme, {\n        annotations\n    });\n    const colors = (0,_code_hike_lighter__WEBPACK_IMPORTED_MODULE_0__.getThemeColorsSync)(theme);\n    const brightProps = {\n        ...props,\n        subProps: [],\n        colors,\n        lines,\n        lineCount: code.split(`\n`).length\n    };\n    return brightProps;\n}\nfunction Root(props) {\n    const { theme, className, style, colors, mode, title, Pre: Pre2 } = props;\n    const { foreground } = colors;\n    const themeName = getThemeName(theme);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        \"data-bright-theme\": themeName,\n        \"data-bright-mode\": mode,\n        className,\n        style: {\n            color: foreground,\n            borderRadius: \"4px\",\n            overflow: \"hidden\",\n            margin: \"1em 0\",\n            [\"--selection-background\"]: colors.editor.selectionBackground,\n            [\"--line-number-color\"]: colors.editorLineNumber.foreground,\n            [\"--tab-border\"]: colors.tab.border,\n            [\"--tab-background\"]: colors.tab.activeBackground,\n            [\"--tab-color\"]: colors.tab.activeForeground,\n            [\"--inactive-tab-background\"]: colors.tab.inactiveBackground,\n            [\"--inactive-tab-color\"]: colors.tab.inactiveForeground,\n            [\"--tab-top-border\"]: colors.tab.activeBorderTop,\n            [\"--tab-bottom-border\"]: colors.tab.activeBorder,\n            colorScheme: colors.colorScheme,\n            ...style\n        },\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Style, {\n                mode,\n                lineNumbers: props.lineNumbers,\n                lightThemeSelector: props.lightThemeSelector\n            }),\n            title && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TitleBar, {\n                ...props\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Pre2, {\n                ...props\n            })\n        ]\n    });\n}\nfunction Pre(brightProps) {\n    const { lines, codeClassName, colors } = brightProps;\n    const { foreground, background } = colors;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"pre\", {\n        style: {\n            margin: 0,\n            color: foreground,\n            background,\n            padding: \"1em 0\",\n            overflow: \"auto\"\n        },\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n            className: codeClassName,\n            style: {\n                display: \"block\",\n                minWidth: \"fit-content\"\n            },\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(LinesComponent, {\n                lines,\n                brightProps\n            })\n        })\n    });\n}\nfunction Style({ mode, lineNumbers, lightThemeSelector }) {\n    const lineNumbersStyle = `[data-bright-theme] [data-bright-ln] { \n    color: var(--line-number-color); \n    margin-right: 1.5ch; \n    display: inline-block;\n    text-align: right;\n    user-select: none;\n  }`;\n    const css = `${displayStyle(mode, lightThemeSelector)}\n  [data-bright-theme] ::selection { background-color: var(--selection-background) }\n  ${lineNumbers ? lineNumbersStyle : \"\"}\n  `;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: css\n        }\n    });\n}\nfunction displayStyle(mode, lightThemeSelector = '[data-theme=\"light\"]') {\n    if (!mode) return \"\";\n    if (mode === \"dark\") return `[data-bright-mode=\"dark\"] { display: block }\n${lightThemeSelector} [data-bright-mode=\"dark\"] { display: none }`;\n    if (mode === \"light\") return `[data-bright-mode=\"light\"] { display: none }\n${lightThemeSelector} [data-bright-mode=\"light\"] { display: block }`;\n    return \"\";\n}\nfunction getThemeName(theme) {\n    if (!theme) return \"default\";\n    if (typeof theme === \"string\") return theme;\n    return theme.name;\n}\n// src/components.tsx\nvar components = {\n    Pre,\n    Root,\n    TitleBarContent,\n    Tab,\n    TabContent\n};\nvar components_default = components;\n// src/index.tsx\n\n\n\nvar Code = async (componentProps)=>{\n    const { children, lang, ...rest } = {\n        ...Code,\n        ...componentProps\n    };\n    const propsFromChildren = parseChildren(children, lang, rest.code);\n    let props = {\n        ...rest,\n        ...propsFromChildren\n    };\n    const { theme } = props;\n    const isDouble = theme && theme.dark && theme.light || false;\n    if (!isDouble) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AnnotatedCode, {\n            ...props,\n            theme\n        });\n    }\n    const doubleTheme = theme;\n    const darkTheme = doubleTheme.dark;\n    const lightTheme = doubleTheme.light;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AnnotatedCode, {\n                ...props,\n                theme: darkTheme,\n                mode: \"dark\",\n                lightThemeSelector: doubleTheme.lightSelector\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AnnotatedCode, {\n                ...props,\n                theme: lightTheme,\n                mode: \"light\",\n                lightThemeSelector: doubleTheme.lightSelector\n            })\n        ]\n    });\n};\nasync function AnnotatedCode(props) {\n    let newProps = await extractAnnotationsFromCode(props);\n    newProps = runExtensionsBeforeHighlight(newProps);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(BrightCode, {\n        ...newProps\n    });\n}\nCode.theme = \"dark-plus\";\nCode.extensions = [];\nObject.assign(Code, components_default);\nasync function extractAnnotationsFromCode(props) {\n    if (props.subProps) {\n        const { subProps, ...rootProps } = props;\n        return {\n            ...rootProps,\n            subProps: await Promise.all(subProps.map((sub)=>extractAnnotationsFromCode({\n                    ...rootProps,\n                    ...sub\n                })))\n        };\n    }\n    const { extensions, code, lang } = props;\n    const extensionNames = extensions.map((e)=>{\n        if (!e || !e.name) {\n            throw new Error(\"Extension must have a name\");\n        }\n        return e.name;\n    });\n    const { code: newCode, annotations } = await (0,_code_hike_lighter__WEBPACK_IMPORTED_MODULE_0__.extractAnnotations)(code, lang, extensionNames);\n    const inputAnnotations = props.annotations || [];\n    const newProps = {\n        ...props,\n        code: newCode,\n        annotations: inputAnnotations.concat(annotations)\n    };\n    return newProps;\n}\nfunction runExtensionsBeforeHighlight(props) {\n    let newProps = props;\n    const { extensions, annotations = [] } = props;\n    extensions.forEach((extension)=>{\n        const { Pre: Pre2, Root: Root2, TitleBarContent: TitleBarContent2, Tab: Tab2, TabContent: TabContent2 } = extension;\n        newProps = {\n            ...newProps,\n            Pre: Pre2 || newProps.Pre,\n            Root: Root2 || newProps.Root,\n            TitleBarContent: TitleBarContent2 || newProps.TitleBarContent,\n            Tab: Tab2 || newProps.Tab,\n            TabContent: TabContent2 || newProps.TabContent\n        };\n    });\n    if (props.subProps) {\n        extensions.forEach((extension)=>{\n            const { name } = extension;\n            if (\"beforeRoot\" in extension && typeof extension.beforeRoot === \"function\") {\n                const extensionAnnotations = annotations.filter((annotation)=>annotation.name === name);\n                newProps = extension.beforeRoot(newProps, extensionAnnotations) || newProps;\n            }\n        });\n        const { subProps, ...rootProps } = newProps;\n        return {\n            ...rootProps,\n            subProps: (subProps || []).map((sub)=>runExtensionsBeforeHighlight({\n                    ...rootProps,\n                    ...sub\n                }))\n        };\n    }\n    extensions.forEach((extension)=>{\n        const { name } = extension;\n        if (\"beforeHighlight\" in extension && typeof extension.beforeHighlight === \"function\") {\n            const extensionAnnotations = annotations.filter((annotation)=>annotation.name === name);\n            newProps = extension.beforeHighlight(newProps, extensionAnnotations) || newProps;\n        }\n    });\n    return newProps;\n}\nfunction trimTrailingNewline(code) {\n    var _a;\n    return (_a = code == null ? void 0 : code.replace(/\\n$/, \"\")) != null ? _a : void 0;\n}\nfunction parseChildren(children, lang, code) {\n    var _a, _b, _c;\n    if (typeof children === \"string\" || code) {\n        let newLang2 = lang || \"text\";\n        if (!_code_hike_lighter__WEBPACK_IMPORTED_MODULE_0__.LANG_NAMES.includes(newLang2)) {\n            console.warn(`Bright warning: Unknown language ${JSON.stringify(lang)}`);\n            newLang2 = \"text\";\n        }\n        return {\n            code: children || code || \"\",\n            lang: newLang2\n        };\n    }\n    if (typeof children === \"object\" && typeof ((_a = children == null ? void 0 : children.props) == null ? void 0 : _a.children) === \"string\") {\n        return {\n            code: trimTrailingNewline((_b = children.props) == null ? void 0 : _b.children),\n            ...getLanguageAndTitle((_c = children.props) == null ? void 0 : _c.className)\n        };\n    }\n    if (typeof children === \"object\") {\n        const subProps = react__WEBPACK_IMPORTED_MODULE_2__.Children.toArray(children).map((c)=>{\n            var _a2;\n            const codeElement = (_a2 = c.props) == null ? void 0 : _a2.children;\n            const codeProps = codeElement == null ? void 0 : codeElement.props;\n            return {\n                code: trimTrailingNewline(codeProps.children),\n                ...getLanguageAndTitle(codeProps.className)\n            };\n        });\n        return {\n            subProps\n        };\n    }\n    let newLang = lang || \"text\";\n    if (!_code_hike_lighter__WEBPACK_IMPORTED_MODULE_0__.LANG_NAMES.includes(newLang)) {\n        console.warn(`Bright warning: Unknown language ${JSON.stringify(lang)}`);\n        newLang = \"text\";\n    }\n    return {\n        code: children || code || \"\",\n        lang: newLang\n    };\n}\nfunction getLanguageAndTitle(className) {\n    if (!className) {\n        return {\n            lang: \"text\"\n        };\n    }\n    const metastring = className.replace(\"language-\", \"\");\n    const lang = metastring.split(\".\").pop();\n    if (!_code_hike_lighter__WEBPACK_IMPORTED_MODULE_0__.LANG_NAMES.includes(lang)) {\n        console.warn(`Bright warning: Unknown language ${JSON.stringify(lang)} in ${JSON.stringify(metastring)}`);\n        return {\n            lang: \"text\"\n        };\n    }\n    if (lang !== metastring) {\n        return {\n            lang,\n            title: metastring\n        };\n    }\n    return {\n        lang\n    };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bright/dist/index.mjs\n");

/***/ })

};
;